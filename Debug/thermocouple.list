
thermocouple.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003cec  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000005c  08003dac  08003dac  00013dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003e08  08003e08  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  08003e08  08003e08  00013e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003e10  08003e10  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003e10  08003e10  00013e10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003e14  08003e14  00013e14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08003e18  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000c8  2000000c  08003e24  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000d4  08003e24  000200d4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000af14  00000000  00000000  00020077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001a9c  00000000  00000000  0002af8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loclists 00005130  00000000  00000000  0002ca27  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000770  00000000  00000000  00031b58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000851  00000000  00000000  000322c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001085a  00000000  00000000  00032b19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000cdd4  00000000  00000000  00043373  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0006688d  00000000  00000000  00050147  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00001aa0  00000000  00000000  000b69d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000057  00000000  00000000  000b8474  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000000c 	.word	0x2000000c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08003d94 	.word	0x08003d94

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000010 	.word	0x20000010
 8000104:	08003d94 	.word	0x08003d94

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <__aeabi_cfrcmple>:
 8000220:	4684      	mov	ip, r0
 8000222:	0008      	movs	r0, r1
 8000224:	4661      	mov	r1, ip
 8000226:	e7ff      	b.n	8000228 <__aeabi_cfcmpeq>

08000228 <__aeabi_cfcmpeq>:
 8000228:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800022a:	f000 f9d7 	bl	80005dc <__lesf2>
 800022e:	2800      	cmp	r0, #0
 8000230:	d401      	bmi.n	8000236 <__aeabi_cfcmpeq+0xe>
 8000232:	2100      	movs	r1, #0
 8000234:	42c8      	cmn	r0, r1
 8000236:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000238 <__aeabi_fcmpeq>:
 8000238:	b510      	push	{r4, lr}
 800023a:	f000 f963 	bl	8000504 <__eqsf2>
 800023e:	4240      	negs	r0, r0
 8000240:	3001      	adds	r0, #1
 8000242:	bd10      	pop	{r4, pc}

08000244 <__aeabi_fcmplt>:
 8000244:	b510      	push	{r4, lr}
 8000246:	f000 f9c9 	bl	80005dc <__lesf2>
 800024a:	2800      	cmp	r0, #0
 800024c:	db01      	blt.n	8000252 <__aeabi_fcmplt+0xe>
 800024e:	2000      	movs	r0, #0
 8000250:	bd10      	pop	{r4, pc}
 8000252:	2001      	movs	r0, #1
 8000254:	bd10      	pop	{r4, pc}
 8000256:	46c0      	nop			; (mov r8, r8)

08000258 <__aeabi_fcmple>:
 8000258:	b510      	push	{r4, lr}
 800025a:	f000 f9bf 	bl	80005dc <__lesf2>
 800025e:	2800      	cmp	r0, #0
 8000260:	dd01      	ble.n	8000266 <__aeabi_fcmple+0xe>
 8000262:	2000      	movs	r0, #0
 8000264:	bd10      	pop	{r4, pc}
 8000266:	2001      	movs	r0, #1
 8000268:	bd10      	pop	{r4, pc}
 800026a:	46c0      	nop			; (mov r8, r8)

0800026c <__aeabi_fcmpgt>:
 800026c:	b510      	push	{r4, lr}
 800026e:	f000 f96f 	bl	8000550 <__gesf2>
 8000272:	2800      	cmp	r0, #0
 8000274:	dc01      	bgt.n	800027a <__aeabi_fcmpgt+0xe>
 8000276:	2000      	movs	r0, #0
 8000278:	bd10      	pop	{r4, pc}
 800027a:	2001      	movs	r0, #1
 800027c:	bd10      	pop	{r4, pc}
 800027e:	46c0      	nop			; (mov r8, r8)

08000280 <__aeabi_fcmpge>:
 8000280:	b510      	push	{r4, lr}
 8000282:	f000 f965 	bl	8000550 <__gesf2>
 8000286:	2800      	cmp	r0, #0
 8000288:	da01      	bge.n	800028e <__aeabi_fcmpge+0xe>
 800028a:	2000      	movs	r0, #0
 800028c:	bd10      	pop	{r4, pc}
 800028e:	2001      	movs	r0, #1
 8000290:	bd10      	pop	{r4, pc}
 8000292:	46c0      	nop			; (mov r8, r8)

08000294 <__aeabi_uldivmod>:
 8000294:	2b00      	cmp	r3, #0
 8000296:	d111      	bne.n	80002bc <__aeabi_uldivmod+0x28>
 8000298:	2a00      	cmp	r2, #0
 800029a:	d10f      	bne.n	80002bc <__aeabi_uldivmod+0x28>
 800029c:	2900      	cmp	r1, #0
 800029e:	d100      	bne.n	80002a2 <__aeabi_uldivmod+0xe>
 80002a0:	2800      	cmp	r0, #0
 80002a2:	d002      	beq.n	80002aa <__aeabi_uldivmod+0x16>
 80002a4:	2100      	movs	r1, #0
 80002a6:	43c9      	mvns	r1, r1
 80002a8:	0008      	movs	r0, r1
 80002aa:	b407      	push	{r0, r1, r2}
 80002ac:	4802      	ldr	r0, [pc, #8]	; (80002b8 <__aeabi_uldivmod+0x24>)
 80002ae:	a102      	add	r1, pc, #8	; (adr r1, 80002b8 <__aeabi_uldivmod+0x24>)
 80002b0:	1840      	adds	r0, r0, r1
 80002b2:	9002      	str	r0, [sp, #8]
 80002b4:	bd03      	pop	{r0, r1, pc}
 80002b6:	46c0      	nop			; (mov r8, r8)
 80002b8:	ffffff65 	.word	0xffffff65
 80002bc:	b403      	push	{r0, r1}
 80002be:	4668      	mov	r0, sp
 80002c0:	b501      	push	{r0, lr}
 80002c2:	9802      	ldr	r0, [sp, #8]
 80002c4:	f000 f852 	bl	800036c <__udivmoddi4>
 80002c8:	9b01      	ldr	r3, [sp, #4]
 80002ca:	469e      	mov	lr, r3
 80002cc:	b002      	add	sp, #8
 80002ce:	bc0c      	pop	{r2, r3}
 80002d0:	4770      	bx	lr
 80002d2:	46c0      	nop			; (mov r8, r8)

080002d4 <__aeabi_lmul>:
 80002d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002d6:	46ce      	mov	lr, r9
 80002d8:	4699      	mov	r9, r3
 80002da:	0c03      	lsrs	r3, r0, #16
 80002dc:	469c      	mov	ip, r3
 80002de:	0413      	lsls	r3, r2, #16
 80002e0:	4647      	mov	r7, r8
 80002e2:	0c1b      	lsrs	r3, r3, #16
 80002e4:	001d      	movs	r5, r3
 80002e6:	000e      	movs	r6, r1
 80002e8:	4661      	mov	r1, ip
 80002ea:	0404      	lsls	r4, r0, #16
 80002ec:	0c24      	lsrs	r4, r4, #16
 80002ee:	b580      	push	{r7, lr}
 80002f0:	0007      	movs	r7, r0
 80002f2:	0c10      	lsrs	r0, r2, #16
 80002f4:	434b      	muls	r3, r1
 80002f6:	4365      	muls	r5, r4
 80002f8:	4341      	muls	r1, r0
 80002fa:	4360      	muls	r0, r4
 80002fc:	0c2c      	lsrs	r4, r5, #16
 80002fe:	18c0      	adds	r0, r0, r3
 8000300:	1820      	adds	r0, r4, r0
 8000302:	468c      	mov	ip, r1
 8000304:	4283      	cmp	r3, r0
 8000306:	d903      	bls.n	8000310 <__aeabi_lmul+0x3c>
 8000308:	2380      	movs	r3, #128	; 0x80
 800030a:	025b      	lsls	r3, r3, #9
 800030c:	4698      	mov	r8, r3
 800030e:	44c4      	add	ip, r8
 8000310:	4649      	mov	r1, r9
 8000312:	4379      	muls	r1, r7
 8000314:	4356      	muls	r6, r2
 8000316:	0c03      	lsrs	r3, r0, #16
 8000318:	042d      	lsls	r5, r5, #16
 800031a:	0c2d      	lsrs	r5, r5, #16
 800031c:	1989      	adds	r1, r1, r6
 800031e:	4463      	add	r3, ip
 8000320:	0400      	lsls	r0, r0, #16
 8000322:	1940      	adds	r0, r0, r5
 8000324:	18c9      	adds	r1, r1, r3
 8000326:	bcc0      	pop	{r6, r7}
 8000328:	46b9      	mov	r9, r7
 800032a:	46b0      	mov	r8, r6
 800032c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800032e:	46c0      	nop			; (mov r8, r8)

08000330 <__aeabi_d2uiz>:
 8000330:	b570      	push	{r4, r5, r6, lr}
 8000332:	2200      	movs	r2, #0
 8000334:	4b0c      	ldr	r3, [pc, #48]	; (8000368 <__aeabi_d2uiz+0x38>)
 8000336:	0004      	movs	r4, r0
 8000338:	000d      	movs	r5, r1
 800033a:	f001 ff99 	bl	8002270 <__aeabi_dcmpge>
 800033e:	2800      	cmp	r0, #0
 8000340:	d104      	bne.n	800034c <__aeabi_d2uiz+0x1c>
 8000342:	0020      	movs	r0, r4
 8000344:	0029      	movs	r1, r5
 8000346:	f001 fe35 	bl	8001fb4 <__aeabi_d2iz>
 800034a:	bd70      	pop	{r4, r5, r6, pc}
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <__aeabi_d2uiz+0x38>)
 800034e:	2200      	movs	r2, #0
 8000350:	0020      	movs	r0, r4
 8000352:	0029      	movs	r1, r5
 8000354:	f001 faac 	bl	80018b0 <__aeabi_dsub>
 8000358:	f001 fe2c 	bl	8001fb4 <__aeabi_d2iz>
 800035c:	2380      	movs	r3, #128	; 0x80
 800035e:	061b      	lsls	r3, r3, #24
 8000360:	469c      	mov	ip, r3
 8000362:	4460      	add	r0, ip
 8000364:	e7f1      	b.n	800034a <__aeabi_d2uiz+0x1a>
 8000366:	46c0      	nop			; (mov r8, r8)
 8000368:	41e00000 	.word	0x41e00000

0800036c <__udivmoddi4>:
 800036c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800036e:	4657      	mov	r7, sl
 8000370:	464e      	mov	r6, r9
 8000372:	4645      	mov	r5, r8
 8000374:	46de      	mov	lr, fp
 8000376:	b5e0      	push	{r5, r6, r7, lr}
 8000378:	0004      	movs	r4, r0
 800037a:	000d      	movs	r5, r1
 800037c:	4692      	mov	sl, r2
 800037e:	4699      	mov	r9, r3
 8000380:	b083      	sub	sp, #12
 8000382:	428b      	cmp	r3, r1
 8000384:	d830      	bhi.n	80003e8 <__udivmoddi4+0x7c>
 8000386:	d02d      	beq.n	80003e4 <__udivmoddi4+0x78>
 8000388:	4649      	mov	r1, r9
 800038a:	4650      	mov	r0, sl
 800038c:	f001 ff98 	bl	80022c0 <__clzdi2>
 8000390:	0029      	movs	r1, r5
 8000392:	0006      	movs	r6, r0
 8000394:	0020      	movs	r0, r4
 8000396:	f001 ff93 	bl	80022c0 <__clzdi2>
 800039a:	1a33      	subs	r3, r6, r0
 800039c:	4698      	mov	r8, r3
 800039e:	3b20      	subs	r3, #32
 80003a0:	d434      	bmi.n	800040c <__udivmoddi4+0xa0>
 80003a2:	469b      	mov	fp, r3
 80003a4:	4653      	mov	r3, sl
 80003a6:	465a      	mov	r2, fp
 80003a8:	4093      	lsls	r3, r2
 80003aa:	4642      	mov	r2, r8
 80003ac:	001f      	movs	r7, r3
 80003ae:	4653      	mov	r3, sl
 80003b0:	4093      	lsls	r3, r2
 80003b2:	001e      	movs	r6, r3
 80003b4:	42af      	cmp	r7, r5
 80003b6:	d83b      	bhi.n	8000430 <__udivmoddi4+0xc4>
 80003b8:	42af      	cmp	r7, r5
 80003ba:	d100      	bne.n	80003be <__udivmoddi4+0x52>
 80003bc:	e079      	b.n	80004b2 <__udivmoddi4+0x146>
 80003be:	465b      	mov	r3, fp
 80003c0:	1ba4      	subs	r4, r4, r6
 80003c2:	41bd      	sbcs	r5, r7
 80003c4:	2b00      	cmp	r3, #0
 80003c6:	da00      	bge.n	80003ca <__udivmoddi4+0x5e>
 80003c8:	e076      	b.n	80004b8 <__udivmoddi4+0x14c>
 80003ca:	2200      	movs	r2, #0
 80003cc:	2300      	movs	r3, #0
 80003ce:	9200      	str	r2, [sp, #0]
 80003d0:	9301      	str	r3, [sp, #4]
 80003d2:	2301      	movs	r3, #1
 80003d4:	465a      	mov	r2, fp
 80003d6:	4093      	lsls	r3, r2
 80003d8:	9301      	str	r3, [sp, #4]
 80003da:	2301      	movs	r3, #1
 80003dc:	4642      	mov	r2, r8
 80003de:	4093      	lsls	r3, r2
 80003e0:	9300      	str	r3, [sp, #0]
 80003e2:	e029      	b.n	8000438 <__udivmoddi4+0xcc>
 80003e4:	4282      	cmp	r2, r0
 80003e6:	d9cf      	bls.n	8000388 <__udivmoddi4+0x1c>
 80003e8:	2200      	movs	r2, #0
 80003ea:	2300      	movs	r3, #0
 80003ec:	9200      	str	r2, [sp, #0]
 80003ee:	9301      	str	r3, [sp, #4]
 80003f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d001      	beq.n	80003fa <__udivmoddi4+0x8e>
 80003f6:	601c      	str	r4, [r3, #0]
 80003f8:	605d      	str	r5, [r3, #4]
 80003fa:	9800      	ldr	r0, [sp, #0]
 80003fc:	9901      	ldr	r1, [sp, #4]
 80003fe:	b003      	add	sp, #12
 8000400:	bcf0      	pop	{r4, r5, r6, r7}
 8000402:	46bb      	mov	fp, r7
 8000404:	46b2      	mov	sl, r6
 8000406:	46a9      	mov	r9, r5
 8000408:	46a0      	mov	r8, r4
 800040a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800040c:	4642      	mov	r2, r8
 800040e:	469b      	mov	fp, r3
 8000410:	2320      	movs	r3, #32
 8000412:	1a9b      	subs	r3, r3, r2
 8000414:	4652      	mov	r2, sl
 8000416:	40da      	lsrs	r2, r3
 8000418:	4641      	mov	r1, r8
 800041a:	0013      	movs	r3, r2
 800041c:	464a      	mov	r2, r9
 800041e:	408a      	lsls	r2, r1
 8000420:	0017      	movs	r7, r2
 8000422:	4642      	mov	r2, r8
 8000424:	431f      	orrs	r7, r3
 8000426:	4653      	mov	r3, sl
 8000428:	4093      	lsls	r3, r2
 800042a:	001e      	movs	r6, r3
 800042c:	42af      	cmp	r7, r5
 800042e:	d9c3      	bls.n	80003b8 <__udivmoddi4+0x4c>
 8000430:	2200      	movs	r2, #0
 8000432:	2300      	movs	r3, #0
 8000434:	9200      	str	r2, [sp, #0]
 8000436:	9301      	str	r3, [sp, #4]
 8000438:	4643      	mov	r3, r8
 800043a:	2b00      	cmp	r3, #0
 800043c:	d0d8      	beq.n	80003f0 <__udivmoddi4+0x84>
 800043e:	07fb      	lsls	r3, r7, #31
 8000440:	0872      	lsrs	r2, r6, #1
 8000442:	431a      	orrs	r2, r3
 8000444:	4646      	mov	r6, r8
 8000446:	087b      	lsrs	r3, r7, #1
 8000448:	e00e      	b.n	8000468 <__udivmoddi4+0xfc>
 800044a:	42ab      	cmp	r3, r5
 800044c:	d101      	bne.n	8000452 <__udivmoddi4+0xe6>
 800044e:	42a2      	cmp	r2, r4
 8000450:	d80c      	bhi.n	800046c <__udivmoddi4+0x100>
 8000452:	1aa4      	subs	r4, r4, r2
 8000454:	419d      	sbcs	r5, r3
 8000456:	2001      	movs	r0, #1
 8000458:	1924      	adds	r4, r4, r4
 800045a:	416d      	adcs	r5, r5
 800045c:	2100      	movs	r1, #0
 800045e:	3e01      	subs	r6, #1
 8000460:	1824      	adds	r4, r4, r0
 8000462:	414d      	adcs	r5, r1
 8000464:	2e00      	cmp	r6, #0
 8000466:	d006      	beq.n	8000476 <__udivmoddi4+0x10a>
 8000468:	42ab      	cmp	r3, r5
 800046a:	d9ee      	bls.n	800044a <__udivmoddi4+0xde>
 800046c:	3e01      	subs	r6, #1
 800046e:	1924      	adds	r4, r4, r4
 8000470:	416d      	adcs	r5, r5
 8000472:	2e00      	cmp	r6, #0
 8000474:	d1f8      	bne.n	8000468 <__udivmoddi4+0xfc>
 8000476:	9800      	ldr	r0, [sp, #0]
 8000478:	9901      	ldr	r1, [sp, #4]
 800047a:	465b      	mov	r3, fp
 800047c:	1900      	adds	r0, r0, r4
 800047e:	4169      	adcs	r1, r5
 8000480:	2b00      	cmp	r3, #0
 8000482:	db24      	blt.n	80004ce <__udivmoddi4+0x162>
 8000484:	002b      	movs	r3, r5
 8000486:	465a      	mov	r2, fp
 8000488:	4644      	mov	r4, r8
 800048a:	40d3      	lsrs	r3, r2
 800048c:	002a      	movs	r2, r5
 800048e:	40e2      	lsrs	r2, r4
 8000490:	001c      	movs	r4, r3
 8000492:	465b      	mov	r3, fp
 8000494:	0015      	movs	r5, r2
 8000496:	2b00      	cmp	r3, #0
 8000498:	db2a      	blt.n	80004f0 <__udivmoddi4+0x184>
 800049a:	0026      	movs	r6, r4
 800049c:	409e      	lsls	r6, r3
 800049e:	0033      	movs	r3, r6
 80004a0:	0026      	movs	r6, r4
 80004a2:	4647      	mov	r7, r8
 80004a4:	40be      	lsls	r6, r7
 80004a6:	0032      	movs	r2, r6
 80004a8:	1a80      	subs	r0, r0, r2
 80004aa:	4199      	sbcs	r1, r3
 80004ac:	9000      	str	r0, [sp, #0]
 80004ae:	9101      	str	r1, [sp, #4]
 80004b0:	e79e      	b.n	80003f0 <__udivmoddi4+0x84>
 80004b2:	42a3      	cmp	r3, r4
 80004b4:	d8bc      	bhi.n	8000430 <__udivmoddi4+0xc4>
 80004b6:	e782      	b.n	80003be <__udivmoddi4+0x52>
 80004b8:	4642      	mov	r2, r8
 80004ba:	2320      	movs	r3, #32
 80004bc:	2100      	movs	r1, #0
 80004be:	1a9b      	subs	r3, r3, r2
 80004c0:	2200      	movs	r2, #0
 80004c2:	9100      	str	r1, [sp, #0]
 80004c4:	9201      	str	r2, [sp, #4]
 80004c6:	2201      	movs	r2, #1
 80004c8:	40da      	lsrs	r2, r3
 80004ca:	9201      	str	r2, [sp, #4]
 80004cc:	e785      	b.n	80003da <__udivmoddi4+0x6e>
 80004ce:	4642      	mov	r2, r8
 80004d0:	2320      	movs	r3, #32
 80004d2:	1a9b      	subs	r3, r3, r2
 80004d4:	002a      	movs	r2, r5
 80004d6:	4646      	mov	r6, r8
 80004d8:	409a      	lsls	r2, r3
 80004da:	0023      	movs	r3, r4
 80004dc:	40f3      	lsrs	r3, r6
 80004de:	4644      	mov	r4, r8
 80004e0:	4313      	orrs	r3, r2
 80004e2:	002a      	movs	r2, r5
 80004e4:	40e2      	lsrs	r2, r4
 80004e6:	001c      	movs	r4, r3
 80004e8:	465b      	mov	r3, fp
 80004ea:	0015      	movs	r5, r2
 80004ec:	2b00      	cmp	r3, #0
 80004ee:	dad4      	bge.n	800049a <__udivmoddi4+0x12e>
 80004f0:	4642      	mov	r2, r8
 80004f2:	002f      	movs	r7, r5
 80004f4:	2320      	movs	r3, #32
 80004f6:	0026      	movs	r6, r4
 80004f8:	4097      	lsls	r7, r2
 80004fa:	1a9b      	subs	r3, r3, r2
 80004fc:	40de      	lsrs	r6, r3
 80004fe:	003b      	movs	r3, r7
 8000500:	4333      	orrs	r3, r6
 8000502:	e7cd      	b.n	80004a0 <__udivmoddi4+0x134>

08000504 <__eqsf2>:
 8000504:	b570      	push	{r4, r5, r6, lr}
 8000506:	0042      	lsls	r2, r0, #1
 8000508:	0245      	lsls	r5, r0, #9
 800050a:	024e      	lsls	r6, r1, #9
 800050c:	004c      	lsls	r4, r1, #1
 800050e:	0fc3      	lsrs	r3, r0, #31
 8000510:	0a6d      	lsrs	r5, r5, #9
 8000512:	2001      	movs	r0, #1
 8000514:	0e12      	lsrs	r2, r2, #24
 8000516:	0a76      	lsrs	r6, r6, #9
 8000518:	0e24      	lsrs	r4, r4, #24
 800051a:	0fc9      	lsrs	r1, r1, #31
 800051c:	2aff      	cmp	r2, #255	; 0xff
 800051e:	d006      	beq.n	800052e <__eqsf2+0x2a>
 8000520:	2cff      	cmp	r4, #255	; 0xff
 8000522:	d003      	beq.n	800052c <__eqsf2+0x28>
 8000524:	42a2      	cmp	r2, r4
 8000526:	d101      	bne.n	800052c <__eqsf2+0x28>
 8000528:	42b5      	cmp	r5, r6
 800052a:	d006      	beq.n	800053a <__eqsf2+0x36>
 800052c:	bd70      	pop	{r4, r5, r6, pc}
 800052e:	2d00      	cmp	r5, #0
 8000530:	d1fc      	bne.n	800052c <__eqsf2+0x28>
 8000532:	2cff      	cmp	r4, #255	; 0xff
 8000534:	d1fa      	bne.n	800052c <__eqsf2+0x28>
 8000536:	2e00      	cmp	r6, #0
 8000538:	d1f8      	bne.n	800052c <__eqsf2+0x28>
 800053a:	428b      	cmp	r3, r1
 800053c:	d006      	beq.n	800054c <__eqsf2+0x48>
 800053e:	2001      	movs	r0, #1
 8000540:	2a00      	cmp	r2, #0
 8000542:	d1f3      	bne.n	800052c <__eqsf2+0x28>
 8000544:	0028      	movs	r0, r5
 8000546:	1e43      	subs	r3, r0, #1
 8000548:	4198      	sbcs	r0, r3
 800054a:	e7ef      	b.n	800052c <__eqsf2+0x28>
 800054c:	2000      	movs	r0, #0
 800054e:	e7ed      	b.n	800052c <__eqsf2+0x28>

08000550 <__gesf2>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	0042      	lsls	r2, r0, #1
 8000554:	0245      	lsls	r5, r0, #9
 8000556:	024e      	lsls	r6, r1, #9
 8000558:	004c      	lsls	r4, r1, #1
 800055a:	0fc3      	lsrs	r3, r0, #31
 800055c:	0a6d      	lsrs	r5, r5, #9
 800055e:	0e12      	lsrs	r2, r2, #24
 8000560:	0a76      	lsrs	r6, r6, #9
 8000562:	0e24      	lsrs	r4, r4, #24
 8000564:	0fc8      	lsrs	r0, r1, #31
 8000566:	2aff      	cmp	r2, #255	; 0xff
 8000568:	d01b      	beq.n	80005a2 <__gesf2+0x52>
 800056a:	2cff      	cmp	r4, #255	; 0xff
 800056c:	d00e      	beq.n	800058c <__gesf2+0x3c>
 800056e:	2a00      	cmp	r2, #0
 8000570:	d11b      	bne.n	80005aa <__gesf2+0x5a>
 8000572:	2c00      	cmp	r4, #0
 8000574:	d101      	bne.n	800057a <__gesf2+0x2a>
 8000576:	2e00      	cmp	r6, #0
 8000578:	d01c      	beq.n	80005b4 <__gesf2+0x64>
 800057a:	2d00      	cmp	r5, #0
 800057c:	d00c      	beq.n	8000598 <__gesf2+0x48>
 800057e:	4283      	cmp	r3, r0
 8000580:	d01c      	beq.n	80005bc <__gesf2+0x6c>
 8000582:	2102      	movs	r1, #2
 8000584:	1e58      	subs	r0, r3, #1
 8000586:	4008      	ands	r0, r1
 8000588:	3801      	subs	r0, #1
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	2e00      	cmp	r6, #0
 800058e:	d122      	bne.n	80005d6 <__gesf2+0x86>
 8000590:	2a00      	cmp	r2, #0
 8000592:	d1f4      	bne.n	800057e <__gesf2+0x2e>
 8000594:	2d00      	cmp	r5, #0
 8000596:	d1f2      	bne.n	800057e <__gesf2+0x2e>
 8000598:	2800      	cmp	r0, #0
 800059a:	d1f6      	bne.n	800058a <__gesf2+0x3a>
 800059c:	2001      	movs	r0, #1
 800059e:	4240      	negs	r0, r0
 80005a0:	e7f3      	b.n	800058a <__gesf2+0x3a>
 80005a2:	2d00      	cmp	r5, #0
 80005a4:	d117      	bne.n	80005d6 <__gesf2+0x86>
 80005a6:	2cff      	cmp	r4, #255	; 0xff
 80005a8:	d0f0      	beq.n	800058c <__gesf2+0x3c>
 80005aa:	2c00      	cmp	r4, #0
 80005ac:	d1e7      	bne.n	800057e <__gesf2+0x2e>
 80005ae:	2e00      	cmp	r6, #0
 80005b0:	d1e5      	bne.n	800057e <__gesf2+0x2e>
 80005b2:	e7e6      	b.n	8000582 <__gesf2+0x32>
 80005b4:	2000      	movs	r0, #0
 80005b6:	2d00      	cmp	r5, #0
 80005b8:	d0e7      	beq.n	800058a <__gesf2+0x3a>
 80005ba:	e7e2      	b.n	8000582 <__gesf2+0x32>
 80005bc:	42a2      	cmp	r2, r4
 80005be:	dc05      	bgt.n	80005cc <__gesf2+0x7c>
 80005c0:	dbea      	blt.n	8000598 <__gesf2+0x48>
 80005c2:	42b5      	cmp	r5, r6
 80005c4:	d802      	bhi.n	80005cc <__gesf2+0x7c>
 80005c6:	d3e7      	bcc.n	8000598 <__gesf2+0x48>
 80005c8:	2000      	movs	r0, #0
 80005ca:	e7de      	b.n	800058a <__gesf2+0x3a>
 80005cc:	4243      	negs	r3, r0
 80005ce:	4158      	adcs	r0, r3
 80005d0:	0040      	lsls	r0, r0, #1
 80005d2:	3801      	subs	r0, #1
 80005d4:	e7d9      	b.n	800058a <__gesf2+0x3a>
 80005d6:	2002      	movs	r0, #2
 80005d8:	4240      	negs	r0, r0
 80005da:	e7d6      	b.n	800058a <__gesf2+0x3a>

080005dc <__lesf2>:
 80005dc:	b570      	push	{r4, r5, r6, lr}
 80005de:	0042      	lsls	r2, r0, #1
 80005e0:	0245      	lsls	r5, r0, #9
 80005e2:	024e      	lsls	r6, r1, #9
 80005e4:	004c      	lsls	r4, r1, #1
 80005e6:	0fc3      	lsrs	r3, r0, #31
 80005e8:	0a6d      	lsrs	r5, r5, #9
 80005ea:	0e12      	lsrs	r2, r2, #24
 80005ec:	0a76      	lsrs	r6, r6, #9
 80005ee:	0e24      	lsrs	r4, r4, #24
 80005f0:	0fc8      	lsrs	r0, r1, #31
 80005f2:	2aff      	cmp	r2, #255	; 0xff
 80005f4:	d00b      	beq.n	800060e <__lesf2+0x32>
 80005f6:	2cff      	cmp	r4, #255	; 0xff
 80005f8:	d00d      	beq.n	8000616 <__lesf2+0x3a>
 80005fa:	2a00      	cmp	r2, #0
 80005fc:	d11f      	bne.n	800063e <__lesf2+0x62>
 80005fe:	2c00      	cmp	r4, #0
 8000600:	d116      	bne.n	8000630 <__lesf2+0x54>
 8000602:	2e00      	cmp	r6, #0
 8000604:	d114      	bne.n	8000630 <__lesf2+0x54>
 8000606:	2000      	movs	r0, #0
 8000608:	2d00      	cmp	r5, #0
 800060a:	d010      	beq.n	800062e <__lesf2+0x52>
 800060c:	e009      	b.n	8000622 <__lesf2+0x46>
 800060e:	2d00      	cmp	r5, #0
 8000610:	d10c      	bne.n	800062c <__lesf2+0x50>
 8000612:	2cff      	cmp	r4, #255	; 0xff
 8000614:	d113      	bne.n	800063e <__lesf2+0x62>
 8000616:	2e00      	cmp	r6, #0
 8000618:	d108      	bne.n	800062c <__lesf2+0x50>
 800061a:	2a00      	cmp	r2, #0
 800061c:	d008      	beq.n	8000630 <__lesf2+0x54>
 800061e:	4283      	cmp	r3, r0
 8000620:	d012      	beq.n	8000648 <__lesf2+0x6c>
 8000622:	2102      	movs	r1, #2
 8000624:	1e58      	subs	r0, r3, #1
 8000626:	4008      	ands	r0, r1
 8000628:	3801      	subs	r0, #1
 800062a:	e000      	b.n	800062e <__lesf2+0x52>
 800062c:	2002      	movs	r0, #2
 800062e:	bd70      	pop	{r4, r5, r6, pc}
 8000630:	2d00      	cmp	r5, #0
 8000632:	d1f4      	bne.n	800061e <__lesf2+0x42>
 8000634:	2800      	cmp	r0, #0
 8000636:	d1fa      	bne.n	800062e <__lesf2+0x52>
 8000638:	2001      	movs	r0, #1
 800063a:	4240      	negs	r0, r0
 800063c:	e7f7      	b.n	800062e <__lesf2+0x52>
 800063e:	2c00      	cmp	r4, #0
 8000640:	d1ed      	bne.n	800061e <__lesf2+0x42>
 8000642:	2e00      	cmp	r6, #0
 8000644:	d1eb      	bne.n	800061e <__lesf2+0x42>
 8000646:	e7ec      	b.n	8000622 <__lesf2+0x46>
 8000648:	42a2      	cmp	r2, r4
 800064a:	dc05      	bgt.n	8000658 <__lesf2+0x7c>
 800064c:	dbf2      	blt.n	8000634 <__lesf2+0x58>
 800064e:	42b5      	cmp	r5, r6
 8000650:	d802      	bhi.n	8000658 <__lesf2+0x7c>
 8000652:	d3ef      	bcc.n	8000634 <__lesf2+0x58>
 8000654:	2000      	movs	r0, #0
 8000656:	e7ea      	b.n	800062e <__lesf2+0x52>
 8000658:	4243      	negs	r3, r0
 800065a:	4158      	adcs	r0, r3
 800065c:	0040      	lsls	r0, r0, #1
 800065e:	3801      	subs	r0, #1
 8000660:	e7e5      	b.n	800062e <__lesf2+0x52>
 8000662:	46c0      	nop			; (mov r8, r8)

08000664 <__aeabi_fcmpun>:
 8000664:	0243      	lsls	r3, r0, #9
 8000666:	024a      	lsls	r2, r1, #9
 8000668:	0040      	lsls	r0, r0, #1
 800066a:	0049      	lsls	r1, r1, #1
 800066c:	0a5b      	lsrs	r3, r3, #9
 800066e:	0a52      	lsrs	r2, r2, #9
 8000670:	0e09      	lsrs	r1, r1, #24
 8000672:	0e00      	lsrs	r0, r0, #24
 8000674:	28ff      	cmp	r0, #255	; 0xff
 8000676:	d006      	beq.n	8000686 <__aeabi_fcmpun+0x22>
 8000678:	2000      	movs	r0, #0
 800067a:	29ff      	cmp	r1, #255	; 0xff
 800067c:	d102      	bne.n	8000684 <__aeabi_fcmpun+0x20>
 800067e:	1e53      	subs	r3, r2, #1
 8000680:	419a      	sbcs	r2, r3
 8000682:	0010      	movs	r0, r2
 8000684:	4770      	bx	lr
 8000686:	38fe      	subs	r0, #254	; 0xfe
 8000688:	2b00      	cmp	r3, #0
 800068a:	d1fb      	bne.n	8000684 <__aeabi_fcmpun+0x20>
 800068c:	e7f4      	b.n	8000678 <__aeabi_fcmpun+0x14>
 800068e:	46c0      	nop			; (mov r8, r8)

08000690 <__aeabi_dadd>:
 8000690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000692:	464f      	mov	r7, r9
 8000694:	4646      	mov	r6, r8
 8000696:	46d6      	mov	lr, sl
 8000698:	0004      	movs	r4, r0
 800069a:	b5c0      	push	{r6, r7, lr}
 800069c:	001f      	movs	r7, r3
 800069e:	030b      	lsls	r3, r1, #12
 80006a0:	0010      	movs	r0, r2
 80006a2:	004e      	lsls	r6, r1, #1
 80006a4:	0a5b      	lsrs	r3, r3, #9
 80006a6:	0fcd      	lsrs	r5, r1, #31
 80006a8:	0f61      	lsrs	r1, r4, #29
 80006aa:	007a      	lsls	r2, r7, #1
 80006ac:	4319      	orrs	r1, r3
 80006ae:	00e3      	lsls	r3, r4, #3
 80006b0:	033c      	lsls	r4, r7, #12
 80006b2:	0fff      	lsrs	r7, r7, #31
 80006b4:	46bc      	mov	ip, r7
 80006b6:	0a64      	lsrs	r4, r4, #9
 80006b8:	0f47      	lsrs	r7, r0, #29
 80006ba:	4327      	orrs	r7, r4
 80006bc:	0d76      	lsrs	r6, r6, #21
 80006be:	0d52      	lsrs	r2, r2, #21
 80006c0:	00c0      	lsls	r0, r0, #3
 80006c2:	46b9      	mov	r9, r7
 80006c4:	4680      	mov	r8, r0
 80006c6:	1ab7      	subs	r7, r6, r2
 80006c8:	4565      	cmp	r5, ip
 80006ca:	d100      	bne.n	80006ce <__aeabi_dadd+0x3e>
 80006cc:	e09b      	b.n	8000806 <__aeabi_dadd+0x176>
 80006ce:	2f00      	cmp	r7, #0
 80006d0:	dc00      	bgt.n	80006d4 <__aeabi_dadd+0x44>
 80006d2:	e084      	b.n	80007de <__aeabi_dadd+0x14e>
 80006d4:	2a00      	cmp	r2, #0
 80006d6:	d100      	bne.n	80006da <__aeabi_dadd+0x4a>
 80006d8:	e0be      	b.n	8000858 <__aeabi_dadd+0x1c8>
 80006da:	4ac8      	ldr	r2, [pc, #800]	; (80009fc <__aeabi_dadd+0x36c>)
 80006dc:	4296      	cmp	r6, r2
 80006de:	d100      	bne.n	80006e2 <__aeabi_dadd+0x52>
 80006e0:	e124      	b.n	800092c <__aeabi_dadd+0x29c>
 80006e2:	2280      	movs	r2, #128	; 0x80
 80006e4:	464c      	mov	r4, r9
 80006e6:	0412      	lsls	r2, r2, #16
 80006e8:	4314      	orrs	r4, r2
 80006ea:	46a1      	mov	r9, r4
 80006ec:	2f38      	cmp	r7, #56	; 0x38
 80006ee:	dd00      	ble.n	80006f2 <__aeabi_dadd+0x62>
 80006f0:	e167      	b.n	80009c2 <__aeabi_dadd+0x332>
 80006f2:	2f1f      	cmp	r7, #31
 80006f4:	dd00      	ble.n	80006f8 <__aeabi_dadd+0x68>
 80006f6:	e1d6      	b.n	8000aa6 <__aeabi_dadd+0x416>
 80006f8:	2220      	movs	r2, #32
 80006fa:	464c      	mov	r4, r9
 80006fc:	1bd2      	subs	r2, r2, r7
 80006fe:	4094      	lsls	r4, r2
 8000700:	46a2      	mov	sl, r4
 8000702:	4644      	mov	r4, r8
 8000704:	40fc      	lsrs	r4, r7
 8000706:	0020      	movs	r0, r4
 8000708:	4654      	mov	r4, sl
 800070a:	4304      	orrs	r4, r0
 800070c:	4640      	mov	r0, r8
 800070e:	4090      	lsls	r0, r2
 8000710:	1e42      	subs	r2, r0, #1
 8000712:	4190      	sbcs	r0, r2
 8000714:	464a      	mov	r2, r9
 8000716:	40fa      	lsrs	r2, r7
 8000718:	4304      	orrs	r4, r0
 800071a:	1a89      	subs	r1, r1, r2
 800071c:	1b1c      	subs	r4, r3, r4
 800071e:	42a3      	cmp	r3, r4
 8000720:	4192      	sbcs	r2, r2
 8000722:	4252      	negs	r2, r2
 8000724:	1a8b      	subs	r3, r1, r2
 8000726:	469a      	mov	sl, r3
 8000728:	4653      	mov	r3, sl
 800072a:	021b      	lsls	r3, r3, #8
 800072c:	d400      	bmi.n	8000730 <__aeabi_dadd+0xa0>
 800072e:	e0d4      	b.n	80008da <__aeabi_dadd+0x24a>
 8000730:	4653      	mov	r3, sl
 8000732:	025a      	lsls	r2, r3, #9
 8000734:	0a53      	lsrs	r3, r2, #9
 8000736:	469a      	mov	sl, r3
 8000738:	4653      	mov	r3, sl
 800073a:	2b00      	cmp	r3, #0
 800073c:	d100      	bne.n	8000740 <__aeabi_dadd+0xb0>
 800073e:	e104      	b.n	800094a <__aeabi_dadd+0x2ba>
 8000740:	4650      	mov	r0, sl
 8000742:	f001 fd9f 	bl	8002284 <__clzsi2>
 8000746:	0003      	movs	r3, r0
 8000748:	3b08      	subs	r3, #8
 800074a:	2220      	movs	r2, #32
 800074c:	0020      	movs	r0, r4
 800074e:	1ad2      	subs	r2, r2, r3
 8000750:	4651      	mov	r1, sl
 8000752:	40d0      	lsrs	r0, r2
 8000754:	4099      	lsls	r1, r3
 8000756:	0002      	movs	r2, r0
 8000758:	409c      	lsls	r4, r3
 800075a:	430a      	orrs	r2, r1
 800075c:	42b3      	cmp	r3, r6
 800075e:	da00      	bge.n	8000762 <__aeabi_dadd+0xd2>
 8000760:	e102      	b.n	8000968 <__aeabi_dadd+0x2d8>
 8000762:	1b9b      	subs	r3, r3, r6
 8000764:	1c59      	adds	r1, r3, #1
 8000766:	291f      	cmp	r1, #31
 8000768:	dd00      	ble.n	800076c <__aeabi_dadd+0xdc>
 800076a:	e0a7      	b.n	80008bc <__aeabi_dadd+0x22c>
 800076c:	2320      	movs	r3, #32
 800076e:	0010      	movs	r0, r2
 8000770:	0026      	movs	r6, r4
 8000772:	1a5b      	subs	r3, r3, r1
 8000774:	409c      	lsls	r4, r3
 8000776:	4098      	lsls	r0, r3
 8000778:	40ce      	lsrs	r6, r1
 800077a:	40ca      	lsrs	r2, r1
 800077c:	1e63      	subs	r3, r4, #1
 800077e:	419c      	sbcs	r4, r3
 8000780:	4330      	orrs	r0, r6
 8000782:	4692      	mov	sl, r2
 8000784:	2600      	movs	r6, #0
 8000786:	4304      	orrs	r4, r0
 8000788:	0763      	lsls	r3, r4, #29
 800078a:	d009      	beq.n	80007a0 <__aeabi_dadd+0x110>
 800078c:	230f      	movs	r3, #15
 800078e:	4023      	ands	r3, r4
 8000790:	2b04      	cmp	r3, #4
 8000792:	d005      	beq.n	80007a0 <__aeabi_dadd+0x110>
 8000794:	1d23      	adds	r3, r4, #4
 8000796:	42a3      	cmp	r3, r4
 8000798:	41a4      	sbcs	r4, r4
 800079a:	4264      	negs	r4, r4
 800079c:	44a2      	add	sl, r4
 800079e:	001c      	movs	r4, r3
 80007a0:	4653      	mov	r3, sl
 80007a2:	021b      	lsls	r3, r3, #8
 80007a4:	d400      	bmi.n	80007a8 <__aeabi_dadd+0x118>
 80007a6:	e09b      	b.n	80008e0 <__aeabi_dadd+0x250>
 80007a8:	4b94      	ldr	r3, [pc, #592]	; (80009fc <__aeabi_dadd+0x36c>)
 80007aa:	3601      	adds	r6, #1
 80007ac:	429e      	cmp	r6, r3
 80007ae:	d100      	bne.n	80007b2 <__aeabi_dadd+0x122>
 80007b0:	e0b8      	b.n	8000924 <__aeabi_dadd+0x294>
 80007b2:	4653      	mov	r3, sl
 80007b4:	4992      	ldr	r1, [pc, #584]	; (8000a00 <__aeabi_dadd+0x370>)
 80007b6:	08e4      	lsrs	r4, r4, #3
 80007b8:	400b      	ands	r3, r1
 80007ba:	0019      	movs	r1, r3
 80007bc:	075b      	lsls	r3, r3, #29
 80007be:	4323      	orrs	r3, r4
 80007c0:	0572      	lsls	r2, r6, #21
 80007c2:	024c      	lsls	r4, r1, #9
 80007c4:	0b24      	lsrs	r4, r4, #12
 80007c6:	0d52      	lsrs	r2, r2, #21
 80007c8:	0512      	lsls	r2, r2, #20
 80007ca:	07ed      	lsls	r5, r5, #31
 80007cc:	4322      	orrs	r2, r4
 80007ce:	432a      	orrs	r2, r5
 80007d0:	0018      	movs	r0, r3
 80007d2:	0011      	movs	r1, r2
 80007d4:	bce0      	pop	{r5, r6, r7}
 80007d6:	46ba      	mov	sl, r7
 80007d8:	46b1      	mov	r9, r6
 80007da:	46a8      	mov	r8, r5
 80007dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80007de:	2f00      	cmp	r7, #0
 80007e0:	d048      	beq.n	8000874 <__aeabi_dadd+0x1e4>
 80007e2:	1b97      	subs	r7, r2, r6
 80007e4:	2e00      	cmp	r6, #0
 80007e6:	d000      	beq.n	80007ea <__aeabi_dadd+0x15a>
 80007e8:	e10e      	b.n	8000a08 <__aeabi_dadd+0x378>
 80007ea:	000c      	movs	r4, r1
 80007ec:	431c      	orrs	r4, r3
 80007ee:	d100      	bne.n	80007f2 <__aeabi_dadd+0x162>
 80007f0:	e1b7      	b.n	8000b62 <__aeabi_dadd+0x4d2>
 80007f2:	1e7c      	subs	r4, r7, #1
 80007f4:	2f01      	cmp	r7, #1
 80007f6:	d100      	bne.n	80007fa <__aeabi_dadd+0x16a>
 80007f8:	e226      	b.n	8000c48 <__aeabi_dadd+0x5b8>
 80007fa:	4d80      	ldr	r5, [pc, #512]	; (80009fc <__aeabi_dadd+0x36c>)
 80007fc:	42af      	cmp	r7, r5
 80007fe:	d100      	bne.n	8000802 <__aeabi_dadd+0x172>
 8000800:	e1d5      	b.n	8000bae <__aeabi_dadd+0x51e>
 8000802:	0027      	movs	r7, r4
 8000804:	e107      	b.n	8000a16 <__aeabi_dadd+0x386>
 8000806:	2f00      	cmp	r7, #0
 8000808:	dc00      	bgt.n	800080c <__aeabi_dadd+0x17c>
 800080a:	e0b2      	b.n	8000972 <__aeabi_dadd+0x2e2>
 800080c:	2a00      	cmp	r2, #0
 800080e:	d047      	beq.n	80008a0 <__aeabi_dadd+0x210>
 8000810:	4a7a      	ldr	r2, [pc, #488]	; (80009fc <__aeabi_dadd+0x36c>)
 8000812:	4296      	cmp	r6, r2
 8000814:	d100      	bne.n	8000818 <__aeabi_dadd+0x188>
 8000816:	e089      	b.n	800092c <__aeabi_dadd+0x29c>
 8000818:	2280      	movs	r2, #128	; 0x80
 800081a:	464c      	mov	r4, r9
 800081c:	0412      	lsls	r2, r2, #16
 800081e:	4314      	orrs	r4, r2
 8000820:	46a1      	mov	r9, r4
 8000822:	2f38      	cmp	r7, #56	; 0x38
 8000824:	dc6b      	bgt.n	80008fe <__aeabi_dadd+0x26e>
 8000826:	2f1f      	cmp	r7, #31
 8000828:	dc00      	bgt.n	800082c <__aeabi_dadd+0x19c>
 800082a:	e16e      	b.n	8000b0a <__aeabi_dadd+0x47a>
 800082c:	003a      	movs	r2, r7
 800082e:	4648      	mov	r0, r9
 8000830:	3a20      	subs	r2, #32
 8000832:	40d0      	lsrs	r0, r2
 8000834:	4684      	mov	ip, r0
 8000836:	2f20      	cmp	r7, #32
 8000838:	d007      	beq.n	800084a <__aeabi_dadd+0x1ba>
 800083a:	2240      	movs	r2, #64	; 0x40
 800083c:	4648      	mov	r0, r9
 800083e:	1bd2      	subs	r2, r2, r7
 8000840:	4090      	lsls	r0, r2
 8000842:	0002      	movs	r2, r0
 8000844:	4640      	mov	r0, r8
 8000846:	4310      	orrs	r0, r2
 8000848:	4680      	mov	r8, r0
 800084a:	4640      	mov	r0, r8
 800084c:	1e42      	subs	r2, r0, #1
 800084e:	4190      	sbcs	r0, r2
 8000850:	4662      	mov	r2, ip
 8000852:	0004      	movs	r4, r0
 8000854:	4314      	orrs	r4, r2
 8000856:	e057      	b.n	8000908 <__aeabi_dadd+0x278>
 8000858:	464a      	mov	r2, r9
 800085a:	4302      	orrs	r2, r0
 800085c:	d100      	bne.n	8000860 <__aeabi_dadd+0x1d0>
 800085e:	e103      	b.n	8000a68 <__aeabi_dadd+0x3d8>
 8000860:	1e7a      	subs	r2, r7, #1
 8000862:	2f01      	cmp	r7, #1
 8000864:	d100      	bne.n	8000868 <__aeabi_dadd+0x1d8>
 8000866:	e193      	b.n	8000b90 <__aeabi_dadd+0x500>
 8000868:	4c64      	ldr	r4, [pc, #400]	; (80009fc <__aeabi_dadd+0x36c>)
 800086a:	42a7      	cmp	r7, r4
 800086c:	d100      	bne.n	8000870 <__aeabi_dadd+0x1e0>
 800086e:	e18a      	b.n	8000b86 <__aeabi_dadd+0x4f6>
 8000870:	0017      	movs	r7, r2
 8000872:	e73b      	b.n	80006ec <__aeabi_dadd+0x5c>
 8000874:	4c63      	ldr	r4, [pc, #396]	; (8000a04 <__aeabi_dadd+0x374>)
 8000876:	1c72      	adds	r2, r6, #1
 8000878:	4222      	tst	r2, r4
 800087a:	d000      	beq.n	800087e <__aeabi_dadd+0x1ee>
 800087c:	e0e0      	b.n	8000a40 <__aeabi_dadd+0x3b0>
 800087e:	000a      	movs	r2, r1
 8000880:	431a      	orrs	r2, r3
 8000882:	2e00      	cmp	r6, #0
 8000884:	d000      	beq.n	8000888 <__aeabi_dadd+0x1f8>
 8000886:	e174      	b.n	8000b72 <__aeabi_dadd+0x4e2>
 8000888:	2a00      	cmp	r2, #0
 800088a:	d100      	bne.n	800088e <__aeabi_dadd+0x1fe>
 800088c:	e1d0      	b.n	8000c30 <__aeabi_dadd+0x5a0>
 800088e:	464a      	mov	r2, r9
 8000890:	4302      	orrs	r2, r0
 8000892:	d000      	beq.n	8000896 <__aeabi_dadd+0x206>
 8000894:	e1e3      	b.n	8000c5e <__aeabi_dadd+0x5ce>
 8000896:	074a      	lsls	r2, r1, #29
 8000898:	08db      	lsrs	r3, r3, #3
 800089a:	4313      	orrs	r3, r2
 800089c:	08c9      	lsrs	r1, r1, #3
 800089e:	e029      	b.n	80008f4 <__aeabi_dadd+0x264>
 80008a0:	464a      	mov	r2, r9
 80008a2:	4302      	orrs	r2, r0
 80008a4:	d100      	bne.n	80008a8 <__aeabi_dadd+0x218>
 80008a6:	e17d      	b.n	8000ba4 <__aeabi_dadd+0x514>
 80008a8:	1e7a      	subs	r2, r7, #1
 80008aa:	2f01      	cmp	r7, #1
 80008ac:	d100      	bne.n	80008b0 <__aeabi_dadd+0x220>
 80008ae:	e0e0      	b.n	8000a72 <__aeabi_dadd+0x3e2>
 80008b0:	4c52      	ldr	r4, [pc, #328]	; (80009fc <__aeabi_dadd+0x36c>)
 80008b2:	42a7      	cmp	r7, r4
 80008b4:	d100      	bne.n	80008b8 <__aeabi_dadd+0x228>
 80008b6:	e166      	b.n	8000b86 <__aeabi_dadd+0x4f6>
 80008b8:	0017      	movs	r7, r2
 80008ba:	e7b2      	b.n	8000822 <__aeabi_dadd+0x192>
 80008bc:	0010      	movs	r0, r2
 80008be:	3b1f      	subs	r3, #31
 80008c0:	40d8      	lsrs	r0, r3
 80008c2:	2920      	cmp	r1, #32
 80008c4:	d003      	beq.n	80008ce <__aeabi_dadd+0x23e>
 80008c6:	2340      	movs	r3, #64	; 0x40
 80008c8:	1a5b      	subs	r3, r3, r1
 80008ca:	409a      	lsls	r2, r3
 80008cc:	4314      	orrs	r4, r2
 80008ce:	1e63      	subs	r3, r4, #1
 80008d0:	419c      	sbcs	r4, r3
 80008d2:	2300      	movs	r3, #0
 80008d4:	2600      	movs	r6, #0
 80008d6:	469a      	mov	sl, r3
 80008d8:	4304      	orrs	r4, r0
 80008da:	0763      	lsls	r3, r4, #29
 80008dc:	d000      	beq.n	80008e0 <__aeabi_dadd+0x250>
 80008de:	e755      	b.n	800078c <__aeabi_dadd+0xfc>
 80008e0:	4652      	mov	r2, sl
 80008e2:	08e3      	lsrs	r3, r4, #3
 80008e4:	0752      	lsls	r2, r2, #29
 80008e6:	4313      	orrs	r3, r2
 80008e8:	4652      	mov	r2, sl
 80008ea:	0037      	movs	r7, r6
 80008ec:	08d1      	lsrs	r1, r2, #3
 80008ee:	4a43      	ldr	r2, [pc, #268]	; (80009fc <__aeabi_dadd+0x36c>)
 80008f0:	4297      	cmp	r7, r2
 80008f2:	d01f      	beq.n	8000934 <__aeabi_dadd+0x2a4>
 80008f4:	0309      	lsls	r1, r1, #12
 80008f6:	057a      	lsls	r2, r7, #21
 80008f8:	0b0c      	lsrs	r4, r1, #12
 80008fa:	0d52      	lsrs	r2, r2, #21
 80008fc:	e764      	b.n	80007c8 <__aeabi_dadd+0x138>
 80008fe:	4642      	mov	r2, r8
 8000900:	464c      	mov	r4, r9
 8000902:	4314      	orrs	r4, r2
 8000904:	1e62      	subs	r2, r4, #1
 8000906:	4194      	sbcs	r4, r2
 8000908:	18e4      	adds	r4, r4, r3
 800090a:	429c      	cmp	r4, r3
 800090c:	4192      	sbcs	r2, r2
 800090e:	4252      	negs	r2, r2
 8000910:	4692      	mov	sl, r2
 8000912:	448a      	add	sl, r1
 8000914:	4653      	mov	r3, sl
 8000916:	021b      	lsls	r3, r3, #8
 8000918:	d5df      	bpl.n	80008da <__aeabi_dadd+0x24a>
 800091a:	4b38      	ldr	r3, [pc, #224]	; (80009fc <__aeabi_dadd+0x36c>)
 800091c:	3601      	adds	r6, #1
 800091e:	429e      	cmp	r6, r3
 8000920:	d000      	beq.n	8000924 <__aeabi_dadd+0x294>
 8000922:	e0b3      	b.n	8000a8c <__aeabi_dadd+0x3fc>
 8000924:	0032      	movs	r2, r6
 8000926:	2400      	movs	r4, #0
 8000928:	2300      	movs	r3, #0
 800092a:	e74d      	b.n	80007c8 <__aeabi_dadd+0x138>
 800092c:	074a      	lsls	r2, r1, #29
 800092e:	08db      	lsrs	r3, r3, #3
 8000930:	4313      	orrs	r3, r2
 8000932:	08c9      	lsrs	r1, r1, #3
 8000934:	001a      	movs	r2, r3
 8000936:	430a      	orrs	r2, r1
 8000938:	d100      	bne.n	800093c <__aeabi_dadd+0x2ac>
 800093a:	e200      	b.n	8000d3e <__aeabi_dadd+0x6ae>
 800093c:	2480      	movs	r4, #128	; 0x80
 800093e:	0324      	lsls	r4, r4, #12
 8000940:	430c      	orrs	r4, r1
 8000942:	0324      	lsls	r4, r4, #12
 8000944:	4a2d      	ldr	r2, [pc, #180]	; (80009fc <__aeabi_dadd+0x36c>)
 8000946:	0b24      	lsrs	r4, r4, #12
 8000948:	e73e      	b.n	80007c8 <__aeabi_dadd+0x138>
 800094a:	0020      	movs	r0, r4
 800094c:	f001 fc9a 	bl	8002284 <__clzsi2>
 8000950:	0003      	movs	r3, r0
 8000952:	3318      	adds	r3, #24
 8000954:	2b1f      	cmp	r3, #31
 8000956:	dc00      	bgt.n	800095a <__aeabi_dadd+0x2ca>
 8000958:	e6f7      	b.n	800074a <__aeabi_dadd+0xba>
 800095a:	0022      	movs	r2, r4
 800095c:	3808      	subs	r0, #8
 800095e:	4082      	lsls	r2, r0
 8000960:	2400      	movs	r4, #0
 8000962:	42b3      	cmp	r3, r6
 8000964:	db00      	blt.n	8000968 <__aeabi_dadd+0x2d8>
 8000966:	e6fc      	b.n	8000762 <__aeabi_dadd+0xd2>
 8000968:	1af6      	subs	r6, r6, r3
 800096a:	4b25      	ldr	r3, [pc, #148]	; (8000a00 <__aeabi_dadd+0x370>)
 800096c:	401a      	ands	r2, r3
 800096e:	4692      	mov	sl, r2
 8000970:	e70a      	b.n	8000788 <__aeabi_dadd+0xf8>
 8000972:	2f00      	cmp	r7, #0
 8000974:	d02b      	beq.n	80009ce <__aeabi_dadd+0x33e>
 8000976:	1b97      	subs	r7, r2, r6
 8000978:	2e00      	cmp	r6, #0
 800097a:	d100      	bne.n	800097e <__aeabi_dadd+0x2ee>
 800097c:	e0b8      	b.n	8000af0 <__aeabi_dadd+0x460>
 800097e:	4c1f      	ldr	r4, [pc, #124]	; (80009fc <__aeabi_dadd+0x36c>)
 8000980:	42a2      	cmp	r2, r4
 8000982:	d100      	bne.n	8000986 <__aeabi_dadd+0x2f6>
 8000984:	e11c      	b.n	8000bc0 <__aeabi_dadd+0x530>
 8000986:	2480      	movs	r4, #128	; 0x80
 8000988:	0424      	lsls	r4, r4, #16
 800098a:	4321      	orrs	r1, r4
 800098c:	2f38      	cmp	r7, #56	; 0x38
 800098e:	dd00      	ble.n	8000992 <__aeabi_dadd+0x302>
 8000990:	e11e      	b.n	8000bd0 <__aeabi_dadd+0x540>
 8000992:	2f1f      	cmp	r7, #31
 8000994:	dd00      	ble.n	8000998 <__aeabi_dadd+0x308>
 8000996:	e19e      	b.n	8000cd6 <__aeabi_dadd+0x646>
 8000998:	2620      	movs	r6, #32
 800099a:	000c      	movs	r4, r1
 800099c:	1bf6      	subs	r6, r6, r7
 800099e:	0018      	movs	r0, r3
 80009a0:	40b3      	lsls	r3, r6
 80009a2:	40b4      	lsls	r4, r6
 80009a4:	40f8      	lsrs	r0, r7
 80009a6:	1e5e      	subs	r6, r3, #1
 80009a8:	41b3      	sbcs	r3, r6
 80009aa:	40f9      	lsrs	r1, r7
 80009ac:	4304      	orrs	r4, r0
 80009ae:	431c      	orrs	r4, r3
 80009b0:	4489      	add	r9, r1
 80009b2:	4444      	add	r4, r8
 80009b4:	4544      	cmp	r4, r8
 80009b6:	419b      	sbcs	r3, r3
 80009b8:	425b      	negs	r3, r3
 80009ba:	444b      	add	r3, r9
 80009bc:	469a      	mov	sl, r3
 80009be:	0016      	movs	r6, r2
 80009c0:	e7a8      	b.n	8000914 <__aeabi_dadd+0x284>
 80009c2:	4642      	mov	r2, r8
 80009c4:	464c      	mov	r4, r9
 80009c6:	4314      	orrs	r4, r2
 80009c8:	1e62      	subs	r2, r4, #1
 80009ca:	4194      	sbcs	r4, r2
 80009cc:	e6a6      	b.n	800071c <__aeabi_dadd+0x8c>
 80009ce:	4c0d      	ldr	r4, [pc, #52]	; (8000a04 <__aeabi_dadd+0x374>)
 80009d0:	1c72      	adds	r2, r6, #1
 80009d2:	4222      	tst	r2, r4
 80009d4:	d000      	beq.n	80009d8 <__aeabi_dadd+0x348>
 80009d6:	e0a8      	b.n	8000b2a <__aeabi_dadd+0x49a>
 80009d8:	000a      	movs	r2, r1
 80009da:	431a      	orrs	r2, r3
 80009dc:	2e00      	cmp	r6, #0
 80009de:	d000      	beq.n	80009e2 <__aeabi_dadd+0x352>
 80009e0:	e10a      	b.n	8000bf8 <__aeabi_dadd+0x568>
 80009e2:	2a00      	cmp	r2, #0
 80009e4:	d100      	bne.n	80009e8 <__aeabi_dadd+0x358>
 80009e6:	e15e      	b.n	8000ca6 <__aeabi_dadd+0x616>
 80009e8:	464a      	mov	r2, r9
 80009ea:	4302      	orrs	r2, r0
 80009ec:	d000      	beq.n	80009f0 <__aeabi_dadd+0x360>
 80009ee:	e161      	b.n	8000cb4 <__aeabi_dadd+0x624>
 80009f0:	074a      	lsls	r2, r1, #29
 80009f2:	08db      	lsrs	r3, r3, #3
 80009f4:	4313      	orrs	r3, r2
 80009f6:	08c9      	lsrs	r1, r1, #3
 80009f8:	e77c      	b.n	80008f4 <__aeabi_dadd+0x264>
 80009fa:	46c0      	nop			; (mov r8, r8)
 80009fc:	000007ff 	.word	0x000007ff
 8000a00:	ff7fffff 	.word	0xff7fffff
 8000a04:	000007fe 	.word	0x000007fe
 8000a08:	4ccf      	ldr	r4, [pc, #828]	; (8000d48 <__aeabi_dadd+0x6b8>)
 8000a0a:	42a2      	cmp	r2, r4
 8000a0c:	d100      	bne.n	8000a10 <__aeabi_dadd+0x380>
 8000a0e:	e0ce      	b.n	8000bae <__aeabi_dadd+0x51e>
 8000a10:	2480      	movs	r4, #128	; 0x80
 8000a12:	0424      	lsls	r4, r4, #16
 8000a14:	4321      	orrs	r1, r4
 8000a16:	2f38      	cmp	r7, #56	; 0x38
 8000a18:	dc5b      	bgt.n	8000ad2 <__aeabi_dadd+0x442>
 8000a1a:	2f1f      	cmp	r7, #31
 8000a1c:	dd00      	ble.n	8000a20 <__aeabi_dadd+0x390>
 8000a1e:	e0dc      	b.n	8000bda <__aeabi_dadd+0x54a>
 8000a20:	2520      	movs	r5, #32
 8000a22:	000c      	movs	r4, r1
 8000a24:	1bed      	subs	r5, r5, r7
 8000a26:	001e      	movs	r6, r3
 8000a28:	40ab      	lsls	r3, r5
 8000a2a:	40ac      	lsls	r4, r5
 8000a2c:	40fe      	lsrs	r6, r7
 8000a2e:	1e5d      	subs	r5, r3, #1
 8000a30:	41ab      	sbcs	r3, r5
 8000a32:	4334      	orrs	r4, r6
 8000a34:	40f9      	lsrs	r1, r7
 8000a36:	431c      	orrs	r4, r3
 8000a38:	464b      	mov	r3, r9
 8000a3a:	1a5b      	subs	r3, r3, r1
 8000a3c:	4699      	mov	r9, r3
 8000a3e:	e04c      	b.n	8000ada <__aeabi_dadd+0x44a>
 8000a40:	464a      	mov	r2, r9
 8000a42:	1a1c      	subs	r4, r3, r0
 8000a44:	1a88      	subs	r0, r1, r2
 8000a46:	42a3      	cmp	r3, r4
 8000a48:	4192      	sbcs	r2, r2
 8000a4a:	4252      	negs	r2, r2
 8000a4c:	4692      	mov	sl, r2
 8000a4e:	0002      	movs	r2, r0
 8000a50:	4650      	mov	r0, sl
 8000a52:	1a12      	subs	r2, r2, r0
 8000a54:	4692      	mov	sl, r2
 8000a56:	0212      	lsls	r2, r2, #8
 8000a58:	d478      	bmi.n	8000b4c <__aeabi_dadd+0x4bc>
 8000a5a:	4653      	mov	r3, sl
 8000a5c:	4323      	orrs	r3, r4
 8000a5e:	d000      	beq.n	8000a62 <__aeabi_dadd+0x3d2>
 8000a60:	e66a      	b.n	8000738 <__aeabi_dadd+0xa8>
 8000a62:	2100      	movs	r1, #0
 8000a64:	2500      	movs	r5, #0
 8000a66:	e745      	b.n	80008f4 <__aeabi_dadd+0x264>
 8000a68:	074a      	lsls	r2, r1, #29
 8000a6a:	08db      	lsrs	r3, r3, #3
 8000a6c:	4313      	orrs	r3, r2
 8000a6e:	08c9      	lsrs	r1, r1, #3
 8000a70:	e73d      	b.n	80008ee <__aeabi_dadd+0x25e>
 8000a72:	181c      	adds	r4, r3, r0
 8000a74:	429c      	cmp	r4, r3
 8000a76:	419b      	sbcs	r3, r3
 8000a78:	4449      	add	r1, r9
 8000a7a:	468a      	mov	sl, r1
 8000a7c:	425b      	negs	r3, r3
 8000a7e:	449a      	add	sl, r3
 8000a80:	4653      	mov	r3, sl
 8000a82:	2601      	movs	r6, #1
 8000a84:	021b      	lsls	r3, r3, #8
 8000a86:	d400      	bmi.n	8000a8a <__aeabi_dadd+0x3fa>
 8000a88:	e727      	b.n	80008da <__aeabi_dadd+0x24a>
 8000a8a:	2602      	movs	r6, #2
 8000a8c:	4652      	mov	r2, sl
 8000a8e:	4baf      	ldr	r3, [pc, #700]	; (8000d4c <__aeabi_dadd+0x6bc>)
 8000a90:	2101      	movs	r1, #1
 8000a92:	401a      	ands	r2, r3
 8000a94:	0013      	movs	r3, r2
 8000a96:	4021      	ands	r1, r4
 8000a98:	0862      	lsrs	r2, r4, #1
 8000a9a:	430a      	orrs	r2, r1
 8000a9c:	07dc      	lsls	r4, r3, #31
 8000a9e:	085b      	lsrs	r3, r3, #1
 8000aa0:	469a      	mov	sl, r3
 8000aa2:	4314      	orrs	r4, r2
 8000aa4:	e670      	b.n	8000788 <__aeabi_dadd+0xf8>
 8000aa6:	003a      	movs	r2, r7
 8000aa8:	464c      	mov	r4, r9
 8000aaa:	3a20      	subs	r2, #32
 8000aac:	40d4      	lsrs	r4, r2
 8000aae:	46a4      	mov	ip, r4
 8000ab0:	2f20      	cmp	r7, #32
 8000ab2:	d007      	beq.n	8000ac4 <__aeabi_dadd+0x434>
 8000ab4:	2240      	movs	r2, #64	; 0x40
 8000ab6:	4648      	mov	r0, r9
 8000ab8:	1bd2      	subs	r2, r2, r7
 8000aba:	4090      	lsls	r0, r2
 8000abc:	0002      	movs	r2, r0
 8000abe:	4640      	mov	r0, r8
 8000ac0:	4310      	orrs	r0, r2
 8000ac2:	4680      	mov	r8, r0
 8000ac4:	4640      	mov	r0, r8
 8000ac6:	1e42      	subs	r2, r0, #1
 8000ac8:	4190      	sbcs	r0, r2
 8000aca:	4662      	mov	r2, ip
 8000acc:	0004      	movs	r4, r0
 8000ace:	4314      	orrs	r4, r2
 8000ad0:	e624      	b.n	800071c <__aeabi_dadd+0x8c>
 8000ad2:	4319      	orrs	r1, r3
 8000ad4:	000c      	movs	r4, r1
 8000ad6:	1e63      	subs	r3, r4, #1
 8000ad8:	419c      	sbcs	r4, r3
 8000ada:	4643      	mov	r3, r8
 8000adc:	1b1c      	subs	r4, r3, r4
 8000ade:	45a0      	cmp	r8, r4
 8000ae0:	419b      	sbcs	r3, r3
 8000ae2:	4649      	mov	r1, r9
 8000ae4:	425b      	negs	r3, r3
 8000ae6:	1acb      	subs	r3, r1, r3
 8000ae8:	469a      	mov	sl, r3
 8000aea:	4665      	mov	r5, ip
 8000aec:	0016      	movs	r6, r2
 8000aee:	e61b      	b.n	8000728 <__aeabi_dadd+0x98>
 8000af0:	000c      	movs	r4, r1
 8000af2:	431c      	orrs	r4, r3
 8000af4:	d100      	bne.n	8000af8 <__aeabi_dadd+0x468>
 8000af6:	e0c7      	b.n	8000c88 <__aeabi_dadd+0x5f8>
 8000af8:	1e7c      	subs	r4, r7, #1
 8000afa:	2f01      	cmp	r7, #1
 8000afc:	d100      	bne.n	8000b00 <__aeabi_dadd+0x470>
 8000afe:	e0f9      	b.n	8000cf4 <__aeabi_dadd+0x664>
 8000b00:	4e91      	ldr	r6, [pc, #580]	; (8000d48 <__aeabi_dadd+0x6b8>)
 8000b02:	42b7      	cmp	r7, r6
 8000b04:	d05c      	beq.n	8000bc0 <__aeabi_dadd+0x530>
 8000b06:	0027      	movs	r7, r4
 8000b08:	e740      	b.n	800098c <__aeabi_dadd+0x2fc>
 8000b0a:	2220      	movs	r2, #32
 8000b0c:	464c      	mov	r4, r9
 8000b0e:	4640      	mov	r0, r8
 8000b10:	1bd2      	subs	r2, r2, r7
 8000b12:	4094      	lsls	r4, r2
 8000b14:	40f8      	lsrs	r0, r7
 8000b16:	4304      	orrs	r4, r0
 8000b18:	4640      	mov	r0, r8
 8000b1a:	4090      	lsls	r0, r2
 8000b1c:	1e42      	subs	r2, r0, #1
 8000b1e:	4190      	sbcs	r0, r2
 8000b20:	464a      	mov	r2, r9
 8000b22:	40fa      	lsrs	r2, r7
 8000b24:	4304      	orrs	r4, r0
 8000b26:	1889      	adds	r1, r1, r2
 8000b28:	e6ee      	b.n	8000908 <__aeabi_dadd+0x278>
 8000b2a:	4c87      	ldr	r4, [pc, #540]	; (8000d48 <__aeabi_dadd+0x6b8>)
 8000b2c:	42a2      	cmp	r2, r4
 8000b2e:	d100      	bne.n	8000b32 <__aeabi_dadd+0x4a2>
 8000b30:	e6f9      	b.n	8000926 <__aeabi_dadd+0x296>
 8000b32:	1818      	adds	r0, r3, r0
 8000b34:	4298      	cmp	r0, r3
 8000b36:	419b      	sbcs	r3, r3
 8000b38:	4449      	add	r1, r9
 8000b3a:	425b      	negs	r3, r3
 8000b3c:	18cb      	adds	r3, r1, r3
 8000b3e:	07dc      	lsls	r4, r3, #31
 8000b40:	0840      	lsrs	r0, r0, #1
 8000b42:	085b      	lsrs	r3, r3, #1
 8000b44:	469a      	mov	sl, r3
 8000b46:	0016      	movs	r6, r2
 8000b48:	4304      	orrs	r4, r0
 8000b4a:	e6c6      	b.n	80008da <__aeabi_dadd+0x24a>
 8000b4c:	4642      	mov	r2, r8
 8000b4e:	1ad4      	subs	r4, r2, r3
 8000b50:	45a0      	cmp	r8, r4
 8000b52:	4180      	sbcs	r0, r0
 8000b54:	464b      	mov	r3, r9
 8000b56:	4240      	negs	r0, r0
 8000b58:	1a59      	subs	r1, r3, r1
 8000b5a:	1a0b      	subs	r3, r1, r0
 8000b5c:	469a      	mov	sl, r3
 8000b5e:	4665      	mov	r5, ip
 8000b60:	e5ea      	b.n	8000738 <__aeabi_dadd+0xa8>
 8000b62:	464b      	mov	r3, r9
 8000b64:	464a      	mov	r2, r9
 8000b66:	08c0      	lsrs	r0, r0, #3
 8000b68:	075b      	lsls	r3, r3, #29
 8000b6a:	4665      	mov	r5, ip
 8000b6c:	4303      	orrs	r3, r0
 8000b6e:	08d1      	lsrs	r1, r2, #3
 8000b70:	e6bd      	b.n	80008ee <__aeabi_dadd+0x25e>
 8000b72:	2a00      	cmp	r2, #0
 8000b74:	d000      	beq.n	8000b78 <__aeabi_dadd+0x4e8>
 8000b76:	e08e      	b.n	8000c96 <__aeabi_dadd+0x606>
 8000b78:	464b      	mov	r3, r9
 8000b7a:	4303      	orrs	r3, r0
 8000b7c:	d117      	bne.n	8000bae <__aeabi_dadd+0x51e>
 8000b7e:	2180      	movs	r1, #128	; 0x80
 8000b80:	2500      	movs	r5, #0
 8000b82:	0309      	lsls	r1, r1, #12
 8000b84:	e6da      	b.n	800093c <__aeabi_dadd+0x2ac>
 8000b86:	074a      	lsls	r2, r1, #29
 8000b88:	08db      	lsrs	r3, r3, #3
 8000b8a:	4313      	orrs	r3, r2
 8000b8c:	08c9      	lsrs	r1, r1, #3
 8000b8e:	e6d1      	b.n	8000934 <__aeabi_dadd+0x2a4>
 8000b90:	1a1c      	subs	r4, r3, r0
 8000b92:	464a      	mov	r2, r9
 8000b94:	42a3      	cmp	r3, r4
 8000b96:	419b      	sbcs	r3, r3
 8000b98:	1a89      	subs	r1, r1, r2
 8000b9a:	425b      	negs	r3, r3
 8000b9c:	1acb      	subs	r3, r1, r3
 8000b9e:	469a      	mov	sl, r3
 8000ba0:	2601      	movs	r6, #1
 8000ba2:	e5c1      	b.n	8000728 <__aeabi_dadd+0x98>
 8000ba4:	074a      	lsls	r2, r1, #29
 8000ba6:	08db      	lsrs	r3, r3, #3
 8000ba8:	4313      	orrs	r3, r2
 8000baa:	08c9      	lsrs	r1, r1, #3
 8000bac:	e69f      	b.n	80008ee <__aeabi_dadd+0x25e>
 8000bae:	4643      	mov	r3, r8
 8000bb0:	08d8      	lsrs	r0, r3, #3
 8000bb2:	464b      	mov	r3, r9
 8000bb4:	464a      	mov	r2, r9
 8000bb6:	075b      	lsls	r3, r3, #29
 8000bb8:	4665      	mov	r5, ip
 8000bba:	4303      	orrs	r3, r0
 8000bbc:	08d1      	lsrs	r1, r2, #3
 8000bbe:	e6b9      	b.n	8000934 <__aeabi_dadd+0x2a4>
 8000bc0:	4643      	mov	r3, r8
 8000bc2:	08d8      	lsrs	r0, r3, #3
 8000bc4:	464b      	mov	r3, r9
 8000bc6:	464a      	mov	r2, r9
 8000bc8:	075b      	lsls	r3, r3, #29
 8000bca:	4303      	orrs	r3, r0
 8000bcc:	08d1      	lsrs	r1, r2, #3
 8000bce:	e6b1      	b.n	8000934 <__aeabi_dadd+0x2a4>
 8000bd0:	4319      	orrs	r1, r3
 8000bd2:	000c      	movs	r4, r1
 8000bd4:	1e63      	subs	r3, r4, #1
 8000bd6:	419c      	sbcs	r4, r3
 8000bd8:	e6eb      	b.n	80009b2 <__aeabi_dadd+0x322>
 8000bda:	003c      	movs	r4, r7
 8000bdc:	000d      	movs	r5, r1
 8000bde:	3c20      	subs	r4, #32
 8000be0:	40e5      	lsrs	r5, r4
 8000be2:	2f20      	cmp	r7, #32
 8000be4:	d003      	beq.n	8000bee <__aeabi_dadd+0x55e>
 8000be6:	2440      	movs	r4, #64	; 0x40
 8000be8:	1be4      	subs	r4, r4, r7
 8000bea:	40a1      	lsls	r1, r4
 8000bec:	430b      	orrs	r3, r1
 8000bee:	001c      	movs	r4, r3
 8000bf0:	1e63      	subs	r3, r4, #1
 8000bf2:	419c      	sbcs	r4, r3
 8000bf4:	432c      	orrs	r4, r5
 8000bf6:	e770      	b.n	8000ada <__aeabi_dadd+0x44a>
 8000bf8:	2a00      	cmp	r2, #0
 8000bfa:	d0e1      	beq.n	8000bc0 <__aeabi_dadd+0x530>
 8000bfc:	464a      	mov	r2, r9
 8000bfe:	4302      	orrs	r2, r0
 8000c00:	d0c1      	beq.n	8000b86 <__aeabi_dadd+0x4f6>
 8000c02:	074a      	lsls	r2, r1, #29
 8000c04:	08db      	lsrs	r3, r3, #3
 8000c06:	4313      	orrs	r3, r2
 8000c08:	2280      	movs	r2, #128	; 0x80
 8000c0a:	08c9      	lsrs	r1, r1, #3
 8000c0c:	0312      	lsls	r2, r2, #12
 8000c0e:	4211      	tst	r1, r2
 8000c10:	d008      	beq.n	8000c24 <__aeabi_dadd+0x594>
 8000c12:	4648      	mov	r0, r9
 8000c14:	08c4      	lsrs	r4, r0, #3
 8000c16:	4214      	tst	r4, r2
 8000c18:	d104      	bne.n	8000c24 <__aeabi_dadd+0x594>
 8000c1a:	4643      	mov	r3, r8
 8000c1c:	0021      	movs	r1, r4
 8000c1e:	08db      	lsrs	r3, r3, #3
 8000c20:	0742      	lsls	r2, r0, #29
 8000c22:	4313      	orrs	r3, r2
 8000c24:	0f5a      	lsrs	r2, r3, #29
 8000c26:	00db      	lsls	r3, r3, #3
 8000c28:	0752      	lsls	r2, r2, #29
 8000c2a:	08db      	lsrs	r3, r3, #3
 8000c2c:	4313      	orrs	r3, r2
 8000c2e:	e681      	b.n	8000934 <__aeabi_dadd+0x2a4>
 8000c30:	464b      	mov	r3, r9
 8000c32:	4303      	orrs	r3, r0
 8000c34:	d100      	bne.n	8000c38 <__aeabi_dadd+0x5a8>
 8000c36:	e714      	b.n	8000a62 <__aeabi_dadd+0x3d2>
 8000c38:	464b      	mov	r3, r9
 8000c3a:	464a      	mov	r2, r9
 8000c3c:	08c0      	lsrs	r0, r0, #3
 8000c3e:	075b      	lsls	r3, r3, #29
 8000c40:	4665      	mov	r5, ip
 8000c42:	4303      	orrs	r3, r0
 8000c44:	08d1      	lsrs	r1, r2, #3
 8000c46:	e655      	b.n	80008f4 <__aeabi_dadd+0x264>
 8000c48:	1ac4      	subs	r4, r0, r3
 8000c4a:	45a0      	cmp	r8, r4
 8000c4c:	4180      	sbcs	r0, r0
 8000c4e:	464b      	mov	r3, r9
 8000c50:	4240      	negs	r0, r0
 8000c52:	1a59      	subs	r1, r3, r1
 8000c54:	1a0b      	subs	r3, r1, r0
 8000c56:	469a      	mov	sl, r3
 8000c58:	4665      	mov	r5, ip
 8000c5a:	2601      	movs	r6, #1
 8000c5c:	e564      	b.n	8000728 <__aeabi_dadd+0x98>
 8000c5e:	1a1c      	subs	r4, r3, r0
 8000c60:	464a      	mov	r2, r9
 8000c62:	42a3      	cmp	r3, r4
 8000c64:	4180      	sbcs	r0, r0
 8000c66:	1a8a      	subs	r2, r1, r2
 8000c68:	4240      	negs	r0, r0
 8000c6a:	1a12      	subs	r2, r2, r0
 8000c6c:	4692      	mov	sl, r2
 8000c6e:	0212      	lsls	r2, r2, #8
 8000c70:	d549      	bpl.n	8000d06 <__aeabi_dadd+0x676>
 8000c72:	4642      	mov	r2, r8
 8000c74:	1ad4      	subs	r4, r2, r3
 8000c76:	45a0      	cmp	r8, r4
 8000c78:	4180      	sbcs	r0, r0
 8000c7a:	464b      	mov	r3, r9
 8000c7c:	4240      	negs	r0, r0
 8000c7e:	1a59      	subs	r1, r3, r1
 8000c80:	1a0b      	subs	r3, r1, r0
 8000c82:	469a      	mov	sl, r3
 8000c84:	4665      	mov	r5, ip
 8000c86:	e57f      	b.n	8000788 <__aeabi_dadd+0xf8>
 8000c88:	464b      	mov	r3, r9
 8000c8a:	464a      	mov	r2, r9
 8000c8c:	08c0      	lsrs	r0, r0, #3
 8000c8e:	075b      	lsls	r3, r3, #29
 8000c90:	4303      	orrs	r3, r0
 8000c92:	08d1      	lsrs	r1, r2, #3
 8000c94:	e62b      	b.n	80008ee <__aeabi_dadd+0x25e>
 8000c96:	464a      	mov	r2, r9
 8000c98:	08db      	lsrs	r3, r3, #3
 8000c9a:	4302      	orrs	r2, r0
 8000c9c:	d138      	bne.n	8000d10 <__aeabi_dadd+0x680>
 8000c9e:	074a      	lsls	r2, r1, #29
 8000ca0:	4313      	orrs	r3, r2
 8000ca2:	08c9      	lsrs	r1, r1, #3
 8000ca4:	e646      	b.n	8000934 <__aeabi_dadd+0x2a4>
 8000ca6:	464b      	mov	r3, r9
 8000ca8:	464a      	mov	r2, r9
 8000caa:	08c0      	lsrs	r0, r0, #3
 8000cac:	075b      	lsls	r3, r3, #29
 8000cae:	4303      	orrs	r3, r0
 8000cb0:	08d1      	lsrs	r1, r2, #3
 8000cb2:	e61f      	b.n	80008f4 <__aeabi_dadd+0x264>
 8000cb4:	181c      	adds	r4, r3, r0
 8000cb6:	429c      	cmp	r4, r3
 8000cb8:	419b      	sbcs	r3, r3
 8000cba:	4449      	add	r1, r9
 8000cbc:	468a      	mov	sl, r1
 8000cbe:	425b      	negs	r3, r3
 8000cc0:	449a      	add	sl, r3
 8000cc2:	4653      	mov	r3, sl
 8000cc4:	021b      	lsls	r3, r3, #8
 8000cc6:	d400      	bmi.n	8000cca <__aeabi_dadd+0x63a>
 8000cc8:	e607      	b.n	80008da <__aeabi_dadd+0x24a>
 8000cca:	4652      	mov	r2, sl
 8000ccc:	4b1f      	ldr	r3, [pc, #124]	; (8000d4c <__aeabi_dadd+0x6bc>)
 8000cce:	2601      	movs	r6, #1
 8000cd0:	401a      	ands	r2, r3
 8000cd2:	4692      	mov	sl, r2
 8000cd4:	e601      	b.n	80008da <__aeabi_dadd+0x24a>
 8000cd6:	003c      	movs	r4, r7
 8000cd8:	000e      	movs	r6, r1
 8000cda:	3c20      	subs	r4, #32
 8000cdc:	40e6      	lsrs	r6, r4
 8000cde:	2f20      	cmp	r7, #32
 8000ce0:	d003      	beq.n	8000cea <__aeabi_dadd+0x65a>
 8000ce2:	2440      	movs	r4, #64	; 0x40
 8000ce4:	1be4      	subs	r4, r4, r7
 8000ce6:	40a1      	lsls	r1, r4
 8000ce8:	430b      	orrs	r3, r1
 8000cea:	001c      	movs	r4, r3
 8000cec:	1e63      	subs	r3, r4, #1
 8000cee:	419c      	sbcs	r4, r3
 8000cf0:	4334      	orrs	r4, r6
 8000cf2:	e65e      	b.n	80009b2 <__aeabi_dadd+0x322>
 8000cf4:	4443      	add	r3, r8
 8000cf6:	4283      	cmp	r3, r0
 8000cf8:	4180      	sbcs	r0, r0
 8000cfa:	4449      	add	r1, r9
 8000cfc:	468a      	mov	sl, r1
 8000cfe:	4240      	negs	r0, r0
 8000d00:	001c      	movs	r4, r3
 8000d02:	4482      	add	sl, r0
 8000d04:	e6bc      	b.n	8000a80 <__aeabi_dadd+0x3f0>
 8000d06:	4653      	mov	r3, sl
 8000d08:	4323      	orrs	r3, r4
 8000d0a:	d100      	bne.n	8000d0e <__aeabi_dadd+0x67e>
 8000d0c:	e6a9      	b.n	8000a62 <__aeabi_dadd+0x3d2>
 8000d0e:	e5e4      	b.n	80008da <__aeabi_dadd+0x24a>
 8000d10:	074a      	lsls	r2, r1, #29
 8000d12:	4313      	orrs	r3, r2
 8000d14:	2280      	movs	r2, #128	; 0x80
 8000d16:	08c9      	lsrs	r1, r1, #3
 8000d18:	0312      	lsls	r2, r2, #12
 8000d1a:	4211      	tst	r1, r2
 8000d1c:	d009      	beq.n	8000d32 <__aeabi_dadd+0x6a2>
 8000d1e:	4648      	mov	r0, r9
 8000d20:	08c4      	lsrs	r4, r0, #3
 8000d22:	4214      	tst	r4, r2
 8000d24:	d105      	bne.n	8000d32 <__aeabi_dadd+0x6a2>
 8000d26:	4643      	mov	r3, r8
 8000d28:	4665      	mov	r5, ip
 8000d2a:	0021      	movs	r1, r4
 8000d2c:	08db      	lsrs	r3, r3, #3
 8000d2e:	0742      	lsls	r2, r0, #29
 8000d30:	4313      	orrs	r3, r2
 8000d32:	0f5a      	lsrs	r2, r3, #29
 8000d34:	00db      	lsls	r3, r3, #3
 8000d36:	08db      	lsrs	r3, r3, #3
 8000d38:	0752      	lsls	r2, r2, #29
 8000d3a:	4313      	orrs	r3, r2
 8000d3c:	e5fa      	b.n	8000934 <__aeabi_dadd+0x2a4>
 8000d3e:	2300      	movs	r3, #0
 8000d40:	4a01      	ldr	r2, [pc, #4]	; (8000d48 <__aeabi_dadd+0x6b8>)
 8000d42:	001c      	movs	r4, r3
 8000d44:	e540      	b.n	80007c8 <__aeabi_dadd+0x138>
 8000d46:	46c0      	nop			; (mov r8, r8)
 8000d48:	000007ff 	.word	0x000007ff
 8000d4c:	ff7fffff 	.word	0xff7fffff

08000d50 <__aeabi_ddiv>:
 8000d50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d52:	4657      	mov	r7, sl
 8000d54:	464e      	mov	r6, r9
 8000d56:	4645      	mov	r5, r8
 8000d58:	46de      	mov	lr, fp
 8000d5a:	b5e0      	push	{r5, r6, r7, lr}
 8000d5c:	030c      	lsls	r4, r1, #12
 8000d5e:	001f      	movs	r7, r3
 8000d60:	004b      	lsls	r3, r1, #1
 8000d62:	4681      	mov	r9, r0
 8000d64:	4692      	mov	sl, r2
 8000d66:	0005      	movs	r5, r0
 8000d68:	b085      	sub	sp, #20
 8000d6a:	0b24      	lsrs	r4, r4, #12
 8000d6c:	0d5b      	lsrs	r3, r3, #21
 8000d6e:	0fce      	lsrs	r6, r1, #31
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d100      	bne.n	8000d76 <__aeabi_ddiv+0x26>
 8000d74:	e152      	b.n	800101c <__aeabi_ddiv+0x2cc>
 8000d76:	4ad2      	ldr	r2, [pc, #840]	; (80010c0 <__aeabi_ddiv+0x370>)
 8000d78:	4293      	cmp	r3, r2
 8000d7a:	d100      	bne.n	8000d7e <__aeabi_ddiv+0x2e>
 8000d7c:	e16e      	b.n	800105c <__aeabi_ddiv+0x30c>
 8000d7e:	0f42      	lsrs	r2, r0, #29
 8000d80:	00e4      	lsls	r4, r4, #3
 8000d82:	4314      	orrs	r4, r2
 8000d84:	2280      	movs	r2, #128	; 0x80
 8000d86:	0412      	lsls	r2, r2, #16
 8000d88:	4322      	orrs	r2, r4
 8000d8a:	4690      	mov	r8, r2
 8000d8c:	4acd      	ldr	r2, [pc, #820]	; (80010c4 <__aeabi_ddiv+0x374>)
 8000d8e:	00c5      	lsls	r5, r0, #3
 8000d90:	4693      	mov	fp, r2
 8000d92:	449b      	add	fp, r3
 8000d94:	2300      	movs	r3, #0
 8000d96:	4699      	mov	r9, r3
 8000d98:	9300      	str	r3, [sp, #0]
 8000d9a:	033c      	lsls	r4, r7, #12
 8000d9c:	007b      	lsls	r3, r7, #1
 8000d9e:	4650      	mov	r0, sl
 8000da0:	0b24      	lsrs	r4, r4, #12
 8000da2:	0d5b      	lsrs	r3, r3, #21
 8000da4:	0fff      	lsrs	r7, r7, #31
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d100      	bne.n	8000dac <__aeabi_ddiv+0x5c>
 8000daa:	e11a      	b.n	8000fe2 <__aeabi_ddiv+0x292>
 8000dac:	4ac4      	ldr	r2, [pc, #784]	; (80010c0 <__aeabi_ddiv+0x370>)
 8000dae:	4293      	cmp	r3, r2
 8000db0:	d100      	bne.n	8000db4 <__aeabi_ddiv+0x64>
 8000db2:	e15e      	b.n	8001072 <__aeabi_ddiv+0x322>
 8000db4:	0f42      	lsrs	r2, r0, #29
 8000db6:	00e4      	lsls	r4, r4, #3
 8000db8:	4322      	orrs	r2, r4
 8000dba:	2480      	movs	r4, #128	; 0x80
 8000dbc:	0424      	lsls	r4, r4, #16
 8000dbe:	4314      	orrs	r4, r2
 8000dc0:	4ac0      	ldr	r2, [pc, #768]	; (80010c4 <__aeabi_ddiv+0x374>)
 8000dc2:	00c1      	lsls	r1, r0, #3
 8000dc4:	4694      	mov	ip, r2
 8000dc6:	465a      	mov	r2, fp
 8000dc8:	4463      	add	r3, ip
 8000dca:	1ad3      	subs	r3, r2, r3
 8000dcc:	469b      	mov	fp, r3
 8000dce:	2000      	movs	r0, #0
 8000dd0:	0033      	movs	r3, r6
 8000dd2:	407b      	eors	r3, r7
 8000dd4:	469a      	mov	sl, r3
 8000dd6:	464b      	mov	r3, r9
 8000dd8:	2b0f      	cmp	r3, #15
 8000dda:	d827      	bhi.n	8000e2c <__aeabi_ddiv+0xdc>
 8000ddc:	4aba      	ldr	r2, [pc, #744]	; (80010c8 <__aeabi_ddiv+0x378>)
 8000dde:	009b      	lsls	r3, r3, #2
 8000de0:	58d3      	ldr	r3, [r2, r3]
 8000de2:	469f      	mov	pc, r3
 8000de4:	46b2      	mov	sl, r6
 8000de6:	9b00      	ldr	r3, [sp, #0]
 8000de8:	2b02      	cmp	r3, #2
 8000dea:	d016      	beq.n	8000e1a <__aeabi_ddiv+0xca>
 8000dec:	2b03      	cmp	r3, #3
 8000dee:	d100      	bne.n	8000df2 <__aeabi_ddiv+0xa2>
 8000df0:	e287      	b.n	8001302 <__aeabi_ddiv+0x5b2>
 8000df2:	2b01      	cmp	r3, #1
 8000df4:	d000      	beq.n	8000df8 <__aeabi_ddiv+0xa8>
 8000df6:	e0d5      	b.n	8000fa4 <__aeabi_ddiv+0x254>
 8000df8:	2300      	movs	r3, #0
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	2500      	movs	r5, #0
 8000dfe:	051b      	lsls	r3, r3, #20
 8000e00:	4313      	orrs	r3, r2
 8000e02:	4652      	mov	r2, sl
 8000e04:	07d2      	lsls	r2, r2, #31
 8000e06:	4313      	orrs	r3, r2
 8000e08:	0028      	movs	r0, r5
 8000e0a:	0019      	movs	r1, r3
 8000e0c:	b005      	add	sp, #20
 8000e0e:	bcf0      	pop	{r4, r5, r6, r7}
 8000e10:	46bb      	mov	fp, r7
 8000e12:	46b2      	mov	sl, r6
 8000e14:	46a9      	mov	r9, r5
 8000e16:	46a0      	mov	r8, r4
 8000e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e1a:	2200      	movs	r2, #0
 8000e1c:	2500      	movs	r5, #0
 8000e1e:	4ba8      	ldr	r3, [pc, #672]	; (80010c0 <__aeabi_ddiv+0x370>)
 8000e20:	e7ed      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8000e22:	46ba      	mov	sl, r7
 8000e24:	46a0      	mov	r8, r4
 8000e26:	000d      	movs	r5, r1
 8000e28:	9000      	str	r0, [sp, #0]
 8000e2a:	e7dc      	b.n	8000de6 <__aeabi_ddiv+0x96>
 8000e2c:	4544      	cmp	r4, r8
 8000e2e:	d200      	bcs.n	8000e32 <__aeabi_ddiv+0xe2>
 8000e30:	e1c4      	b.n	80011bc <__aeabi_ddiv+0x46c>
 8000e32:	d100      	bne.n	8000e36 <__aeabi_ddiv+0xe6>
 8000e34:	e1bf      	b.n	80011b6 <__aeabi_ddiv+0x466>
 8000e36:	2301      	movs	r3, #1
 8000e38:	425b      	negs	r3, r3
 8000e3a:	469c      	mov	ip, r3
 8000e3c:	002e      	movs	r6, r5
 8000e3e:	4640      	mov	r0, r8
 8000e40:	2500      	movs	r5, #0
 8000e42:	44e3      	add	fp, ip
 8000e44:	0223      	lsls	r3, r4, #8
 8000e46:	0e0c      	lsrs	r4, r1, #24
 8000e48:	431c      	orrs	r4, r3
 8000e4a:	0c1b      	lsrs	r3, r3, #16
 8000e4c:	4699      	mov	r9, r3
 8000e4e:	0423      	lsls	r3, r4, #16
 8000e50:	020a      	lsls	r2, r1, #8
 8000e52:	0c1f      	lsrs	r7, r3, #16
 8000e54:	4649      	mov	r1, r9
 8000e56:	9200      	str	r2, [sp, #0]
 8000e58:	9701      	str	r7, [sp, #4]
 8000e5a:	f7ff f9db 	bl	8000214 <__aeabi_uidivmod>
 8000e5e:	0002      	movs	r2, r0
 8000e60:	437a      	muls	r2, r7
 8000e62:	040b      	lsls	r3, r1, #16
 8000e64:	0c31      	lsrs	r1, r6, #16
 8000e66:	4680      	mov	r8, r0
 8000e68:	4319      	orrs	r1, r3
 8000e6a:	428a      	cmp	r2, r1
 8000e6c:	d907      	bls.n	8000e7e <__aeabi_ddiv+0x12e>
 8000e6e:	2301      	movs	r3, #1
 8000e70:	425b      	negs	r3, r3
 8000e72:	469c      	mov	ip, r3
 8000e74:	1909      	adds	r1, r1, r4
 8000e76:	44e0      	add	r8, ip
 8000e78:	428c      	cmp	r4, r1
 8000e7a:	d800      	bhi.n	8000e7e <__aeabi_ddiv+0x12e>
 8000e7c:	e201      	b.n	8001282 <__aeabi_ddiv+0x532>
 8000e7e:	1a88      	subs	r0, r1, r2
 8000e80:	4649      	mov	r1, r9
 8000e82:	f7ff f9c7 	bl	8000214 <__aeabi_uidivmod>
 8000e86:	9a01      	ldr	r2, [sp, #4]
 8000e88:	0436      	lsls	r6, r6, #16
 8000e8a:	4342      	muls	r2, r0
 8000e8c:	0409      	lsls	r1, r1, #16
 8000e8e:	0c36      	lsrs	r6, r6, #16
 8000e90:	0003      	movs	r3, r0
 8000e92:	430e      	orrs	r6, r1
 8000e94:	42b2      	cmp	r2, r6
 8000e96:	d904      	bls.n	8000ea2 <__aeabi_ddiv+0x152>
 8000e98:	1936      	adds	r6, r6, r4
 8000e9a:	3b01      	subs	r3, #1
 8000e9c:	42b4      	cmp	r4, r6
 8000e9e:	d800      	bhi.n	8000ea2 <__aeabi_ddiv+0x152>
 8000ea0:	e1e9      	b.n	8001276 <__aeabi_ddiv+0x526>
 8000ea2:	1ab0      	subs	r0, r6, r2
 8000ea4:	4642      	mov	r2, r8
 8000ea6:	9e00      	ldr	r6, [sp, #0]
 8000ea8:	0412      	lsls	r2, r2, #16
 8000eaa:	431a      	orrs	r2, r3
 8000eac:	0c33      	lsrs	r3, r6, #16
 8000eae:	001f      	movs	r7, r3
 8000eb0:	0c11      	lsrs	r1, r2, #16
 8000eb2:	4690      	mov	r8, r2
 8000eb4:	9302      	str	r3, [sp, #8]
 8000eb6:	0413      	lsls	r3, r2, #16
 8000eb8:	0432      	lsls	r2, r6, #16
 8000eba:	0c16      	lsrs	r6, r2, #16
 8000ebc:	0032      	movs	r2, r6
 8000ebe:	0c1b      	lsrs	r3, r3, #16
 8000ec0:	435a      	muls	r2, r3
 8000ec2:	9603      	str	r6, [sp, #12]
 8000ec4:	437b      	muls	r3, r7
 8000ec6:	434e      	muls	r6, r1
 8000ec8:	4379      	muls	r1, r7
 8000eca:	0c17      	lsrs	r7, r2, #16
 8000ecc:	46bc      	mov	ip, r7
 8000ece:	199b      	adds	r3, r3, r6
 8000ed0:	4463      	add	r3, ip
 8000ed2:	429e      	cmp	r6, r3
 8000ed4:	d903      	bls.n	8000ede <__aeabi_ddiv+0x18e>
 8000ed6:	2680      	movs	r6, #128	; 0x80
 8000ed8:	0276      	lsls	r6, r6, #9
 8000eda:	46b4      	mov	ip, r6
 8000edc:	4461      	add	r1, ip
 8000ede:	0c1e      	lsrs	r6, r3, #16
 8000ee0:	1871      	adds	r1, r6, r1
 8000ee2:	0416      	lsls	r6, r2, #16
 8000ee4:	041b      	lsls	r3, r3, #16
 8000ee6:	0c36      	lsrs	r6, r6, #16
 8000ee8:	199e      	adds	r6, r3, r6
 8000eea:	4288      	cmp	r0, r1
 8000eec:	d302      	bcc.n	8000ef4 <__aeabi_ddiv+0x1a4>
 8000eee:	d112      	bne.n	8000f16 <__aeabi_ddiv+0x1c6>
 8000ef0:	42b5      	cmp	r5, r6
 8000ef2:	d210      	bcs.n	8000f16 <__aeabi_ddiv+0x1c6>
 8000ef4:	4643      	mov	r3, r8
 8000ef6:	1e5a      	subs	r2, r3, #1
 8000ef8:	9b00      	ldr	r3, [sp, #0]
 8000efa:	469c      	mov	ip, r3
 8000efc:	4465      	add	r5, ip
 8000efe:	001f      	movs	r7, r3
 8000f00:	429d      	cmp	r5, r3
 8000f02:	419b      	sbcs	r3, r3
 8000f04:	425b      	negs	r3, r3
 8000f06:	191b      	adds	r3, r3, r4
 8000f08:	18c0      	adds	r0, r0, r3
 8000f0a:	4284      	cmp	r4, r0
 8000f0c:	d200      	bcs.n	8000f10 <__aeabi_ddiv+0x1c0>
 8000f0e:	e19e      	b.n	800124e <__aeabi_ddiv+0x4fe>
 8000f10:	d100      	bne.n	8000f14 <__aeabi_ddiv+0x1c4>
 8000f12:	e199      	b.n	8001248 <__aeabi_ddiv+0x4f8>
 8000f14:	4690      	mov	r8, r2
 8000f16:	1bae      	subs	r6, r5, r6
 8000f18:	42b5      	cmp	r5, r6
 8000f1a:	41ad      	sbcs	r5, r5
 8000f1c:	1a40      	subs	r0, r0, r1
 8000f1e:	426d      	negs	r5, r5
 8000f20:	1b40      	subs	r0, r0, r5
 8000f22:	4284      	cmp	r4, r0
 8000f24:	d100      	bne.n	8000f28 <__aeabi_ddiv+0x1d8>
 8000f26:	e1d2      	b.n	80012ce <__aeabi_ddiv+0x57e>
 8000f28:	4649      	mov	r1, r9
 8000f2a:	f7ff f973 	bl	8000214 <__aeabi_uidivmod>
 8000f2e:	9a01      	ldr	r2, [sp, #4]
 8000f30:	040b      	lsls	r3, r1, #16
 8000f32:	4342      	muls	r2, r0
 8000f34:	0c31      	lsrs	r1, r6, #16
 8000f36:	0005      	movs	r5, r0
 8000f38:	4319      	orrs	r1, r3
 8000f3a:	428a      	cmp	r2, r1
 8000f3c:	d900      	bls.n	8000f40 <__aeabi_ddiv+0x1f0>
 8000f3e:	e16c      	b.n	800121a <__aeabi_ddiv+0x4ca>
 8000f40:	1a88      	subs	r0, r1, r2
 8000f42:	4649      	mov	r1, r9
 8000f44:	f7ff f966 	bl	8000214 <__aeabi_uidivmod>
 8000f48:	9a01      	ldr	r2, [sp, #4]
 8000f4a:	0436      	lsls	r6, r6, #16
 8000f4c:	4342      	muls	r2, r0
 8000f4e:	0409      	lsls	r1, r1, #16
 8000f50:	0c36      	lsrs	r6, r6, #16
 8000f52:	0003      	movs	r3, r0
 8000f54:	430e      	orrs	r6, r1
 8000f56:	42b2      	cmp	r2, r6
 8000f58:	d900      	bls.n	8000f5c <__aeabi_ddiv+0x20c>
 8000f5a:	e153      	b.n	8001204 <__aeabi_ddiv+0x4b4>
 8000f5c:	9803      	ldr	r0, [sp, #12]
 8000f5e:	1ab6      	subs	r6, r6, r2
 8000f60:	0002      	movs	r2, r0
 8000f62:	042d      	lsls	r5, r5, #16
 8000f64:	431d      	orrs	r5, r3
 8000f66:	9f02      	ldr	r7, [sp, #8]
 8000f68:	042b      	lsls	r3, r5, #16
 8000f6a:	0c1b      	lsrs	r3, r3, #16
 8000f6c:	435a      	muls	r2, r3
 8000f6e:	437b      	muls	r3, r7
 8000f70:	469c      	mov	ip, r3
 8000f72:	0c29      	lsrs	r1, r5, #16
 8000f74:	4348      	muls	r0, r1
 8000f76:	0c13      	lsrs	r3, r2, #16
 8000f78:	4484      	add	ip, r0
 8000f7a:	4463      	add	r3, ip
 8000f7c:	4379      	muls	r1, r7
 8000f7e:	4298      	cmp	r0, r3
 8000f80:	d903      	bls.n	8000f8a <__aeabi_ddiv+0x23a>
 8000f82:	2080      	movs	r0, #128	; 0x80
 8000f84:	0240      	lsls	r0, r0, #9
 8000f86:	4684      	mov	ip, r0
 8000f88:	4461      	add	r1, ip
 8000f8a:	0c18      	lsrs	r0, r3, #16
 8000f8c:	0412      	lsls	r2, r2, #16
 8000f8e:	041b      	lsls	r3, r3, #16
 8000f90:	0c12      	lsrs	r2, r2, #16
 8000f92:	1840      	adds	r0, r0, r1
 8000f94:	189b      	adds	r3, r3, r2
 8000f96:	4286      	cmp	r6, r0
 8000f98:	d200      	bcs.n	8000f9c <__aeabi_ddiv+0x24c>
 8000f9a:	e100      	b.n	800119e <__aeabi_ddiv+0x44e>
 8000f9c:	d100      	bne.n	8000fa0 <__aeabi_ddiv+0x250>
 8000f9e:	e0fb      	b.n	8001198 <__aeabi_ddiv+0x448>
 8000fa0:	2301      	movs	r3, #1
 8000fa2:	431d      	orrs	r5, r3
 8000fa4:	4b49      	ldr	r3, [pc, #292]	; (80010cc <__aeabi_ddiv+0x37c>)
 8000fa6:	445b      	add	r3, fp
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	dc00      	bgt.n	8000fae <__aeabi_ddiv+0x25e>
 8000fac:	e0aa      	b.n	8001104 <__aeabi_ddiv+0x3b4>
 8000fae:	076a      	lsls	r2, r5, #29
 8000fb0:	d000      	beq.n	8000fb4 <__aeabi_ddiv+0x264>
 8000fb2:	e13d      	b.n	8001230 <__aeabi_ddiv+0x4e0>
 8000fb4:	08e9      	lsrs	r1, r5, #3
 8000fb6:	4642      	mov	r2, r8
 8000fb8:	01d2      	lsls	r2, r2, #7
 8000fba:	d506      	bpl.n	8000fca <__aeabi_ddiv+0x27a>
 8000fbc:	4642      	mov	r2, r8
 8000fbe:	4b44      	ldr	r3, [pc, #272]	; (80010d0 <__aeabi_ddiv+0x380>)
 8000fc0:	401a      	ands	r2, r3
 8000fc2:	2380      	movs	r3, #128	; 0x80
 8000fc4:	4690      	mov	r8, r2
 8000fc6:	00db      	lsls	r3, r3, #3
 8000fc8:	445b      	add	r3, fp
 8000fca:	4a42      	ldr	r2, [pc, #264]	; (80010d4 <__aeabi_ddiv+0x384>)
 8000fcc:	4293      	cmp	r3, r2
 8000fce:	dd00      	ble.n	8000fd2 <__aeabi_ddiv+0x282>
 8000fd0:	e723      	b.n	8000e1a <__aeabi_ddiv+0xca>
 8000fd2:	4642      	mov	r2, r8
 8000fd4:	055b      	lsls	r3, r3, #21
 8000fd6:	0755      	lsls	r5, r2, #29
 8000fd8:	0252      	lsls	r2, r2, #9
 8000fda:	430d      	orrs	r5, r1
 8000fdc:	0b12      	lsrs	r2, r2, #12
 8000fde:	0d5b      	lsrs	r3, r3, #21
 8000fe0:	e70d      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8000fe2:	4651      	mov	r1, sl
 8000fe4:	4321      	orrs	r1, r4
 8000fe6:	d100      	bne.n	8000fea <__aeabi_ddiv+0x29a>
 8000fe8:	e07c      	b.n	80010e4 <__aeabi_ddiv+0x394>
 8000fea:	2c00      	cmp	r4, #0
 8000fec:	d100      	bne.n	8000ff0 <__aeabi_ddiv+0x2a0>
 8000fee:	e0fb      	b.n	80011e8 <__aeabi_ddiv+0x498>
 8000ff0:	0020      	movs	r0, r4
 8000ff2:	f001 f947 	bl	8002284 <__clzsi2>
 8000ff6:	0002      	movs	r2, r0
 8000ff8:	3a0b      	subs	r2, #11
 8000ffa:	231d      	movs	r3, #29
 8000ffc:	1a9b      	subs	r3, r3, r2
 8000ffe:	4652      	mov	r2, sl
 8001000:	0001      	movs	r1, r0
 8001002:	40da      	lsrs	r2, r3
 8001004:	4653      	mov	r3, sl
 8001006:	3908      	subs	r1, #8
 8001008:	408b      	lsls	r3, r1
 800100a:	408c      	lsls	r4, r1
 800100c:	0019      	movs	r1, r3
 800100e:	4314      	orrs	r4, r2
 8001010:	4b31      	ldr	r3, [pc, #196]	; (80010d8 <__aeabi_ddiv+0x388>)
 8001012:	4458      	add	r0, fp
 8001014:	469b      	mov	fp, r3
 8001016:	4483      	add	fp, r0
 8001018:	2000      	movs	r0, #0
 800101a:	e6d9      	b.n	8000dd0 <__aeabi_ddiv+0x80>
 800101c:	0003      	movs	r3, r0
 800101e:	4323      	orrs	r3, r4
 8001020:	4698      	mov	r8, r3
 8001022:	d044      	beq.n	80010ae <__aeabi_ddiv+0x35e>
 8001024:	2c00      	cmp	r4, #0
 8001026:	d100      	bne.n	800102a <__aeabi_ddiv+0x2da>
 8001028:	e0cf      	b.n	80011ca <__aeabi_ddiv+0x47a>
 800102a:	0020      	movs	r0, r4
 800102c:	f001 f92a 	bl	8002284 <__clzsi2>
 8001030:	0001      	movs	r1, r0
 8001032:	0002      	movs	r2, r0
 8001034:	390b      	subs	r1, #11
 8001036:	231d      	movs	r3, #29
 8001038:	1a5b      	subs	r3, r3, r1
 800103a:	4649      	mov	r1, r9
 800103c:	0010      	movs	r0, r2
 800103e:	40d9      	lsrs	r1, r3
 8001040:	3808      	subs	r0, #8
 8001042:	4084      	lsls	r4, r0
 8001044:	000b      	movs	r3, r1
 8001046:	464d      	mov	r5, r9
 8001048:	4323      	orrs	r3, r4
 800104a:	4698      	mov	r8, r3
 800104c:	4085      	lsls	r5, r0
 800104e:	4b23      	ldr	r3, [pc, #140]	; (80010dc <__aeabi_ddiv+0x38c>)
 8001050:	1a9b      	subs	r3, r3, r2
 8001052:	469b      	mov	fp, r3
 8001054:	2300      	movs	r3, #0
 8001056:	4699      	mov	r9, r3
 8001058:	9300      	str	r3, [sp, #0]
 800105a:	e69e      	b.n	8000d9a <__aeabi_ddiv+0x4a>
 800105c:	0002      	movs	r2, r0
 800105e:	4322      	orrs	r2, r4
 8001060:	4690      	mov	r8, r2
 8001062:	d11d      	bne.n	80010a0 <__aeabi_ddiv+0x350>
 8001064:	2208      	movs	r2, #8
 8001066:	469b      	mov	fp, r3
 8001068:	2302      	movs	r3, #2
 800106a:	2500      	movs	r5, #0
 800106c:	4691      	mov	r9, r2
 800106e:	9300      	str	r3, [sp, #0]
 8001070:	e693      	b.n	8000d9a <__aeabi_ddiv+0x4a>
 8001072:	4651      	mov	r1, sl
 8001074:	4321      	orrs	r1, r4
 8001076:	d109      	bne.n	800108c <__aeabi_ddiv+0x33c>
 8001078:	2302      	movs	r3, #2
 800107a:	464a      	mov	r2, r9
 800107c:	431a      	orrs	r2, r3
 800107e:	4b18      	ldr	r3, [pc, #96]	; (80010e0 <__aeabi_ddiv+0x390>)
 8001080:	4691      	mov	r9, r2
 8001082:	469c      	mov	ip, r3
 8001084:	2400      	movs	r4, #0
 8001086:	2002      	movs	r0, #2
 8001088:	44e3      	add	fp, ip
 800108a:	e6a1      	b.n	8000dd0 <__aeabi_ddiv+0x80>
 800108c:	2303      	movs	r3, #3
 800108e:	464a      	mov	r2, r9
 8001090:	431a      	orrs	r2, r3
 8001092:	4b13      	ldr	r3, [pc, #76]	; (80010e0 <__aeabi_ddiv+0x390>)
 8001094:	4691      	mov	r9, r2
 8001096:	469c      	mov	ip, r3
 8001098:	4651      	mov	r1, sl
 800109a:	2003      	movs	r0, #3
 800109c:	44e3      	add	fp, ip
 800109e:	e697      	b.n	8000dd0 <__aeabi_ddiv+0x80>
 80010a0:	220c      	movs	r2, #12
 80010a2:	469b      	mov	fp, r3
 80010a4:	2303      	movs	r3, #3
 80010a6:	46a0      	mov	r8, r4
 80010a8:	4691      	mov	r9, r2
 80010aa:	9300      	str	r3, [sp, #0]
 80010ac:	e675      	b.n	8000d9a <__aeabi_ddiv+0x4a>
 80010ae:	2304      	movs	r3, #4
 80010b0:	4699      	mov	r9, r3
 80010b2:	2300      	movs	r3, #0
 80010b4:	469b      	mov	fp, r3
 80010b6:	3301      	adds	r3, #1
 80010b8:	2500      	movs	r5, #0
 80010ba:	9300      	str	r3, [sp, #0]
 80010bc:	e66d      	b.n	8000d9a <__aeabi_ddiv+0x4a>
 80010be:	46c0      	nop			; (mov r8, r8)
 80010c0:	000007ff 	.word	0x000007ff
 80010c4:	fffffc01 	.word	0xfffffc01
 80010c8:	08003dac 	.word	0x08003dac
 80010cc:	000003ff 	.word	0x000003ff
 80010d0:	feffffff 	.word	0xfeffffff
 80010d4:	000007fe 	.word	0x000007fe
 80010d8:	000003f3 	.word	0x000003f3
 80010dc:	fffffc0d 	.word	0xfffffc0d
 80010e0:	fffff801 	.word	0xfffff801
 80010e4:	464a      	mov	r2, r9
 80010e6:	2301      	movs	r3, #1
 80010e8:	431a      	orrs	r2, r3
 80010ea:	4691      	mov	r9, r2
 80010ec:	2400      	movs	r4, #0
 80010ee:	2001      	movs	r0, #1
 80010f0:	e66e      	b.n	8000dd0 <__aeabi_ddiv+0x80>
 80010f2:	2300      	movs	r3, #0
 80010f4:	2280      	movs	r2, #128	; 0x80
 80010f6:	469a      	mov	sl, r3
 80010f8:	2500      	movs	r5, #0
 80010fa:	4b88      	ldr	r3, [pc, #544]	; (800131c <__aeabi_ddiv+0x5cc>)
 80010fc:	0312      	lsls	r2, r2, #12
 80010fe:	e67e      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8001100:	2501      	movs	r5, #1
 8001102:	426d      	negs	r5, r5
 8001104:	2201      	movs	r2, #1
 8001106:	1ad2      	subs	r2, r2, r3
 8001108:	2a38      	cmp	r2, #56	; 0x38
 800110a:	dd00      	ble.n	800110e <__aeabi_ddiv+0x3be>
 800110c:	e674      	b.n	8000df8 <__aeabi_ddiv+0xa8>
 800110e:	2a1f      	cmp	r2, #31
 8001110:	dc00      	bgt.n	8001114 <__aeabi_ddiv+0x3c4>
 8001112:	e0bd      	b.n	8001290 <__aeabi_ddiv+0x540>
 8001114:	211f      	movs	r1, #31
 8001116:	4249      	negs	r1, r1
 8001118:	1acb      	subs	r3, r1, r3
 800111a:	4641      	mov	r1, r8
 800111c:	40d9      	lsrs	r1, r3
 800111e:	000b      	movs	r3, r1
 8001120:	2a20      	cmp	r2, #32
 8001122:	d004      	beq.n	800112e <__aeabi_ddiv+0x3de>
 8001124:	4641      	mov	r1, r8
 8001126:	4a7e      	ldr	r2, [pc, #504]	; (8001320 <__aeabi_ddiv+0x5d0>)
 8001128:	445a      	add	r2, fp
 800112a:	4091      	lsls	r1, r2
 800112c:	430d      	orrs	r5, r1
 800112e:	0029      	movs	r1, r5
 8001130:	1e4a      	subs	r2, r1, #1
 8001132:	4191      	sbcs	r1, r2
 8001134:	4319      	orrs	r1, r3
 8001136:	2307      	movs	r3, #7
 8001138:	001d      	movs	r5, r3
 800113a:	2200      	movs	r2, #0
 800113c:	400d      	ands	r5, r1
 800113e:	420b      	tst	r3, r1
 8001140:	d100      	bne.n	8001144 <__aeabi_ddiv+0x3f4>
 8001142:	e0d0      	b.n	80012e6 <__aeabi_ddiv+0x596>
 8001144:	220f      	movs	r2, #15
 8001146:	2300      	movs	r3, #0
 8001148:	400a      	ands	r2, r1
 800114a:	2a04      	cmp	r2, #4
 800114c:	d100      	bne.n	8001150 <__aeabi_ddiv+0x400>
 800114e:	e0c7      	b.n	80012e0 <__aeabi_ddiv+0x590>
 8001150:	1d0a      	adds	r2, r1, #4
 8001152:	428a      	cmp	r2, r1
 8001154:	4189      	sbcs	r1, r1
 8001156:	4249      	negs	r1, r1
 8001158:	185b      	adds	r3, r3, r1
 800115a:	0011      	movs	r1, r2
 800115c:	021a      	lsls	r2, r3, #8
 800115e:	d400      	bmi.n	8001162 <__aeabi_ddiv+0x412>
 8001160:	e0be      	b.n	80012e0 <__aeabi_ddiv+0x590>
 8001162:	2301      	movs	r3, #1
 8001164:	2200      	movs	r2, #0
 8001166:	2500      	movs	r5, #0
 8001168:	e649      	b.n	8000dfe <__aeabi_ddiv+0xae>
 800116a:	2280      	movs	r2, #128	; 0x80
 800116c:	4643      	mov	r3, r8
 800116e:	0312      	lsls	r2, r2, #12
 8001170:	4213      	tst	r3, r2
 8001172:	d008      	beq.n	8001186 <__aeabi_ddiv+0x436>
 8001174:	4214      	tst	r4, r2
 8001176:	d106      	bne.n	8001186 <__aeabi_ddiv+0x436>
 8001178:	4322      	orrs	r2, r4
 800117a:	0312      	lsls	r2, r2, #12
 800117c:	46ba      	mov	sl, r7
 800117e:	000d      	movs	r5, r1
 8001180:	4b66      	ldr	r3, [pc, #408]	; (800131c <__aeabi_ddiv+0x5cc>)
 8001182:	0b12      	lsrs	r2, r2, #12
 8001184:	e63b      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8001186:	2280      	movs	r2, #128	; 0x80
 8001188:	4643      	mov	r3, r8
 800118a:	0312      	lsls	r2, r2, #12
 800118c:	431a      	orrs	r2, r3
 800118e:	0312      	lsls	r2, r2, #12
 8001190:	46b2      	mov	sl, r6
 8001192:	4b62      	ldr	r3, [pc, #392]	; (800131c <__aeabi_ddiv+0x5cc>)
 8001194:	0b12      	lsrs	r2, r2, #12
 8001196:	e632      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8001198:	2b00      	cmp	r3, #0
 800119a:	d100      	bne.n	800119e <__aeabi_ddiv+0x44e>
 800119c:	e702      	b.n	8000fa4 <__aeabi_ddiv+0x254>
 800119e:	19a6      	adds	r6, r4, r6
 80011a0:	1e6a      	subs	r2, r5, #1
 80011a2:	42a6      	cmp	r6, r4
 80011a4:	d200      	bcs.n	80011a8 <__aeabi_ddiv+0x458>
 80011a6:	e089      	b.n	80012bc <__aeabi_ddiv+0x56c>
 80011a8:	4286      	cmp	r6, r0
 80011aa:	d200      	bcs.n	80011ae <__aeabi_ddiv+0x45e>
 80011ac:	e09f      	b.n	80012ee <__aeabi_ddiv+0x59e>
 80011ae:	d100      	bne.n	80011b2 <__aeabi_ddiv+0x462>
 80011b0:	e0af      	b.n	8001312 <__aeabi_ddiv+0x5c2>
 80011b2:	0015      	movs	r5, r2
 80011b4:	e6f4      	b.n	8000fa0 <__aeabi_ddiv+0x250>
 80011b6:	42a9      	cmp	r1, r5
 80011b8:	d900      	bls.n	80011bc <__aeabi_ddiv+0x46c>
 80011ba:	e63c      	b.n	8000e36 <__aeabi_ddiv+0xe6>
 80011bc:	4643      	mov	r3, r8
 80011be:	07de      	lsls	r6, r3, #31
 80011c0:	0858      	lsrs	r0, r3, #1
 80011c2:	086b      	lsrs	r3, r5, #1
 80011c4:	431e      	orrs	r6, r3
 80011c6:	07ed      	lsls	r5, r5, #31
 80011c8:	e63c      	b.n	8000e44 <__aeabi_ddiv+0xf4>
 80011ca:	f001 f85b 	bl	8002284 <__clzsi2>
 80011ce:	0001      	movs	r1, r0
 80011d0:	0002      	movs	r2, r0
 80011d2:	3115      	adds	r1, #21
 80011d4:	3220      	adds	r2, #32
 80011d6:	291c      	cmp	r1, #28
 80011d8:	dc00      	bgt.n	80011dc <__aeabi_ddiv+0x48c>
 80011da:	e72c      	b.n	8001036 <__aeabi_ddiv+0x2e6>
 80011dc:	464b      	mov	r3, r9
 80011de:	3808      	subs	r0, #8
 80011e0:	4083      	lsls	r3, r0
 80011e2:	2500      	movs	r5, #0
 80011e4:	4698      	mov	r8, r3
 80011e6:	e732      	b.n	800104e <__aeabi_ddiv+0x2fe>
 80011e8:	f001 f84c 	bl	8002284 <__clzsi2>
 80011ec:	0003      	movs	r3, r0
 80011ee:	001a      	movs	r2, r3
 80011f0:	3215      	adds	r2, #21
 80011f2:	3020      	adds	r0, #32
 80011f4:	2a1c      	cmp	r2, #28
 80011f6:	dc00      	bgt.n	80011fa <__aeabi_ddiv+0x4aa>
 80011f8:	e6ff      	b.n	8000ffa <__aeabi_ddiv+0x2aa>
 80011fa:	4654      	mov	r4, sl
 80011fc:	3b08      	subs	r3, #8
 80011fe:	2100      	movs	r1, #0
 8001200:	409c      	lsls	r4, r3
 8001202:	e705      	b.n	8001010 <__aeabi_ddiv+0x2c0>
 8001204:	1936      	adds	r6, r6, r4
 8001206:	3b01      	subs	r3, #1
 8001208:	42b4      	cmp	r4, r6
 800120a:	d900      	bls.n	800120e <__aeabi_ddiv+0x4be>
 800120c:	e6a6      	b.n	8000f5c <__aeabi_ddiv+0x20c>
 800120e:	42b2      	cmp	r2, r6
 8001210:	d800      	bhi.n	8001214 <__aeabi_ddiv+0x4c4>
 8001212:	e6a3      	b.n	8000f5c <__aeabi_ddiv+0x20c>
 8001214:	1e83      	subs	r3, r0, #2
 8001216:	1936      	adds	r6, r6, r4
 8001218:	e6a0      	b.n	8000f5c <__aeabi_ddiv+0x20c>
 800121a:	1909      	adds	r1, r1, r4
 800121c:	3d01      	subs	r5, #1
 800121e:	428c      	cmp	r4, r1
 8001220:	d900      	bls.n	8001224 <__aeabi_ddiv+0x4d4>
 8001222:	e68d      	b.n	8000f40 <__aeabi_ddiv+0x1f0>
 8001224:	428a      	cmp	r2, r1
 8001226:	d800      	bhi.n	800122a <__aeabi_ddiv+0x4da>
 8001228:	e68a      	b.n	8000f40 <__aeabi_ddiv+0x1f0>
 800122a:	1e85      	subs	r5, r0, #2
 800122c:	1909      	adds	r1, r1, r4
 800122e:	e687      	b.n	8000f40 <__aeabi_ddiv+0x1f0>
 8001230:	220f      	movs	r2, #15
 8001232:	402a      	ands	r2, r5
 8001234:	2a04      	cmp	r2, #4
 8001236:	d100      	bne.n	800123a <__aeabi_ddiv+0x4ea>
 8001238:	e6bc      	b.n	8000fb4 <__aeabi_ddiv+0x264>
 800123a:	1d29      	adds	r1, r5, #4
 800123c:	42a9      	cmp	r1, r5
 800123e:	41ad      	sbcs	r5, r5
 8001240:	426d      	negs	r5, r5
 8001242:	08c9      	lsrs	r1, r1, #3
 8001244:	44a8      	add	r8, r5
 8001246:	e6b6      	b.n	8000fb6 <__aeabi_ddiv+0x266>
 8001248:	42af      	cmp	r7, r5
 800124a:	d900      	bls.n	800124e <__aeabi_ddiv+0x4fe>
 800124c:	e662      	b.n	8000f14 <__aeabi_ddiv+0x1c4>
 800124e:	4281      	cmp	r1, r0
 8001250:	d804      	bhi.n	800125c <__aeabi_ddiv+0x50c>
 8001252:	d000      	beq.n	8001256 <__aeabi_ddiv+0x506>
 8001254:	e65e      	b.n	8000f14 <__aeabi_ddiv+0x1c4>
 8001256:	42ae      	cmp	r6, r5
 8001258:	d800      	bhi.n	800125c <__aeabi_ddiv+0x50c>
 800125a:	e65b      	b.n	8000f14 <__aeabi_ddiv+0x1c4>
 800125c:	2302      	movs	r3, #2
 800125e:	425b      	negs	r3, r3
 8001260:	469c      	mov	ip, r3
 8001262:	9b00      	ldr	r3, [sp, #0]
 8001264:	44e0      	add	r8, ip
 8001266:	469c      	mov	ip, r3
 8001268:	4465      	add	r5, ip
 800126a:	429d      	cmp	r5, r3
 800126c:	419b      	sbcs	r3, r3
 800126e:	425b      	negs	r3, r3
 8001270:	191b      	adds	r3, r3, r4
 8001272:	18c0      	adds	r0, r0, r3
 8001274:	e64f      	b.n	8000f16 <__aeabi_ddiv+0x1c6>
 8001276:	42b2      	cmp	r2, r6
 8001278:	d800      	bhi.n	800127c <__aeabi_ddiv+0x52c>
 800127a:	e612      	b.n	8000ea2 <__aeabi_ddiv+0x152>
 800127c:	1e83      	subs	r3, r0, #2
 800127e:	1936      	adds	r6, r6, r4
 8001280:	e60f      	b.n	8000ea2 <__aeabi_ddiv+0x152>
 8001282:	428a      	cmp	r2, r1
 8001284:	d800      	bhi.n	8001288 <__aeabi_ddiv+0x538>
 8001286:	e5fa      	b.n	8000e7e <__aeabi_ddiv+0x12e>
 8001288:	1e83      	subs	r3, r0, #2
 800128a:	4698      	mov	r8, r3
 800128c:	1909      	adds	r1, r1, r4
 800128e:	e5f6      	b.n	8000e7e <__aeabi_ddiv+0x12e>
 8001290:	4b24      	ldr	r3, [pc, #144]	; (8001324 <__aeabi_ddiv+0x5d4>)
 8001292:	0028      	movs	r0, r5
 8001294:	445b      	add	r3, fp
 8001296:	4641      	mov	r1, r8
 8001298:	409d      	lsls	r5, r3
 800129a:	4099      	lsls	r1, r3
 800129c:	40d0      	lsrs	r0, r2
 800129e:	1e6b      	subs	r3, r5, #1
 80012a0:	419d      	sbcs	r5, r3
 80012a2:	4643      	mov	r3, r8
 80012a4:	4301      	orrs	r1, r0
 80012a6:	4329      	orrs	r1, r5
 80012a8:	40d3      	lsrs	r3, r2
 80012aa:	074a      	lsls	r2, r1, #29
 80012ac:	d100      	bne.n	80012b0 <__aeabi_ddiv+0x560>
 80012ae:	e755      	b.n	800115c <__aeabi_ddiv+0x40c>
 80012b0:	220f      	movs	r2, #15
 80012b2:	400a      	ands	r2, r1
 80012b4:	2a04      	cmp	r2, #4
 80012b6:	d000      	beq.n	80012ba <__aeabi_ddiv+0x56a>
 80012b8:	e74a      	b.n	8001150 <__aeabi_ddiv+0x400>
 80012ba:	e74f      	b.n	800115c <__aeabi_ddiv+0x40c>
 80012bc:	0015      	movs	r5, r2
 80012be:	4286      	cmp	r6, r0
 80012c0:	d000      	beq.n	80012c4 <__aeabi_ddiv+0x574>
 80012c2:	e66d      	b.n	8000fa0 <__aeabi_ddiv+0x250>
 80012c4:	9a00      	ldr	r2, [sp, #0]
 80012c6:	429a      	cmp	r2, r3
 80012c8:	d000      	beq.n	80012cc <__aeabi_ddiv+0x57c>
 80012ca:	e669      	b.n	8000fa0 <__aeabi_ddiv+0x250>
 80012cc:	e66a      	b.n	8000fa4 <__aeabi_ddiv+0x254>
 80012ce:	4b16      	ldr	r3, [pc, #88]	; (8001328 <__aeabi_ddiv+0x5d8>)
 80012d0:	445b      	add	r3, fp
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	dc00      	bgt.n	80012d8 <__aeabi_ddiv+0x588>
 80012d6:	e713      	b.n	8001100 <__aeabi_ddiv+0x3b0>
 80012d8:	2501      	movs	r5, #1
 80012da:	2100      	movs	r1, #0
 80012dc:	44a8      	add	r8, r5
 80012de:	e66a      	b.n	8000fb6 <__aeabi_ddiv+0x266>
 80012e0:	075d      	lsls	r5, r3, #29
 80012e2:	025b      	lsls	r3, r3, #9
 80012e4:	0b1a      	lsrs	r2, r3, #12
 80012e6:	08c9      	lsrs	r1, r1, #3
 80012e8:	2300      	movs	r3, #0
 80012ea:	430d      	orrs	r5, r1
 80012ec:	e587      	b.n	8000dfe <__aeabi_ddiv+0xae>
 80012ee:	9900      	ldr	r1, [sp, #0]
 80012f0:	3d02      	subs	r5, #2
 80012f2:	004a      	lsls	r2, r1, #1
 80012f4:	428a      	cmp	r2, r1
 80012f6:	41bf      	sbcs	r7, r7
 80012f8:	427f      	negs	r7, r7
 80012fa:	193f      	adds	r7, r7, r4
 80012fc:	19f6      	adds	r6, r6, r7
 80012fe:	9200      	str	r2, [sp, #0]
 8001300:	e7dd      	b.n	80012be <__aeabi_ddiv+0x56e>
 8001302:	2280      	movs	r2, #128	; 0x80
 8001304:	4643      	mov	r3, r8
 8001306:	0312      	lsls	r2, r2, #12
 8001308:	431a      	orrs	r2, r3
 800130a:	0312      	lsls	r2, r2, #12
 800130c:	4b03      	ldr	r3, [pc, #12]	; (800131c <__aeabi_ddiv+0x5cc>)
 800130e:	0b12      	lsrs	r2, r2, #12
 8001310:	e575      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8001312:	9900      	ldr	r1, [sp, #0]
 8001314:	4299      	cmp	r1, r3
 8001316:	d3ea      	bcc.n	80012ee <__aeabi_ddiv+0x59e>
 8001318:	0015      	movs	r5, r2
 800131a:	e7d3      	b.n	80012c4 <__aeabi_ddiv+0x574>
 800131c:	000007ff 	.word	0x000007ff
 8001320:	0000043e 	.word	0x0000043e
 8001324:	0000041e 	.word	0x0000041e
 8001328:	000003ff 	.word	0x000003ff

0800132c <__aeabi_dmul>:
 800132c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800132e:	4645      	mov	r5, r8
 8001330:	46de      	mov	lr, fp
 8001332:	4657      	mov	r7, sl
 8001334:	464e      	mov	r6, r9
 8001336:	b5e0      	push	{r5, r6, r7, lr}
 8001338:	001f      	movs	r7, r3
 800133a:	030b      	lsls	r3, r1, #12
 800133c:	0b1b      	lsrs	r3, r3, #12
 800133e:	469b      	mov	fp, r3
 8001340:	004d      	lsls	r5, r1, #1
 8001342:	0fcb      	lsrs	r3, r1, #31
 8001344:	0004      	movs	r4, r0
 8001346:	4691      	mov	r9, r2
 8001348:	4698      	mov	r8, r3
 800134a:	b087      	sub	sp, #28
 800134c:	0d6d      	lsrs	r5, r5, #21
 800134e:	d100      	bne.n	8001352 <__aeabi_dmul+0x26>
 8001350:	e1cd      	b.n	80016ee <__aeabi_dmul+0x3c2>
 8001352:	4bce      	ldr	r3, [pc, #824]	; (800168c <__aeabi_dmul+0x360>)
 8001354:	429d      	cmp	r5, r3
 8001356:	d100      	bne.n	800135a <__aeabi_dmul+0x2e>
 8001358:	e1e9      	b.n	800172e <__aeabi_dmul+0x402>
 800135a:	465a      	mov	r2, fp
 800135c:	0f43      	lsrs	r3, r0, #29
 800135e:	00d2      	lsls	r2, r2, #3
 8001360:	4313      	orrs	r3, r2
 8001362:	2280      	movs	r2, #128	; 0x80
 8001364:	0412      	lsls	r2, r2, #16
 8001366:	431a      	orrs	r2, r3
 8001368:	00c3      	lsls	r3, r0, #3
 800136a:	469a      	mov	sl, r3
 800136c:	4bc8      	ldr	r3, [pc, #800]	; (8001690 <__aeabi_dmul+0x364>)
 800136e:	4693      	mov	fp, r2
 8001370:	469c      	mov	ip, r3
 8001372:	2300      	movs	r3, #0
 8001374:	2600      	movs	r6, #0
 8001376:	4465      	add	r5, ip
 8001378:	9300      	str	r3, [sp, #0]
 800137a:	033c      	lsls	r4, r7, #12
 800137c:	007b      	lsls	r3, r7, #1
 800137e:	4648      	mov	r0, r9
 8001380:	0b24      	lsrs	r4, r4, #12
 8001382:	0d5b      	lsrs	r3, r3, #21
 8001384:	0fff      	lsrs	r7, r7, #31
 8001386:	2b00      	cmp	r3, #0
 8001388:	d100      	bne.n	800138c <__aeabi_dmul+0x60>
 800138a:	e189      	b.n	80016a0 <__aeabi_dmul+0x374>
 800138c:	4abf      	ldr	r2, [pc, #764]	; (800168c <__aeabi_dmul+0x360>)
 800138e:	4293      	cmp	r3, r2
 8001390:	d019      	beq.n	80013c6 <__aeabi_dmul+0x9a>
 8001392:	0f42      	lsrs	r2, r0, #29
 8001394:	00e4      	lsls	r4, r4, #3
 8001396:	4322      	orrs	r2, r4
 8001398:	2480      	movs	r4, #128	; 0x80
 800139a:	0424      	lsls	r4, r4, #16
 800139c:	4314      	orrs	r4, r2
 800139e:	4abc      	ldr	r2, [pc, #752]	; (8001690 <__aeabi_dmul+0x364>)
 80013a0:	2100      	movs	r1, #0
 80013a2:	4694      	mov	ip, r2
 80013a4:	4642      	mov	r2, r8
 80013a6:	4463      	add	r3, ip
 80013a8:	195b      	adds	r3, r3, r5
 80013aa:	9301      	str	r3, [sp, #4]
 80013ac:	9b01      	ldr	r3, [sp, #4]
 80013ae:	407a      	eors	r2, r7
 80013b0:	3301      	adds	r3, #1
 80013b2:	00c0      	lsls	r0, r0, #3
 80013b4:	b2d2      	uxtb	r2, r2
 80013b6:	9302      	str	r3, [sp, #8]
 80013b8:	2e0a      	cmp	r6, #10
 80013ba:	dd1c      	ble.n	80013f6 <__aeabi_dmul+0xca>
 80013bc:	003a      	movs	r2, r7
 80013be:	2e0b      	cmp	r6, #11
 80013c0:	d05e      	beq.n	8001480 <__aeabi_dmul+0x154>
 80013c2:	4647      	mov	r7, r8
 80013c4:	e056      	b.n	8001474 <__aeabi_dmul+0x148>
 80013c6:	4649      	mov	r1, r9
 80013c8:	4bb0      	ldr	r3, [pc, #704]	; (800168c <__aeabi_dmul+0x360>)
 80013ca:	4321      	orrs	r1, r4
 80013cc:	18eb      	adds	r3, r5, r3
 80013ce:	9301      	str	r3, [sp, #4]
 80013d0:	2900      	cmp	r1, #0
 80013d2:	d12a      	bne.n	800142a <__aeabi_dmul+0xfe>
 80013d4:	2080      	movs	r0, #128	; 0x80
 80013d6:	2202      	movs	r2, #2
 80013d8:	0100      	lsls	r0, r0, #4
 80013da:	002b      	movs	r3, r5
 80013dc:	4684      	mov	ip, r0
 80013de:	4316      	orrs	r6, r2
 80013e0:	4642      	mov	r2, r8
 80013e2:	4463      	add	r3, ip
 80013e4:	407a      	eors	r2, r7
 80013e6:	b2d2      	uxtb	r2, r2
 80013e8:	9302      	str	r3, [sp, #8]
 80013ea:	2e0a      	cmp	r6, #10
 80013ec:	dd00      	ble.n	80013f0 <__aeabi_dmul+0xc4>
 80013ee:	e231      	b.n	8001854 <__aeabi_dmul+0x528>
 80013f0:	2000      	movs	r0, #0
 80013f2:	2400      	movs	r4, #0
 80013f4:	2102      	movs	r1, #2
 80013f6:	2e02      	cmp	r6, #2
 80013f8:	dc26      	bgt.n	8001448 <__aeabi_dmul+0x11c>
 80013fa:	3e01      	subs	r6, #1
 80013fc:	2e01      	cmp	r6, #1
 80013fe:	d852      	bhi.n	80014a6 <__aeabi_dmul+0x17a>
 8001400:	2902      	cmp	r1, #2
 8001402:	d04c      	beq.n	800149e <__aeabi_dmul+0x172>
 8001404:	2901      	cmp	r1, #1
 8001406:	d000      	beq.n	800140a <__aeabi_dmul+0xde>
 8001408:	e118      	b.n	800163c <__aeabi_dmul+0x310>
 800140a:	2300      	movs	r3, #0
 800140c:	2400      	movs	r4, #0
 800140e:	2500      	movs	r5, #0
 8001410:	051b      	lsls	r3, r3, #20
 8001412:	4323      	orrs	r3, r4
 8001414:	07d2      	lsls	r2, r2, #31
 8001416:	4313      	orrs	r3, r2
 8001418:	0028      	movs	r0, r5
 800141a:	0019      	movs	r1, r3
 800141c:	b007      	add	sp, #28
 800141e:	bcf0      	pop	{r4, r5, r6, r7}
 8001420:	46bb      	mov	fp, r7
 8001422:	46b2      	mov	sl, r6
 8001424:	46a9      	mov	r9, r5
 8001426:	46a0      	mov	r8, r4
 8001428:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800142a:	2180      	movs	r1, #128	; 0x80
 800142c:	2203      	movs	r2, #3
 800142e:	0109      	lsls	r1, r1, #4
 8001430:	002b      	movs	r3, r5
 8001432:	468c      	mov	ip, r1
 8001434:	4316      	orrs	r6, r2
 8001436:	4642      	mov	r2, r8
 8001438:	4463      	add	r3, ip
 800143a:	407a      	eors	r2, r7
 800143c:	b2d2      	uxtb	r2, r2
 800143e:	9302      	str	r3, [sp, #8]
 8001440:	2e0a      	cmp	r6, #10
 8001442:	dd00      	ble.n	8001446 <__aeabi_dmul+0x11a>
 8001444:	e228      	b.n	8001898 <__aeabi_dmul+0x56c>
 8001446:	2103      	movs	r1, #3
 8001448:	2501      	movs	r5, #1
 800144a:	40b5      	lsls	r5, r6
 800144c:	46ac      	mov	ip, r5
 800144e:	26a6      	movs	r6, #166	; 0xa6
 8001450:	4663      	mov	r3, ip
 8001452:	00f6      	lsls	r6, r6, #3
 8001454:	4035      	ands	r5, r6
 8001456:	4233      	tst	r3, r6
 8001458:	d10b      	bne.n	8001472 <__aeabi_dmul+0x146>
 800145a:	2690      	movs	r6, #144	; 0x90
 800145c:	00b6      	lsls	r6, r6, #2
 800145e:	4233      	tst	r3, r6
 8001460:	d118      	bne.n	8001494 <__aeabi_dmul+0x168>
 8001462:	3eb9      	subs	r6, #185	; 0xb9
 8001464:	3eff      	subs	r6, #255	; 0xff
 8001466:	421e      	tst	r6, r3
 8001468:	d01d      	beq.n	80014a6 <__aeabi_dmul+0x17a>
 800146a:	46a3      	mov	fp, r4
 800146c:	4682      	mov	sl, r0
 800146e:	9100      	str	r1, [sp, #0]
 8001470:	e000      	b.n	8001474 <__aeabi_dmul+0x148>
 8001472:	0017      	movs	r7, r2
 8001474:	9900      	ldr	r1, [sp, #0]
 8001476:	003a      	movs	r2, r7
 8001478:	2902      	cmp	r1, #2
 800147a:	d010      	beq.n	800149e <__aeabi_dmul+0x172>
 800147c:	465c      	mov	r4, fp
 800147e:	4650      	mov	r0, sl
 8001480:	2903      	cmp	r1, #3
 8001482:	d1bf      	bne.n	8001404 <__aeabi_dmul+0xd8>
 8001484:	2380      	movs	r3, #128	; 0x80
 8001486:	031b      	lsls	r3, r3, #12
 8001488:	431c      	orrs	r4, r3
 800148a:	0324      	lsls	r4, r4, #12
 800148c:	0005      	movs	r5, r0
 800148e:	4b7f      	ldr	r3, [pc, #508]	; (800168c <__aeabi_dmul+0x360>)
 8001490:	0b24      	lsrs	r4, r4, #12
 8001492:	e7bd      	b.n	8001410 <__aeabi_dmul+0xe4>
 8001494:	2480      	movs	r4, #128	; 0x80
 8001496:	2200      	movs	r2, #0
 8001498:	4b7c      	ldr	r3, [pc, #496]	; (800168c <__aeabi_dmul+0x360>)
 800149a:	0324      	lsls	r4, r4, #12
 800149c:	e7b8      	b.n	8001410 <__aeabi_dmul+0xe4>
 800149e:	2400      	movs	r4, #0
 80014a0:	2500      	movs	r5, #0
 80014a2:	4b7a      	ldr	r3, [pc, #488]	; (800168c <__aeabi_dmul+0x360>)
 80014a4:	e7b4      	b.n	8001410 <__aeabi_dmul+0xe4>
 80014a6:	4653      	mov	r3, sl
 80014a8:	041e      	lsls	r6, r3, #16
 80014aa:	0c36      	lsrs	r6, r6, #16
 80014ac:	0c1f      	lsrs	r7, r3, #16
 80014ae:	0033      	movs	r3, r6
 80014b0:	0c01      	lsrs	r1, r0, #16
 80014b2:	0400      	lsls	r0, r0, #16
 80014b4:	0c00      	lsrs	r0, r0, #16
 80014b6:	4343      	muls	r3, r0
 80014b8:	4698      	mov	r8, r3
 80014ba:	0003      	movs	r3, r0
 80014bc:	437b      	muls	r3, r7
 80014be:	4699      	mov	r9, r3
 80014c0:	0033      	movs	r3, r6
 80014c2:	434b      	muls	r3, r1
 80014c4:	469c      	mov	ip, r3
 80014c6:	4643      	mov	r3, r8
 80014c8:	000d      	movs	r5, r1
 80014ca:	0c1b      	lsrs	r3, r3, #16
 80014cc:	469a      	mov	sl, r3
 80014ce:	437d      	muls	r5, r7
 80014d0:	44cc      	add	ip, r9
 80014d2:	44d4      	add	ip, sl
 80014d4:	9500      	str	r5, [sp, #0]
 80014d6:	45e1      	cmp	r9, ip
 80014d8:	d904      	bls.n	80014e4 <__aeabi_dmul+0x1b8>
 80014da:	2380      	movs	r3, #128	; 0x80
 80014dc:	025b      	lsls	r3, r3, #9
 80014de:	4699      	mov	r9, r3
 80014e0:	444d      	add	r5, r9
 80014e2:	9500      	str	r5, [sp, #0]
 80014e4:	4663      	mov	r3, ip
 80014e6:	0c1b      	lsrs	r3, r3, #16
 80014e8:	001d      	movs	r5, r3
 80014ea:	4663      	mov	r3, ip
 80014ec:	041b      	lsls	r3, r3, #16
 80014ee:	469c      	mov	ip, r3
 80014f0:	4643      	mov	r3, r8
 80014f2:	041b      	lsls	r3, r3, #16
 80014f4:	0c1b      	lsrs	r3, r3, #16
 80014f6:	4698      	mov	r8, r3
 80014f8:	4663      	mov	r3, ip
 80014fa:	4443      	add	r3, r8
 80014fc:	9303      	str	r3, [sp, #12]
 80014fe:	0c23      	lsrs	r3, r4, #16
 8001500:	4698      	mov	r8, r3
 8001502:	0033      	movs	r3, r6
 8001504:	0424      	lsls	r4, r4, #16
 8001506:	0c24      	lsrs	r4, r4, #16
 8001508:	4363      	muls	r3, r4
 800150a:	469c      	mov	ip, r3
 800150c:	0023      	movs	r3, r4
 800150e:	437b      	muls	r3, r7
 8001510:	4699      	mov	r9, r3
 8001512:	4643      	mov	r3, r8
 8001514:	435e      	muls	r6, r3
 8001516:	435f      	muls	r7, r3
 8001518:	444e      	add	r6, r9
 800151a:	4663      	mov	r3, ip
 800151c:	46b2      	mov	sl, r6
 800151e:	0c1e      	lsrs	r6, r3, #16
 8001520:	4456      	add	r6, sl
 8001522:	45b1      	cmp	r9, r6
 8001524:	d903      	bls.n	800152e <__aeabi_dmul+0x202>
 8001526:	2380      	movs	r3, #128	; 0x80
 8001528:	025b      	lsls	r3, r3, #9
 800152a:	4699      	mov	r9, r3
 800152c:	444f      	add	r7, r9
 800152e:	0c33      	lsrs	r3, r6, #16
 8001530:	4699      	mov	r9, r3
 8001532:	003b      	movs	r3, r7
 8001534:	444b      	add	r3, r9
 8001536:	9305      	str	r3, [sp, #20]
 8001538:	4663      	mov	r3, ip
 800153a:	46ac      	mov	ip, r5
 800153c:	041f      	lsls	r7, r3, #16
 800153e:	0c3f      	lsrs	r7, r7, #16
 8001540:	0436      	lsls	r6, r6, #16
 8001542:	19f6      	adds	r6, r6, r7
 8001544:	44b4      	add	ip, r6
 8001546:	4663      	mov	r3, ip
 8001548:	9304      	str	r3, [sp, #16]
 800154a:	465b      	mov	r3, fp
 800154c:	0c1b      	lsrs	r3, r3, #16
 800154e:	469c      	mov	ip, r3
 8001550:	465b      	mov	r3, fp
 8001552:	041f      	lsls	r7, r3, #16
 8001554:	0c3f      	lsrs	r7, r7, #16
 8001556:	003b      	movs	r3, r7
 8001558:	4343      	muls	r3, r0
 800155a:	4699      	mov	r9, r3
 800155c:	4663      	mov	r3, ip
 800155e:	4343      	muls	r3, r0
 8001560:	469a      	mov	sl, r3
 8001562:	464b      	mov	r3, r9
 8001564:	4660      	mov	r0, ip
 8001566:	0c1b      	lsrs	r3, r3, #16
 8001568:	469b      	mov	fp, r3
 800156a:	4348      	muls	r0, r1
 800156c:	4379      	muls	r1, r7
 800156e:	4451      	add	r1, sl
 8001570:	4459      	add	r1, fp
 8001572:	458a      	cmp	sl, r1
 8001574:	d903      	bls.n	800157e <__aeabi_dmul+0x252>
 8001576:	2380      	movs	r3, #128	; 0x80
 8001578:	025b      	lsls	r3, r3, #9
 800157a:	469a      	mov	sl, r3
 800157c:	4450      	add	r0, sl
 800157e:	0c0b      	lsrs	r3, r1, #16
 8001580:	469a      	mov	sl, r3
 8001582:	464b      	mov	r3, r9
 8001584:	041b      	lsls	r3, r3, #16
 8001586:	0c1b      	lsrs	r3, r3, #16
 8001588:	4699      	mov	r9, r3
 800158a:	003b      	movs	r3, r7
 800158c:	4363      	muls	r3, r4
 800158e:	0409      	lsls	r1, r1, #16
 8001590:	4645      	mov	r5, r8
 8001592:	4449      	add	r1, r9
 8001594:	4699      	mov	r9, r3
 8001596:	4663      	mov	r3, ip
 8001598:	435c      	muls	r4, r3
 800159a:	436b      	muls	r3, r5
 800159c:	469c      	mov	ip, r3
 800159e:	464b      	mov	r3, r9
 80015a0:	0c1b      	lsrs	r3, r3, #16
 80015a2:	4698      	mov	r8, r3
 80015a4:	436f      	muls	r7, r5
 80015a6:	193f      	adds	r7, r7, r4
 80015a8:	4447      	add	r7, r8
 80015aa:	4450      	add	r0, sl
 80015ac:	42bc      	cmp	r4, r7
 80015ae:	d903      	bls.n	80015b8 <__aeabi_dmul+0x28c>
 80015b0:	2380      	movs	r3, #128	; 0x80
 80015b2:	025b      	lsls	r3, r3, #9
 80015b4:	4698      	mov	r8, r3
 80015b6:	44c4      	add	ip, r8
 80015b8:	9b04      	ldr	r3, [sp, #16]
 80015ba:	9d00      	ldr	r5, [sp, #0]
 80015bc:	4698      	mov	r8, r3
 80015be:	4445      	add	r5, r8
 80015c0:	42b5      	cmp	r5, r6
 80015c2:	41b6      	sbcs	r6, r6
 80015c4:	4273      	negs	r3, r6
 80015c6:	4698      	mov	r8, r3
 80015c8:	464b      	mov	r3, r9
 80015ca:	041e      	lsls	r6, r3, #16
 80015cc:	9b05      	ldr	r3, [sp, #20]
 80015ce:	043c      	lsls	r4, r7, #16
 80015d0:	4699      	mov	r9, r3
 80015d2:	0c36      	lsrs	r6, r6, #16
 80015d4:	19a4      	adds	r4, r4, r6
 80015d6:	444c      	add	r4, r9
 80015d8:	46a1      	mov	r9, r4
 80015da:	4683      	mov	fp, r0
 80015dc:	186e      	adds	r6, r5, r1
 80015de:	44c1      	add	r9, r8
 80015e0:	428e      	cmp	r6, r1
 80015e2:	4189      	sbcs	r1, r1
 80015e4:	44cb      	add	fp, r9
 80015e6:	465d      	mov	r5, fp
 80015e8:	4249      	negs	r1, r1
 80015ea:	186d      	adds	r5, r5, r1
 80015ec:	429c      	cmp	r4, r3
 80015ee:	41a4      	sbcs	r4, r4
 80015f0:	45c1      	cmp	r9, r8
 80015f2:	419b      	sbcs	r3, r3
 80015f4:	4583      	cmp	fp, r0
 80015f6:	4180      	sbcs	r0, r0
 80015f8:	428d      	cmp	r5, r1
 80015fa:	4189      	sbcs	r1, r1
 80015fc:	425b      	negs	r3, r3
 80015fe:	4264      	negs	r4, r4
 8001600:	431c      	orrs	r4, r3
 8001602:	4240      	negs	r0, r0
 8001604:	9b03      	ldr	r3, [sp, #12]
 8001606:	4249      	negs	r1, r1
 8001608:	4301      	orrs	r1, r0
 800160a:	0270      	lsls	r0, r6, #9
 800160c:	0c3f      	lsrs	r7, r7, #16
 800160e:	4318      	orrs	r0, r3
 8001610:	19e4      	adds	r4, r4, r7
 8001612:	1e47      	subs	r7, r0, #1
 8001614:	41b8      	sbcs	r0, r7
 8001616:	1864      	adds	r4, r4, r1
 8001618:	4464      	add	r4, ip
 800161a:	0df6      	lsrs	r6, r6, #23
 800161c:	0261      	lsls	r1, r4, #9
 800161e:	4330      	orrs	r0, r6
 8001620:	0dec      	lsrs	r4, r5, #23
 8001622:	026e      	lsls	r6, r5, #9
 8001624:	430c      	orrs	r4, r1
 8001626:	4330      	orrs	r0, r6
 8001628:	01c9      	lsls	r1, r1, #7
 800162a:	d400      	bmi.n	800162e <__aeabi_dmul+0x302>
 800162c:	e0f1      	b.n	8001812 <__aeabi_dmul+0x4e6>
 800162e:	2101      	movs	r1, #1
 8001630:	0843      	lsrs	r3, r0, #1
 8001632:	4001      	ands	r1, r0
 8001634:	430b      	orrs	r3, r1
 8001636:	07e0      	lsls	r0, r4, #31
 8001638:	4318      	orrs	r0, r3
 800163a:	0864      	lsrs	r4, r4, #1
 800163c:	4915      	ldr	r1, [pc, #84]	; (8001694 <__aeabi_dmul+0x368>)
 800163e:	9b02      	ldr	r3, [sp, #8]
 8001640:	468c      	mov	ip, r1
 8001642:	4463      	add	r3, ip
 8001644:	2b00      	cmp	r3, #0
 8001646:	dc00      	bgt.n	800164a <__aeabi_dmul+0x31e>
 8001648:	e097      	b.n	800177a <__aeabi_dmul+0x44e>
 800164a:	0741      	lsls	r1, r0, #29
 800164c:	d009      	beq.n	8001662 <__aeabi_dmul+0x336>
 800164e:	210f      	movs	r1, #15
 8001650:	4001      	ands	r1, r0
 8001652:	2904      	cmp	r1, #4
 8001654:	d005      	beq.n	8001662 <__aeabi_dmul+0x336>
 8001656:	1d01      	adds	r1, r0, #4
 8001658:	4281      	cmp	r1, r0
 800165a:	4180      	sbcs	r0, r0
 800165c:	4240      	negs	r0, r0
 800165e:	1824      	adds	r4, r4, r0
 8001660:	0008      	movs	r0, r1
 8001662:	01e1      	lsls	r1, r4, #7
 8001664:	d506      	bpl.n	8001674 <__aeabi_dmul+0x348>
 8001666:	2180      	movs	r1, #128	; 0x80
 8001668:	00c9      	lsls	r1, r1, #3
 800166a:	468c      	mov	ip, r1
 800166c:	4b0a      	ldr	r3, [pc, #40]	; (8001698 <__aeabi_dmul+0x36c>)
 800166e:	401c      	ands	r4, r3
 8001670:	9b02      	ldr	r3, [sp, #8]
 8001672:	4463      	add	r3, ip
 8001674:	4909      	ldr	r1, [pc, #36]	; (800169c <__aeabi_dmul+0x370>)
 8001676:	428b      	cmp	r3, r1
 8001678:	dd00      	ble.n	800167c <__aeabi_dmul+0x350>
 800167a:	e710      	b.n	800149e <__aeabi_dmul+0x172>
 800167c:	0761      	lsls	r1, r4, #29
 800167e:	08c5      	lsrs	r5, r0, #3
 8001680:	0264      	lsls	r4, r4, #9
 8001682:	055b      	lsls	r3, r3, #21
 8001684:	430d      	orrs	r5, r1
 8001686:	0b24      	lsrs	r4, r4, #12
 8001688:	0d5b      	lsrs	r3, r3, #21
 800168a:	e6c1      	b.n	8001410 <__aeabi_dmul+0xe4>
 800168c:	000007ff 	.word	0x000007ff
 8001690:	fffffc01 	.word	0xfffffc01
 8001694:	000003ff 	.word	0x000003ff
 8001698:	feffffff 	.word	0xfeffffff
 800169c:	000007fe 	.word	0x000007fe
 80016a0:	464b      	mov	r3, r9
 80016a2:	4323      	orrs	r3, r4
 80016a4:	d059      	beq.n	800175a <__aeabi_dmul+0x42e>
 80016a6:	2c00      	cmp	r4, #0
 80016a8:	d100      	bne.n	80016ac <__aeabi_dmul+0x380>
 80016aa:	e0a3      	b.n	80017f4 <__aeabi_dmul+0x4c8>
 80016ac:	0020      	movs	r0, r4
 80016ae:	f000 fde9 	bl	8002284 <__clzsi2>
 80016b2:	0001      	movs	r1, r0
 80016b4:	0003      	movs	r3, r0
 80016b6:	390b      	subs	r1, #11
 80016b8:	221d      	movs	r2, #29
 80016ba:	1a52      	subs	r2, r2, r1
 80016bc:	4649      	mov	r1, r9
 80016be:	0018      	movs	r0, r3
 80016c0:	40d1      	lsrs	r1, r2
 80016c2:	464a      	mov	r2, r9
 80016c4:	3808      	subs	r0, #8
 80016c6:	4082      	lsls	r2, r0
 80016c8:	4084      	lsls	r4, r0
 80016ca:	0010      	movs	r0, r2
 80016cc:	430c      	orrs	r4, r1
 80016ce:	4a74      	ldr	r2, [pc, #464]	; (80018a0 <__aeabi_dmul+0x574>)
 80016d0:	1aeb      	subs	r3, r5, r3
 80016d2:	4694      	mov	ip, r2
 80016d4:	4642      	mov	r2, r8
 80016d6:	4463      	add	r3, ip
 80016d8:	9301      	str	r3, [sp, #4]
 80016da:	9b01      	ldr	r3, [sp, #4]
 80016dc:	407a      	eors	r2, r7
 80016de:	3301      	adds	r3, #1
 80016e0:	2100      	movs	r1, #0
 80016e2:	b2d2      	uxtb	r2, r2
 80016e4:	9302      	str	r3, [sp, #8]
 80016e6:	2e0a      	cmp	r6, #10
 80016e8:	dd00      	ble.n	80016ec <__aeabi_dmul+0x3c0>
 80016ea:	e667      	b.n	80013bc <__aeabi_dmul+0x90>
 80016ec:	e683      	b.n	80013f6 <__aeabi_dmul+0xca>
 80016ee:	465b      	mov	r3, fp
 80016f0:	4303      	orrs	r3, r0
 80016f2:	469a      	mov	sl, r3
 80016f4:	d02a      	beq.n	800174c <__aeabi_dmul+0x420>
 80016f6:	465b      	mov	r3, fp
 80016f8:	2b00      	cmp	r3, #0
 80016fa:	d06d      	beq.n	80017d8 <__aeabi_dmul+0x4ac>
 80016fc:	4658      	mov	r0, fp
 80016fe:	f000 fdc1 	bl	8002284 <__clzsi2>
 8001702:	0001      	movs	r1, r0
 8001704:	0003      	movs	r3, r0
 8001706:	390b      	subs	r1, #11
 8001708:	221d      	movs	r2, #29
 800170a:	1a52      	subs	r2, r2, r1
 800170c:	0021      	movs	r1, r4
 800170e:	0018      	movs	r0, r3
 8001710:	465d      	mov	r5, fp
 8001712:	40d1      	lsrs	r1, r2
 8001714:	3808      	subs	r0, #8
 8001716:	4085      	lsls	r5, r0
 8001718:	000a      	movs	r2, r1
 800171a:	4084      	lsls	r4, r0
 800171c:	432a      	orrs	r2, r5
 800171e:	4693      	mov	fp, r2
 8001720:	46a2      	mov	sl, r4
 8001722:	4d5f      	ldr	r5, [pc, #380]	; (80018a0 <__aeabi_dmul+0x574>)
 8001724:	2600      	movs	r6, #0
 8001726:	1aed      	subs	r5, r5, r3
 8001728:	2300      	movs	r3, #0
 800172a:	9300      	str	r3, [sp, #0]
 800172c:	e625      	b.n	800137a <__aeabi_dmul+0x4e>
 800172e:	465b      	mov	r3, fp
 8001730:	4303      	orrs	r3, r0
 8001732:	469a      	mov	sl, r3
 8001734:	d105      	bne.n	8001742 <__aeabi_dmul+0x416>
 8001736:	2300      	movs	r3, #0
 8001738:	469b      	mov	fp, r3
 800173a:	3302      	adds	r3, #2
 800173c:	2608      	movs	r6, #8
 800173e:	9300      	str	r3, [sp, #0]
 8001740:	e61b      	b.n	800137a <__aeabi_dmul+0x4e>
 8001742:	2303      	movs	r3, #3
 8001744:	4682      	mov	sl, r0
 8001746:	260c      	movs	r6, #12
 8001748:	9300      	str	r3, [sp, #0]
 800174a:	e616      	b.n	800137a <__aeabi_dmul+0x4e>
 800174c:	2300      	movs	r3, #0
 800174e:	469b      	mov	fp, r3
 8001750:	3301      	adds	r3, #1
 8001752:	2604      	movs	r6, #4
 8001754:	2500      	movs	r5, #0
 8001756:	9300      	str	r3, [sp, #0]
 8001758:	e60f      	b.n	800137a <__aeabi_dmul+0x4e>
 800175a:	4642      	mov	r2, r8
 800175c:	3301      	adds	r3, #1
 800175e:	9501      	str	r5, [sp, #4]
 8001760:	431e      	orrs	r6, r3
 8001762:	9b01      	ldr	r3, [sp, #4]
 8001764:	407a      	eors	r2, r7
 8001766:	3301      	adds	r3, #1
 8001768:	2400      	movs	r4, #0
 800176a:	2000      	movs	r0, #0
 800176c:	2101      	movs	r1, #1
 800176e:	b2d2      	uxtb	r2, r2
 8001770:	9302      	str	r3, [sp, #8]
 8001772:	2e0a      	cmp	r6, #10
 8001774:	dd00      	ble.n	8001778 <__aeabi_dmul+0x44c>
 8001776:	e621      	b.n	80013bc <__aeabi_dmul+0x90>
 8001778:	e63d      	b.n	80013f6 <__aeabi_dmul+0xca>
 800177a:	2101      	movs	r1, #1
 800177c:	1ac9      	subs	r1, r1, r3
 800177e:	2938      	cmp	r1, #56	; 0x38
 8001780:	dd00      	ble.n	8001784 <__aeabi_dmul+0x458>
 8001782:	e642      	b.n	800140a <__aeabi_dmul+0xde>
 8001784:	291f      	cmp	r1, #31
 8001786:	dd47      	ble.n	8001818 <__aeabi_dmul+0x4ec>
 8001788:	261f      	movs	r6, #31
 800178a:	0025      	movs	r5, r4
 800178c:	4276      	negs	r6, r6
 800178e:	1af3      	subs	r3, r6, r3
 8001790:	40dd      	lsrs	r5, r3
 8001792:	002b      	movs	r3, r5
 8001794:	2920      	cmp	r1, #32
 8001796:	d005      	beq.n	80017a4 <__aeabi_dmul+0x478>
 8001798:	4942      	ldr	r1, [pc, #264]	; (80018a4 <__aeabi_dmul+0x578>)
 800179a:	9d02      	ldr	r5, [sp, #8]
 800179c:	468c      	mov	ip, r1
 800179e:	4465      	add	r5, ip
 80017a0:	40ac      	lsls	r4, r5
 80017a2:	4320      	orrs	r0, r4
 80017a4:	1e41      	subs	r1, r0, #1
 80017a6:	4188      	sbcs	r0, r1
 80017a8:	4318      	orrs	r0, r3
 80017aa:	2307      	movs	r3, #7
 80017ac:	001d      	movs	r5, r3
 80017ae:	2400      	movs	r4, #0
 80017b0:	4005      	ands	r5, r0
 80017b2:	4203      	tst	r3, r0
 80017b4:	d04a      	beq.n	800184c <__aeabi_dmul+0x520>
 80017b6:	230f      	movs	r3, #15
 80017b8:	2400      	movs	r4, #0
 80017ba:	4003      	ands	r3, r0
 80017bc:	2b04      	cmp	r3, #4
 80017be:	d042      	beq.n	8001846 <__aeabi_dmul+0x51a>
 80017c0:	1d03      	adds	r3, r0, #4
 80017c2:	4283      	cmp	r3, r0
 80017c4:	4180      	sbcs	r0, r0
 80017c6:	4240      	negs	r0, r0
 80017c8:	1824      	adds	r4, r4, r0
 80017ca:	0018      	movs	r0, r3
 80017cc:	0223      	lsls	r3, r4, #8
 80017ce:	d53a      	bpl.n	8001846 <__aeabi_dmul+0x51a>
 80017d0:	2301      	movs	r3, #1
 80017d2:	2400      	movs	r4, #0
 80017d4:	2500      	movs	r5, #0
 80017d6:	e61b      	b.n	8001410 <__aeabi_dmul+0xe4>
 80017d8:	f000 fd54 	bl	8002284 <__clzsi2>
 80017dc:	0001      	movs	r1, r0
 80017de:	0003      	movs	r3, r0
 80017e0:	3115      	adds	r1, #21
 80017e2:	3320      	adds	r3, #32
 80017e4:	291c      	cmp	r1, #28
 80017e6:	dd8f      	ble.n	8001708 <__aeabi_dmul+0x3dc>
 80017e8:	3808      	subs	r0, #8
 80017ea:	2200      	movs	r2, #0
 80017ec:	4084      	lsls	r4, r0
 80017ee:	4692      	mov	sl, r2
 80017f0:	46a3      	mov	fp, r4
 80017f2:	e796      	b.n	8001722 <__aeabi_dmul+0x3f6>
 80017f4:	f000 fd46 	bl	8002284 <__clzsi2>
 80017f8:	0001      	movs	r1, r0
 80017fa:	0003      	movs	r3, r0
 80017fc:	3115      	adds	r1, #21
 80017fe:	3320      	adds	r3, #32
 8001800:	291c      	cmp	r1, #28
 8001802:	dc00      	bgt.n	8001806 <__aeabi_dmul+0x4da>
 8001804:	e758      	b.n	80016b8 <__aeabi_dmul+0x38c>
 8001806:	0002      	movs	r2, r0
 8001808:	464c      	mov	r4, r9
 800180a:	3a08      	subs	r2, #8
 800180c:	2000      	movs	r0, #0
 800180e:	4094      	lsls	r4, r2
 8001810:	e75d      	b.n	80016ce <__aeabi_dmul+0x3a2>
 8001812:	9b01      	ldr	r3, [sp, #4]
 8001814:	9302      	str	r3, [sp, #8]
 8001816:	e711      	b.n	800163c <__aeabi_dmul+0x310>
 8001818:	4b23      	ldr	r3, [pc, #140]	; (80018a8 <__aeabi_dmul+0x57c>)
 800181a:	0026      	movs	r6, r4
 800181c:	469c      	mov	ip, r3
 800181e:	0003      	movs	r3, r0
 8001820:	9d02      	ldr	r5, [sp, #8]
 8001822:	40cb      	lsrs	r3, r1
 8001824:	4465      	add	r5, ip
 8001826:	40ae      	lsls	r6, r5
 8001828:	431e      	orrs	r6, r3
 800182a:	0003      	movs	r3, r0
 800182c:	40ab      	lsls	r3, r5
 800182e:	1e58      	subs	r0, r3, #1
 8001830:	4183      	sbcs	r3, r0
 8001832:	0030      	movs	r0, r6
 8001834:	4318      	orrs	r0, r3
 8001836:	40cc      	lsrs	r4, r1
 8001838:	0743      	lsls	r3, r0, #29
 800183a:	d0c7      	beq.n	80017cc <__aeabi_dmul+0x4a0>
 800183c:	230f      	movs	r3, #15
 800183e:	4003      	ands	r3, r0
 8001840:	2b04      	cmp	r3, #4
 8001842:	d1bd      	bne.n	80017c0 <__aeabi_dmul+0x494>
 8001844:	e7c2      	b.n	80017cc <__aeabi_dmul+0x4a0>
 8001846:	0765      	lsls	r5, r4, #29
 8001848:	0264      	lsls	r4, r4, #9
 800184a:	0b24      	lsrs	r4, r4, #12
 800184c:	08c0      	lsrs	r0, r0, #3
 800184e:	2300      	movs	r3, #0
 8001850:	4305      	orrs	r5, r0
 8001852:	e5dd      	b.n	8001410 <__aeabi_dmul+0xe4>
 8001854:	2500      	movs	r5, #0
 8001856:	2302      	movs	r3, #2
 8001858:	2e0f      	cmp	r6, #15
 800185a:	d10c      	bne.n	8001876 <__aeabi_dmul+0x54a>
 800185c:	2480      	movs	r4, #128	; 0x80
 800185e:	465b      	mov	r3, fp
 8001860:	0324      	lsls	r4, r4, #12
 8001862:	4223      	tst	r3, r4
 8001864:	d00e      	beq.n	8001884 <__aeabi_dmul+0x558>
 8001866:	4221      	tst	r1, r4
 8001868:	d10c      	bne.n	8001884 <__aeabi_dmul+0x558>
 800186a:	430c      	orrs	r4, r1
 800186c:	0324      	lsls	r4, r4, #12
 800186e:	003a      	movs	r2, r7
 8001870:	4b0e      	ldr	r3, [pc, #56]	; (80018ac <__aeabi_dmul+0x580>)
 8001872:	0b24      	lsrs	r4, r4, #12
 8001874:	e5cc      	b.n	8001410 <__aeabi_dmul+0xe4>
 8001876:	2e0b      	cmp	r6, #11
 8001878:	d000      	beq.n	800187c <__aeabi_dmul+0x550>
 800187a:	e5a2      	b.n	80013c2 <__aeabi_dmul+0x96>
 800187c:	468b      	mov	fp, r1
 800187e:	46aa      	mov	sl, r5
 8001880:	9300      	str	r3, [sp, #0]
 8001882:	e5f7      	b.n	8001474 <__aeabi_dmul+0x148>
 8001884:	2480      	movs	r4, #128	; 0x80
 8001886:	465b      	mov	r3, fp
 8001888:	0324      	lsls	r4, r4, #12
 800188a:	431c      	orrs	r4, r3
 800188c:	0324      	lsls	r4, r4, #12
 800188e:	4642      	mov	r2, r8
 8001890:	4655      	mov	r5, sl
 8001892:	4b06      	ldr	r3, [pc, #24]	; (80018ac <__aeabi_dmul+0x580>)
 8001894:	0b24      	lsrs	r4, r4, #12
 8001896:	e5bb      	b.n	8001410 <__aeabi_dmul+0xe4>
 8001898:	464d      	mov	r5, r9
 800189a:	0021      	movs	r1, r4
 800189c:	2303      	movs	r3, #3
 800189e:	e7db      	b.n	8001858 <__aeabi_dmul+0x52c>
 80018a0:	fffffc0d 	.word	0xfffffc0d
 80018a4:	0000043e 	.word	0x0000043e
 80018a8:	0000041e 	.word	0x0000041e
 80018ac:	000007ff 	.word	0x000007ff

080018b0 <__aeabi_dsub>:
 80018b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018b2:	4657      	mov	r7, sl
 80018b4:	464e      	mov	r6, r9
 80018b6:	4645      	mov	r5, r8
 80018b8:	46de      	mov	lr, fp
 80018ba:	b5e0      	push	{r5, r6, r7, lr}
 80018bc:	000d      	movs	r5, r1
 80018be:	0004      	movs	r4, r0
 80018c0:	0019      	movs	r1, r3
 80018c2:	0010      	movs	r0, r2
 80018c4:	032b      	lsls	r3, r5, #12
 80018c6:	0a5b      	lsrs	r3, r3, #9
 80018c8:	0f62      	lsrs	r2, r4, #29
 80018ca:	431a      	orrs	r2, r3
 80018cc:	00e3      	lsls	r3, r4, #3
 80018ce:	030c      	lsls	r4, r1, #12
 80018d0:	0a64      	lsrs	r4, r4, #9
 80018d2:	0f47      	lsrs	r7, r0, #29
 80018d4:	4327      	orrs	r7, r4
 80018d6:	4cd0      	ldr	r4, [pc, #832]	; (8001c18 <__aeabi_dsub+0x368>)
 80018d8:	006e      	lsls	r6, r5, #1
 80018da:	4691      	mov	r9, r2
 80018dc:	b083      	sub	sp, #12
 80018de:	004a      	lsls	r2, r1, #1
 80018e0:	00c0      	lsls	r0, r0, #3
 80018e2:	4698      	mov	r8, r3
 80018e4:	46a2      	mov	sl, r4
 80018e6:	0d76      	lsrs	r6, r6, #21
 80018e8:	0fed      	lsrs	r5, r5, #31
 80018ea:	0d52      	lsrs	r2, r2, #21
 80018ec:	0fc9      	lsrs	r1, r1, #31
 80018ee:	9001      	str	r0, [sp, #4]
 80018f0:	42a2      	cmp	r2, r4
 80018f2:	d100      	bne.n	80018f6 <__aeabi_dsub+0x46>
 80018f4:	e0b9      	b.n	8001a6a <__aeabi_dsub+0x1ba>
 80018f6:	2401      	movs	r4, #1
 80018f8:	4061      	eors	r1, r4
 80018fa:	468b      	mov	fp, r1
 80018fc:	428d      	cmp	r5, r1
 80018fe:	d100      	bne.n	8001902 <__aeabi_dsub+0x52>
 8001900:	e08d      	b.n	8001a1e <__aeabi_dsub+0x16e>
 8001902:	1ab4      	subs	r4, r6, r2
 8001904:	46a4      	mov	ip, r4
 8001906:	2c00      	cmp	r4, #0
 8001908:	dc00      	bgt.n	800190c <__aeabi_dsub+0x5c>
 800190a:	e0b7      	b.n	8001a7c <__aeabi_dsub+0x1cc>
 800190c:	2a00      	cmp	r2, #0
 800190e:	d100      	bne.n	8001912 <__aeabi_dsub+0x62>
 8001910:	e0cb      	b.n	8001aaa <__aeabi_dsub+0x1fa>
 8001912:	4ac1      	ldr	r2, [pc, #772]	; (8001c18 <__aeabi_dsub+0x368>)
 8001914:	4296      	cmp	r6, r2
 8001916:	d100      	bne.n	800191a <__aeabi_dsub+0x6a>
 8001918:	e186      	b.n	8001c28 <__aeabi_dsub+0x378>
 800191a:	2280      	movs	r2, #128	; 0x80
 800191c:	0412      	lsls	r2, r2, #16
 800191e:	4317      	orrs	r7, r2
 8001920:	4662      	mov	r2, ip
 8001922:	2a38      	cmp	r2, #56	; 0x38
 8001924:	dd00      	ble.n	8001928 <__aeabi_dsub+0x78>
 8001926:	e1a4      	b.n	8001c72 <__aeabi_dsub+0x3c2>
 8001928:	2a1f      	cmp	r2, #31
 800192a:	dd00      	ble.n	800192e <__aeabi_dsub+0x7e>
 800192c:	e21d      	b.n	8001d6a <__aeabi_dsub+0x4ba>
 800192e:	4661      	mov	r1, ip
 8001930:	2220      	movs	r2, #32
 8001932:	003c      	movs	r4, r7
 8001934:	1a52      	subs	r2, r2, r1
 8001936:	0001      	movs	r1, r0
 8001938:	4090      	lsls	r0, r2
 800193a:	4094      	lsls	r4, r2
 800193c:	1e42      	subs	r2, r0, #1
 800193e:	4190      	sbcs	r0, r2
 8001940:	4662      	mov	r2, ip
 8001942:	46a0      	mov	r8, r4
 8001944:	4664      	mov	r4, ip
 8001946:	40d7      	lsrs	r7, r2
 8001948:	464a      	mov	r2, r9
 800194a:	40e1      	lsrs	r1, r4
 800194c:	4644      	mov	r4, r8
 800194e:	1bd2      	subs	r2, r2, r7
 8001950:	4691      	mov	r9, r2
 8001952:	430c      	orrs	r4, r1
 8001954:	4304      	orrs	r4, r0
 8001956:	1b1c      	subs	r4, r3, r4
 8001958:	42a3      	cmp	r3, r4
 800195a:	4192      	sbcs	r2, r2
 800195c:	464b      	mov	r3, r9
 800195e:	4252      	negs	r2, r2
 8001960:	1a9b      	subs	r3, r3, r2
 8001962:	469a      	mov	sl, r3
 8001964:	4653      	mov	r3, sl
 8001966:	021b      	lsls	r3, r3, #8
 8001968:	d400      	bmi.n	800196c <__aeabi_dsub+0xbc>
 800196a:	e12b      	b.n	8001bc4 <__aeabi_dsub+0x314>
 800196c:	4653      	mov	r3, sl
 800196e:	025a      	lsls	r2, r3, #9
 8001970:	0a53      	lsrs	r3, r2, #9
 8001972:	469a      	mov	sl, r3
 8001974:	4653      	mov	r3, sl
 8001976:	2b00      	cmp	r3, #0
 8001978:	d100      	bne.n	800197c <__aeabi_dsub+0xcc>
 800197a:	e166      	b.n	8001c4a <__aeabi_dsub+0x39a>
 800197c:	4650      	mov	r0, sl
 800197e:	f000 fc81 	bl	8002284 <__clzsi2>
 8001982:	0003      	movs	r3, r0
 8001984:	3b08      	subs	r3, #8
 8001986:	2220      	movs	r2, #32
 8001988:	0020      	movs	r0, r4
 800198a:	1ad2      	subs	r2, r2, r3
 800198c:	4651      	mov	r1, sl
 800198e:	40d0      	lsrs	r0, r2
 8001990:	4099      	lsls	r1, r3
 8001992:	0002      	movs	r2, r0
 8001994:	409c      	lsls	r4, r3
 8001996:	430a      	orrs	r2, r1
 8001998:	429e      	cmp	r6, r3
 800199a:	dd00      	ble.n	800199e <__aeabi_dsub+0xee>
 800199c:	e164      	b.n	8001c68 <__aeabi_dsub+0x3b8>
 800199e:	1b9b      	subs	r3, r3, r6
 80019a0:	1c59      	adds	r1, r3, #1
 80019a2:	291f      	cmp	r1, #31
 80019a4:	dd00      	ble.n	80019a8 <__aeabi_dsub+0xf8>
 80019a6:	e0fe      	b.n	8001ba6 <__aeabi_dsub+0x2f6>
 80019a8:	2320      	movs	r3, #32
 80019aa:	0010      	movs	r0, r2
 80019ac:	0026      	movs	r6, r4
 80019ae:	1a5b      	subs	r3, r3, r1
 80019b0:	409c      	lsls	r4, r3
 80019b2:	4098      	lsls	r0, r3
 80019b4:	40ce      	lsrs	r6, r1
 80019b6:	40ca      	lsrs	r2, r1
 80019b8:	1e63      	subs	r3, r4, #1
 80019ba:	419c      	sbcs	r4, r3
 80019bc:	4330      	orrs	r0, r6
 80019be:	4692      	mov	sl, r2
 80019c0:	2600      	movs	r6, #0
 80019c2:	4304      	orrs	r4, r0
 80019c4:	0763      	lsls	r3, r4, #29
 80019c6:	d009      	beq.n	80019dc <__aeabi_dsub+0x12c>
 80019c8:	230f      	movs	r3, #15
 80019ca:	4023      	ands	r3, r4
 80019cc:	2b04      	cmp	r3, #4
 80019ce:	d005      	beq.n	80019dc <__aeabi_dsub+0x12c>
 80019d0:	1d23      	adds	r3, r4, #4
 80019d2:	42a3      	cmp	r3, r4
 80019d4:	41a4      	sbcs	r4, r4
 80019d6:	4264      	negs	r4, r4
 80019d8:	44a2      	add	sl, r4
 80019da:	001c      	movs	r4, r3
 80019dc:	4653      	mov	r3, sl
 80019de:	021b      	lsls	r3, r3, #8
 80019e0:	d400      	bmi.n	80019e4 <__aeabi_dsub+0x134>
 80019e2:	e0f2      	b.n	8001bca <__aeabi_dsub+0x31a>
 80019e4:	4b8c      	ldr	r3, [pc, #560]	; (8001c18 <__aeabi_dsub+0x368>)
 80019e6:	3601      	adds	r6, #1
 80019e8:	429e      	cmp	r6, r3
 80019ea:	d100      	bne.n	80019ee <__aeabi_dsub+0x13e>
 80019ec:	e10f      	b.n	8001c0e <__aeabi_dsub+0x35e>
 80019ee:	4653      	mov	r3, sl
 80019f0:	498a      	ldr	r1, [pc, #552]	; (8001c1c <__aeabi_dsub+0x36c>)
 80019f2:	08e4      	lsrs	r4, r4, #3
 80019f4:	400b      	ands	r3, r1
 80019f6:	0019      	movs	r1, r3
 80019f8:	075b      	lsls	r3, r3, #29
 80019fa:	4323      	orrs	r3, r4
 80019fc:	0572      	lsls	r2, r6, #21
 80019fe:	024c      	lsls	r4, r1, #9
 8001a00:	0b24      	lsrs	r4, r4, #12
 8001a02:	0d52      	lsrs	r2, r2, #21
 8001a04:	0512      	lsls	r2, r2, #20
 8001a06:	4322      	orrs	r2, r4
 8001a08:	07ed      	lsls	r5, r5, #31
 8001a0a:	432a      	orrs	r2, r5
 8001a0c:	0018      	movs	r0, r3
 8001a0e:	0011      	movs	r1, r2
 8001a10:	b003      	add	sp, #12
 8001a12:	bcf0      	pop	{r4, r5, r6, r7}
 8001a14:	46bb      	mov	fp, r7
 8001a16:	46b2      	mov	sl, r6
 8001a18:	46a9      	mov	r9, r5
 8001a1a:	46a0      	mov	r8, r4
 8001a1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a1e:	1ab4      	subs	r4, r6, r2
 8001a20:	46a4      	mov	ip, r4
 8001a22:	2c00      	cmp	r4, #0
 8001a24:	dd59      	ble.n	8001ada <__aeabi_dsub+0x22a>
 8001a26:	2a00      	cmp	r2, #0
 8001a28:	d100      	bne.n	8001a2c <__aeabi_dsub+0x17c>
 8001a2a:	e0b0      	b.n	8001b8e <__aeabi_dsub+0x2de>
 8001a2c:	4556      	cmp	r6, sl
 8001a2e:	d100      	bne.n	8001a32 <__aeabi_dsub+0x182>
 8001a30:	e0fa      	b.n	8001c28 <__aeabi_dsub+0x378>
 8001a32:	2280      	movs	r2, #128	; 0x80
 8001a34:	0412      	lsls	r2, r2, #16
 8001a36:	4317      	orrs	r7, r2
 8001a38:	4662      	mov	r2, ip
 8001a3a:	2a38      	cmp	r2, #56	; 0x38
 8001a3c:	dd00      	ble.n	8001a40 <__aeabi_dsub+0x190>
 8001a3e:	e0d4      	b.n	8001bea <__aeabi_dsub+0x33a>
 8001a40:	2a1f      	cmp	r2, #31
 8001a42:	dc00      	bgt.n	8001a46 <__aeabi_dsub+0x196>
 8001a44:	e1c0      	b.n	8001dc8 <__aeabi_dsub+0x518>
 8001a46:	0039      	movs	r1, r7
 8001a48:	3a20      	subs	r2, #32
 8001a4a:	40d1      	lsrs	r1, r2
 8001a4c:	4662      	mov	r2, ip
 8001a4e:	2a20      	cmp	r2, #32
 8001a50:	d006      	beq.n	8001a60 <__aeabi_dsub+0x1b0>
 8001a52:	4664      	mov	r4, ip
 8001a54:	2240      	movs	r2, #64	; 0x40
 8001a56:	1b12      	subs	r2, r2, r4
 8001a58:	003c      	movs	r4, r7
 8001a5a:	4094      	lsls	r4, r2
 8001a5c:	4304      	orrs	r4, r0
 8001a5e:	9401      	str	r4, [sp, #4]
 8001a60:	9c01      	ldr	r4, [sp, #4]
 8001a62:	1e62      	subs	r2, r4, #1
 8001a64:	4194      	sbcs	r4, r2
 8001a66:	430c      	orrs	r4, r1
 8001a68:	e0c3      	b.n	8001bf2 <__aeabi_dsub+0x342>
 8001a6a:	003c      	movs	r4, r7
 8001a6c:	4304      	orrs	r4, r0
 8001a6e:	d02b      	beq.n	8001ac8 <__aeabi_dsub+0x218>
 8001a70:	468b      	mov	fp, r1
 8001a72:	428d      	cmp	r5, r1
 8001a74:	d02e      	beq.n	8001ad4 <__aeabi_dsub+0x224>
 8001a76:	4c6a      	ldr	r4, [pc, #424]	; (8001c20 <__aeabi_dsub+0x370>)
 8001a78:	46a4      	mov	ip, r4
 8001a7a:	44b4      	add	ip, r6
 8001a7c:	4664      	mov	r4, ip
 8001a7e:	2c00      	cmp	r4, #0
 8001a80:	d05f      	beq.n	8001b42 <__aeabi_dsub+0x292>
 8001a82:	1b94      	subs	r4, r2, r6
 8001a84:	46a4      	mov	ip, r4
 8001a86:	2e00      	cmp	r6, #0
 8001a88:	d000      	beq.n	8001a8c <__aeabi_dsub+0x1dc>
 8001a8a:	e120      	b.n	8001cce <__aeabi_dsub+0x41e>
 8001a8c:	464c      	mov	r4, r9
 8001a8e:	431c      	orrs	r4, r3
 8001a90:	d100      	bne.n	8001a94 <__aeabi_dsub+0x1e4>
 8001a92:	e1c7      	b.n	8001e24 <__aeabi_dsub+0x574>
 8001a94:	4661      	mov	r1, ip
 8001a96:	1e4c      	subs	r4, r1, #1
 8001a98:	2901      	cmp	r1, #1
 8001a9a:	d100      	bne.n	8001a9e <__aeabi_dsub+0x1ee>
 8001a9c:	e223      	b.n	8001ee6 <__aeabi_dsub+0x636>
 8001a9e:	4d5e      	ldr	r5, [pc, #376]	; (8001c18 <__aeabi_dsub+0x368>)
 8001aa0:	45ac      	cmp	ip, r5
 8001aa2:	d100      	bne.n	8001aa6 <__aeabi_dsub+0x1f6>
 8001aa4:	e1d8      	b.n	8001e58 <__aeabi_dsub+0x5a8>
 8001aa6:	46a4      	mov	ip, r4
 8001aa8:	e11a      	b.n	8001ce0 <__aeabi_dsub+0x430>
 8001aaa:	003a      	movs	r2, r7
 8001aac:	4302      	orrs	r2, r0
 8001aae:	d100      	bne.n	8001ab2 <__aeabi_dsub+0x202>
 8001ab0:	e0e4      	b.n	8001c7c <__aeabi_dsub+0x3cc>
 8001ab2:	0022      	movs	r2, r4
 8001ab4:	3a01      	subs	r2, #1
 8001ab6:	2c01      	cmp	r4, #1
 8001ab8:	d100      	bne.n	8001abc <__aeabi_dsub+0x20c>
 8001aba:	e1c3      	b.n	8001e44 <__aeabi_dsub+0x594>
 8001abc:	4956      	ldr	r1, [pc, #344]	; (8001c18 <__aeabi_dsub+0x368>)
 8001abe:	428c      	cmp	r4, r1
 8001ac0:	d100      	bne.n	8001ac4 <__aeabi_dsub+0x214>
 8001ac2:	e0b1      	b.n	8001c28 <__aeabi_dsub+0x378>
 8001ac4:	4694      	mov	ip, r2
 8001ac6:	e72b      	b.n	8001920 <__aeabi_dsub+0x70>
 8001ac8:	2401      	movs	r4, #1
 8001aca:	4061      	eors	r1, r4
 8001acc:	468b      	mov	fp, r1
 8001ace:	428d      	cmp	r5, r1
 8001ad0:	d000      	beq.n	8001ad4 <__aeabi_dsub+0x224>
 8001ad2:	e716      	b.n	8001902 <__aeabi_dsub+0x52>
 8001ad4:	4952      	ldr	r1, [pc, #328]	; (8001c20 <__aeabi_dsub+0x370>)
 8001ad6:	468c      	mov	ip, r1
 8001ad8:	44b4      	add	ip, r6
 8001ada:	4664      	mov	r4, ip
 8001adc:	2c00      	cmp	r4, #0
 8001ade:	d100      	bne.n	8001ae2 <__aeabi_dsub+0x232>
 8001ae0:	e0d3      	b.n	8001c8a <__aeabi_dsub+0x3da>
 8001ae2:	1b91      	subs	r1, r2, r6
 8001ae4:	468c      	mov	ip, r1
 8001ae6:	2e00      	cmp	r6, #0
 8001ae8:	d100      	bne.n	8001aec <__aeabi_dsub+0x23c>
 8001aea:	e15e      	b.n	8001daa <__aeabi_dsub+0x4fa>
 8001aec:	494a      	ldr	r1, [pc, #296]	; (8001c18 <__aeabi_dsub+0x368>)
 8001aee:	428a      	cmp	r2, r1
 8001af0:	d100      	bne.n	8001af4 <__aeabi_dsub+0x244>
 8001af2:	e1be      	b.n	8001e72 <__aeabi_dsub+0x5c2>
 8001af4:	2180      	movs	r1, #128	; 0x80
 8001af6:	464c      	mov	r4, r9
 8001af8:	0409      	lsls	r1, r1, #16
 8001afa:	430c      	orrs	r4, r1
 8001afc:	46a1      	mov	r9, r4
 8001afe:	4661      	mov	r1, ip
 8001b00:	2938      	cmp	r1, #56	; 0x38
 8001b02:	dd00      	ble.n	8001b06 <__aeabi_dsub+0x256>
 8001b04:	e1ba      	b.n	8001e7c <__aeabi_dsub+0x5cc>
 8001b06:	291f      	cmp	r1, #31
 8001b08:	dd00      	ble.n	8001b0c <__aeabi_dsub+0x25c>
 8001b0a:	e227      	b.n	8001f5c <__aeabi_dsub+0x6ac>
 8001b0c:	2420      	movs	r4, #32
 8001b0e:	1a64      	subs	r4, r4, r1
 8001b10:	4649      	mov	r1, r9
 8001b12:	40a1      	lsls	r1, r4
 8001b14:	001e      	movs	r6, r3
 8001b16:	4688      	mov	r8, r1
 8001b18:	4661      	mov	r1, ip
 8001b1a:	40a3      	lsls	r3, r4
 8001b1c:	40ce      	lsrs	r6, r1
 8001b1e:	4641      	mov	r1, r8
 8001b20:	1e5c      	subs	r4, r3, #1
 8001b22:	41a3      	sbcs	r3, r4
 8001b24:	4331      	orrs	r1, r6
 8001b26:	4319      	orrs	r1, r3
 8001b28:	000c      	movs	r4, r1
 8001b2a:	4663      	mov	r3, ip
 8001b2c:	4649      	mov	r1, r9
 8001b2e:	40d9      	lsrs	r1, r3
 8001b30:	187f      	adds	r7, r7, r1
 8001b32:	1824      	adds	r4, r4, r0
 8001b34:	4284      	cmp	r4, r0
 8001b36:	419b      	sbcs	r3, r3
 8001b38:	425b      	negs	r3, r3
 8001b3a:	469a      	mov	sl, r3
 8001b3c:	0016      	movs	r6, r2
 8001b3e:	44ba      	add	sl, r7
 8001b40:	e05d      	b.n	8001bfe <__aeabi_dsub+0x34e>
 8001b42:	4c38      	ldr	r4, [pc, #224]	; (8001c24 <__aeabi_dsub+0x374>)
 8001b44:	1c72      	adds	r2, r6, #1
 8001b46:	4222      	tst	r2, r4
 8001b48:	d000      	beq.n	8001b4c <__aeabi_dsub+0x29c>
 8001b4a:	e0df      	b.n	8001d0c <__aeabi_dsub+0x45c>
 8001b4c:	464a      	mov	r2, r9
 8001b4e:	431a      	orrs	r2, r3
 8001b50:	2e00      	cmp	r6, #0
 8001b52:	d000      	beq.n	8001b56 <__aeabi_dsub+0x2a6>
 8001b54:	e15c      	b.n	8001e10 <__aeabi_dsub+0x560>
 8001b56:	2a00      	cmp	r2, #0
 8001b58:	d100      	bne.n	8001b5c <__aeabi_dsub+0x2ac>
 8001b5a:	e1cf      	b.n	8001efc <__aeabi_dsub+0x64c>
 8001b5c:	003a      	movs	r2, r7
 8001b5e:	4302      	orrs	r2, r0
 8001b60:	d100      	bne.n	8001b64 <__aeabi_dsub+0x2b4>
 8001b62:	e17f      	b.n	8001e64 <__aeabi_dsub+0x5b4>
 8001b64:	1a1c      	subs	r4, r3, r0
 8001b66:	464a      	mov	r2, r9
 8001b68:	42a3      	cmp	r3, r4
 8001b6a:	4189      	sbcs	r1, r1
 8001b6c:	1bd2      	subs	r2, r2, r7
 8001b6e:	4249      	negs	r1, r1
 8001b70:	1a52      	subs	r2, r2, r1
 8001b72:	4692      	mov	sl, r2
 8001b74:	0212      	lsls	r2, r2, #8
 8001b76:	d400      	bmi.n	8001b7a <__aeabi_dsub+0x2ca>
 8001b78:	e20a      	b.n	8001f90 <__aeabi_dsub+0x6e0>
 8001b7a:	1ac4      	subs	r4, r0, r3
 8001b7c:	42a0      	cmp	r0, r4
 8001b7e:	4180      	sbcs	r0, r0
 8001b80:	464b      	mov	r3, r9
 8001b82:	4240      	negs	r0, r0
 8001b84:	1aff      	subs	r7, r7, r3
 8001b86:	1a3b      	subs	r3, r7, r0
 8001b88:	469a      	mov	sl, r3
 8001b8a:	465d      	mov	r5, fp
 8001b8c:	e71a      	b.n	80019c4 <__aeabi_dsub+0x114>
 8001b8e:	003a      	movs	r2, r7
 8001b90:	4302      	orrs	r2, r0
 8001b92:	d073      	beq.n	8001c7c <__aeabi_dsub+0x3cc>
 8001b94:	0022      	movs	r2, r4
 8001b96:	3a01      	subs	r2, #1
 8001b98:	2c01      	cmp	r4, #1
 8001b9a:	d100      	bne.n	8001b9e <__aeabi_dsub+0x2ee>
 8001b9c:	e0cb      	b.n	8001d36 <__aeabi_dsub+0x486>
 8001b9e:	4554      	cmp	r4, sl
 8001ba0:	d042      	beq.n	8001c28 <__aeabi_dsub+0x378>
 8001ba2:	4694      	mov	ip, r2
 8001ba4:	e748      	b.n	8001a38 <__aeabi_dsub+0x188>
 8001ba6:	0010      	movs	r0, r2
 8001ba8:	3b1f      	subs	r3, #31
 8001baa:	40d8      	lsrs	r0, r3
 8001bac:	2920      	cmp	r1, #32
 8001bae:	d003      	beq.n	8001bb8 <__aeabi_dsub+0x308>
 8001bb0:	2340      	movs	r3, #64	; 0x40
 8001bb2:	1a5b      	subs	r3, r3, r1
 8001bb4:	409a      	lsls	r2, r3
 8001bb6:	4314      	orrs	r4, r2
 8001bb8:	1e63      	subs	r3, r4, #1
 8001bba:	419c      	sbcs	r4, r3
 8001bbc:	2300      	movs	r3, #0
 8001bbe:	2600      	movs	r6, #0
 8001bc0:	469a      	mov	sl, r3
 8001bc2:	4304      	orrs	r4, r0
 8001bc4:	0763      	lsls	r3, r4, #29
 8001bc6:	d000      	beq.n	8001bca <__aeabi_dsub+0x31a>
 8001bc8:	e6fe      	b.n	80019c8 <__aeabi_dsub+0x118>
 8001bca:	4652      	mov	r2, sl
 8001bcc:	08e3      	lsrs	r3, r4, #3
 8001bce:	0752      	lsls	r2, r2, #29
 8001bd0:	4313      	orrs	r3, r2
 8001bd2:	4652      	mov	r2, sl
 8001bd4:	46b4      	mov	ip, r6
 8001bd6:	08d2      	lsrs	r2, r2, #3
 8001bd8:	490f      	ldr	r1, [pc, #60]	; (8001c18 <__aeabi_dsub+0x368>)
 8001bda:	458c      	cmp	ip, r1
 8001bdc:	d02a      	beq.n	8001c34 <__aeabi_dsub+0x384>
 8001bde:	0312      	lsls	r2, r2, #12
 8001be0:	0b14      	lsrs	r4, r2, #12
 8001be2:	4662      	mov	r2, ip
 8001be4:	0552      	lsls	r2, r2, #21
 8001be6:	0d52      	lsrs	r2, r2, #21
 8001be8:	e70c      	b.n	8001a04 <__aeabi_dsub+0x154>
 8001bea:	003c      	movs	r4, r7
 8001bec:	4304      	orrs	r4, r0
 8001bee:	1e62      	subs	r2, r4, #1
 8001bf0:	4194      	sbcs	r4, r2
 8001bf2:	18e4      	adds	r4, r4, r3
 8001bf4:	429c      	cmp	r4, r3
 8001bf6:	4192      	sbcs	r2, r2
 8001bf8:	4252      	negs	r2, r2
 8001bfa:	444a      	add	r2, r9
 8001bfc:	4692      	mov	sl, r2
 8001bfe:	4653      	mov	r3, sl
 8001c00:	021b      	lsls	r3, r3, #8
 8001c02:	d5df      	bpl.n	8001bc4 <__aeabi_dsub+0x314>
 8001c04:	4b04      	ldr	r3, [pc, #16]	; (8001c18 <__aeabi_dsub+0x368>)
 8001c06:	3601      	adds	r6, #1
 8001c08:	429e      	cmp	r6, r3
 8001c0a:	d000      	beq.n	8001c0e <__aeabi_dsub+0x35e>
 8001c0c:	e0a0      	b.n	8001d50 <__aeabi_dsub+0x4a0>
 8001c0e:	0032      	movs	r2, r6
 8001c10:	2400      	movs	r4, #0
 8001c12:	2300      	movs	r3, #0
 8001c14:	e6f6      	b.n	8001a04 <__aeabi_dsub+0x154>
 8001c16:	46c0      	nop			; (mov r8, r8)
 8001c18:	000007ff 	.word	0x000007ff
 8001c1c:	ff7fffff 	.word	0xff7fffff
 8001c20:	fffff801 	.word	0xfffff801
 8001c24:	000007fe 	.word	0x000007fe
 8001c28:	08db      	lsrs	r3, r3, #3
 8001c2a:	464a      	mov	r2, r9
 8001c2c:	0752      	lsls	r2, r2, #29
 8001c2e:	4313      	orrs	r3, r2
 8001c30:	464a      	mov	r2, r9
 8001c32:	08d2      	lsrs	r2, r2, #3
 8001c34:	0019      	movs	r1, r3
 8001c36:	4311      	orrs	r1, r2
 8001c38:	d100      	bne.n	8001c3c <__aeabi_dsub+0x38c>
 8001c3a:	e1b5      	b.n	8001fa8 <__aeabi_dsub+0x6f8>
 8001c3c:	2480      	movs	r4, #128	; 0x80
 8001c3e:	0324      	lsls	r4, r4, #12
 8001c40:	4314      	orrs	r4, r2
 8001c42:	0324      	lsls	r4, r4, #12
 8001c44:	4ad5      	ldr	r2, [pc, #852]	; (8001f9c <__aeabi_dsub+0x6ec>)
 8001c46:	0b24      	lsrs	r4, r4, #12
 8001c48:	e6dc      	b.n	8001a04 <__aeabi_dsub+0x154>
 8001c4a:	0020      	movs	r0, r4
 8001c4c:	f000 fb1a 	bl	8002284 <__clzsi2>
 8001c50:	0003      	movs	r3, r0
 8001c52:	3318      	adds	r3, #24
 8001c54:	2b1f      	cmp	r3, #31
 8001c56:	dc00      	bgt.n	8001c5a <__aeabi_dsub+0x3aa>
 8001c58:	e695      	b.n	8001986 <__aeabi_dsub+0xd6>
 8001c5a:	0022      	movs	r2, r4
 8001c5c:	3808      	subs	r0, #8
 8001c5e:	4082      	lsls	r2, r0
 8001c60:	2400      	movs	r4, #0
 8001c62:	429e      	cmp	r6, r3
 8001c64:	dc00      	bgt.n	8001c68 <__aeabi_dsub+0x3b8>
 8001c66:	e69a      	b.n	800199e <__aeabi_dsub+0xee>
 8001c68:	1af6      	subs	r6, r6, r3
 8001c6a:	4bcd      	ldr	r3, [pc, #820]	; (8001fa0 <__aeabi_dsub+0x6f0>)
 8001c6c:	401a      	ands	r2, r3
 8001c6e:	4692      	mov	sl, r2
 8001c70:	e6a8      	b.n	80019c4 <__aeabi_dsub+0x114>
 8001c72:	003c      	movs	r4, r7
 8001c74:	4304      	orrs	r4, r0
 8001c76:	1e62      	subs	r2, r4, #1
 8001c78:	4194      	sbcs	r4, r2
 8001c7a:	e66c      	b.n	8001956 <__aeabi_dsub+0xa6>
 8001c7c:	464a      	mov	r2, r9
 8001c7e:	08db      	lsrs	r3, r3, #3
 8001c80:	0752      	lsls	r2, r2, #29
 8001c82:	4313      	orrs	r3, r2
 8001c84:	464a      	mov	r2, r9
 8001c86:	08d2      	lsrs	r2, r2, #3
 8001c88:	e7a6      	b.n	8001bd8 <__aeabi_dsub+0x328>
 8001c8a:	4cc6      	ldr	r4, [pc, #792]	; (8001fa4 <__aeabi_dsub+0x6f4>)
 8001c8c:	1c72      	adds	r2, r6, #1
 8001c8e:	4222      	tst	r2, r4
 8001c90:	d000      	beq.n	8001c94 <__aeabi_dsub+0x3e4>
 8001c92:	e0ac      	b.n	8001dee <__aeabi_dsub+0x53e>
 8001c94:	464a      	mov	r2, r9
 8001c96:	431a      	orrs	r2, r3
 8001c98:	2e00      	cmp	r6, #0
 8001c9a:	d000      	beq.n	8001c9e <__aeabi_dsub+0x3ee>
 8001c9c:	e105      	b.n	8001eaa <__aeabi_dsub+0x5fa>
 8001c9e:	2a00      	cmp	r2, #0
 8001ca0:	d100      	bne.n	8001ca4 <__aeabi_dsub+0x3f4>
 8001ca2:	e156      	b.n	8001f52 <__aeabi_dsub+0x6a2>
 8001ca4:	003a      	movs	r2, r7
 8001ca6:	4302      	orrs	r2, r0
 8001ca8:	d100      	bne.n	8001cac <__aeabi_dsub+0x3fc>
 8001caa:	e0db      	b.n	8001e64 <__aeabi_dsub+0x5b4>
 8001cac:	181c      	adds	r4, r3, r0
 8001cae:	429c      	cmp	r4, r3
 8001cb0:	419b      	sbcs	r3, r3
 8001cb2:	444f      	add	r7, r9
 8001cb4:	46ba      	mov	sl, r7
 8001cb6:	425b      	negs	r3, r3
 8001cb8:	449a      	add	sl, r3
 8001cba:	4653      	mov	r3, sl
 8001cbc:	021b      	lsls	r3, r3, #8
 8001cbe:	d400      	bmi.n	8001cc2 <__aeabi_dsub+0x412>
 8001cc0:	e780      	b.n	8001bc4 <__aeabi_dsub+0x314>
 8001cc2:	4652      	mov	r2, sl
 8001cc4:	4bb6      	ldr	r3, [pc, #728]	; (8001fa0 <__aeabi_dsub+0x6f0>)
 8001cc6:	2601      	movs	r6, #1
 8001cc8:	401a      	ands	r2, r3
 8001cca:	4692      	mov	sl, r2
 8001ccc:	e77a      	b.n	8001bc4 <__aeabi_dsub+0x314>
 8001cce:	4cb3      	ldr	r4, [pc, #716]	; (8001f9c <__aeabi_dsub+0x6ec>)
 8001cd0:	42a2      	cmp	r2, r4
 8001cd2:	d100      	bne.n	8001cd6 <__aeabi_dsub+0x426>
 8001cd4:	e0c0      	b.n	8001e58 <__aeabi_dsub+0x5a8>
 8001cd6:	2480      	movs	r4, #128	; 0x80
 8001cd8:	464d      	mov	r5, r9
 8001cda:	0424      	lsls	r4, r4, #16
 8001cdc:	4325      	orrs	r5, r4
 8001cde:	46a9      	mov	r9, r5
 8001ce0:	4664      	mov	r4, ip
 8001ce2:	2c38      	cmp	r4, #56	; 0x38
 8001ce4:	dc53      	bgt.n	8001d8e <__aeabi_dsub+0x4de>
 8001ce6:	4661      	mov	r1, ip
 8001ce8:	2c1f      	cmp	r4, #31
 8001cea:	dd00      	ble.n	8001cee <__aeabi_dsub+0x43e>
 8001cec:	e0cd      	b.n	8001e8a <__aeabi_dsub+0x5da>
 8001cee:	2520      	movs	r5, #32
 8001cf0:	001e      	movs	r6, r3
 8001cf2:	1b2d      	subs	r5, r5, r4
 8001cf4:	464c      	mov	r4, r9
 8001cf6:	40ab      	lsls	r3, r5
 8001cf8:	40ac      	lsls	r4, r5
 8001cfa:	40ce      	lsrs	r6, r1
 8001cfc:	1e5d      	subs	r5, r3, #1
 8001cfe:	41ab      	sbcs	r3, r5
 8001d00:	4334      	orrs	r4, r6
 8001d02:	4323      	orrs	r3, r4
 8001d04:	464c      	mov	r4, r9
 8001d06:	40cc      	lsrs	r4, r1
 8001d08:	1b3f      	subs	r7, r7, r4
 8001d0a:	e045      	b.n	8001d98 <__aeabi_dsub+0x4e8>
 8001d0c:	464a      	mov	r2, r9
 8001d0e:	1a1c      	subs	r4, r3, r0
 8001d10:	1bd1      	subs	r1, r2, r7
 8001d12:	42a3      	cmp	r3, r4
 8001d14:	4192      	sbcs	r2, r2
 8001d16:	4252      	negs	r2, r2
 8001d18:	4692      	mov	sl, r2
 8001d1a:	000a      	movs	r2, r1
 8001d1c:	4651      	mov	r1, sl
 8001d1e:	1a52      	subs	r2, r2, r1
 8001d20:	4692      	mov	sl, r2
 8001d22:	0212      	lsls	r2, r2, #8
 8001d24:	d500      	bpl.n	8001d28 <__aeabi_dsub+0x478>
 8001d26:	e083      	b.n	8001e30 <__aeabi_dsub+0x580>
 8001d28:	4653      	mov	r3, sl
 8001d2a:	4323      	orrs	r3, r4
 8001d2c:	d000      	beq.n	8001d30 <__aeabi_dsub+0x480>
 8001d2e:	e621      	b.n	8001974 <__aeabi_dsub+0xc4>
 8001d30:	2200      	movs	r2, #0
 8001d32:	2500      	movs	r5, #0
 8001d34:	e753      	b.n	8001bde <__aeabi_dsub+0x32e>
 8001d36:	181c      	adds	r4, r3, r0
 8001d38:	429c      	cmp	r4, r3
 8001d3a:	419b      	sbcs	r3, r3
 8001d3c:	444f      	add	r7, r9
 8001d3e:	46ba      	mov	sl, r7
 8001d40:	425b      	negs	r3, r3
 8001d42:	449a      	add	sl, r3
 8001d44:	4653      	mov	r3, sl
 8001d46:	2601      	movs	r6, #1
 8001d48:	021b      	lsls	r3, r3, #8
 8001d4a:	d400      	bmi.n	8001d4e <__aeabi_dsub+0x49e>
 8001d4c:	e73a      	b.n	8001bc4 <__aeabi_dsub+0x314>
 8001d4e:	2602      	movs	r6, #2
 8001d50:	4652      	mov	r2, sl
 8001d52:	4b93      	ldr	r3, [pc, #588]	; (8001fa0 <__aeabi_dsub+0x6f0>)
 8001d54:	2101      	movs	r1, #1
 8001d56:	401a      	ands	r2, r3
 8001d58:	0013      	movs	r3, r2
 8001d5a:	4021      	ands	r1, r4
 8001d5c:	0862      	lsrs	r2, r4, #1
 8001d5e:	430a      	orrs	r2, r1
 8001d60:	07dc      	lsls	r4, r3, #31
 8001d62:	085b      	lsrs	r3, r3, #1
 8001d64:	469a      	mov	sl, r3
 8001d66:	4314      	orrs	r4, r2
 8001d68:	e62c      	b.n	80019c4 <__aeabi_dsub+0x114>
 8001d6a:	0039      	movs	r1, r7
 8001d6c:	3a20      	subs	r2, #32
 8001d6e:	40d1      	lsrs	r1, r2
 8001d70:	4662      	mov	r2, ip
 8001d72:	2a20      	cmp	r2, #32
 8001d74:	d006      	beq.n	8001d84 <__aeabi_dsub+0x4d4>
 8001d76:	4664      	mov	r4, ip
 8001d78:	2240      	movs	r2, #64	; 0x40
 8001d7a:	1b12      	subs	r2, r2, r4
 8001d7c:	003c      	movs	r4, r7
 8001d7e:	4094      	lsls	r4, r2
 8001d80:	4304      	orrs	r4, r0
 8001d82:	9401      	str	r4, [sp, #4]
 8001d84:	9c01      	ldr	r4, [sp, #4]
 8001d86:	1e62      	subs	r2, r4, #1
 8001d88:	4194      	sbcs	r4, r2
 8001d8a:	430c      	orrs	r4, r1
 8001d8c:	e5e3      	b.n	8001956 <__aeabi_dsub+0xa6>
 8001d8e:	4649      	mov	r1, r9
 8001d90:	4319      	orrs	r1, r3
 8001d92:	000b      	movs	r3, r1
 8001d94:	1e5c      	subs	r4, r3, #1
 8001d96:	41a3      	sbcs	r3, r4
 8001d98:	1ac4      	subs	r4, r0, r3
 8001d9a:	42a0      	cmp	r0, r4
 8001d9c:	419b      	sbcs	r3, r3
 8001d9e:	425b      	negs	r3, r3
 8001da0:	1afb      	subs	r3, r7, r3
 8001da2:	469a      	mov	sl, r3
 8001da4:	465d      	mov	r5, fp
 8001da6:	0016      	movs	r6, r2
 8001da8:	e5dc      	b.n	8001964 <__aeabi_dsub+0xb4>
 8001daa:	4649      	mov	r1, r9
 8001dac:	4319      	orrs	r1, r3
 8001dae:	d100      	bne.n	8001db2 <__aeabi_dsub+0x502>
 8001db0:	e0ae      	b.n	8001f10 <__aeabi_dsub+0x660>
 8001db2:	4661      	mov	r1, ip
 8001db4:	4664      	mov	r4, ip
 8001db6:	3901      	subs	r1, #1
 8001db8:	2c01      	cmp	r4, #1
 8001dba:	d100      	bne.n	8001dbe <__aeabi_dsub+0x50e>
 8001dbc:	e0e0      	b.n	8001f80 <__aeabi_dsub+0x6d0>
 8001dbe:	4c77      	ldr	r4, [pc, #476]	; (8001f9c <__aeabi_dsub+0x6ec>)
 8001dc0:	45a4      	cmp	ip, r4
 8001dc2:	d056      	beq.n	8001e72 <__aeabi_dsub+0x5c2>
 8001dc4:	468c      	mov	ip, r1
 8001dc6:	e69a      	b.n	8001afe <__aeabi_dsub+0x24e>
 8001dc8:	4661      	mov	r1, ip
 8001dca:	2220      	movs	r2, #32
 8001dcc:	003c      	movs	r4, r7
 8001dce:	1a52      	subs	r2, r2, r1
 8001dd0:	4094      	lsls	r4, r2
 8001dd2:	0001      	movs	r1, r0
 8001dd4:	4090      	lsls	r0, r2
 8001dd6:	46a0      	mov	r8, r4
 8001dd8:	4664      	mov	r4, ip
 8001dda:	1e42      	subs	r2, r0, #1
 8001ddc:	4190      	sbcs	r0, r2
 8001dde:	4662      	mov	r2, ip
 8001de0:	40e1      	lsrs	r1, r4
 8001de2:	4644      	mov	r4, r8
 8001de4:	40d7      	lsrs	r7, r2
 8001de6:	430c      	orrs	r4, r1
 8001de8:	4304      	orrs	r4, r0
 8001dea:	44b9      	add	r9, r7
 8001dec:	e701      	b.n	8001bf2 <__aeabi_dsub+0x342>
 8001dee:	496b      	ldr	r1, [pc, #428]	; (8001f9c <__aeabi_dsub+0x6ec>)
 8001df0:	428a      	cmp	r2, r1
 8001df2:	d100      	bne.n	8001df6 <__aeabi_dsub+0x546>
 8001df4:	e70c      	b.n	8001c10 <__aeabi_dsub+0x360>
 8001df6:	1818      	adds	r0, r3, r0
 8001df8:	4298      	cmp	r0, r3
 8001dfa:	419b      	sbcs	r3, r3
 8001dfc:	444f      	add	r7, r9
 8001dfe:	425b      	negs	r3, r3
 8001e00:	18fb      	adds	r3, r7, r3
 8001e02:	07dc      	lsls	r4, r3, #31
 8001e04:	0840      	lsrs	r0, r0, #1
 8001e06:	085b      	lsrs	r3, r3, #1
 8001e08:	469a      	mov	sl, r3
 8001e0a:	0016      	movs	r6, r2
 8001e0c:	4304      	orrs	r4, r0
 8001e0e:	e6d9      	b.n	8001bc4 <__aeabi_dsub+0x314>
 8001e10:	2a00      	cmp	r2, #0
 8001e12:	d000      	beq.n	8001e16 <__aeabi_dsub+0x566>
 8001e14:	e081      	b.n	8001f1a <__aeabi_dsub+0x66a>
 8001e16:	003b      	movs	r3, r7
 8001e18:	4303      	orrs	r3, r0
 8001e1a:	d11d      	bne.n	8001e58 <__aeabi_dsub+0x5a8>
 8001e1c:	2280      	movs	r2, #128	; 0x80
 8001e1e:	2500      	movs	r5, #0
 8001e20:	0312      	lsls	r2, r2, #12
 8001e22:	e70b      	b.n	8001c3c <__aeabi_dsub+0x38c>
 8001e24:	08c0      	lsrs	r0, r0, #3
 8001e26:	077b      	lsls	r3, r7, #29
 8001e28:	465d      	mov	r5, fp
 8001e2a:	4303      	orrs	r3, r0
 8001e2c:	08fa      	lsrs	r2, r7, #3
 8001e2e:	e6d3      	b.n	8001bd8 <__aeabi_dsub+0x328>
 8001e30:	1ac4      	subs	r4, r0, r3
 8001e32:	42a0      	cmp	r0, r4
 8001e34:	4180      	sbcs	r0, r0
 8001e36:	464b      	mov	r3, r9
 8001e38:	4240      	negs	r0, r0
 8001e3a:	1aff      	subs	r7, r7, r3
 8001e3c:	1a3b      	subs	r3, r7, r0
 8001e3e:	469a      	mov	sl, r3
 8001e40:	465d      	mov	r5, fp
 8001e42:	e597      	b.n	8001974 <__aeabi_dsub+0xc4>
 8001e44:	1a1c      	subs	r4, r3, r0
 8001e46:	464a      	mov	r2, r9
 8001e48:	42a3      	cmp	r3, r4
 8001e4a:	419b      	sbcs	r3, r3
 8001e4c:	1bd7      	subs	r7, r2, r7
 8001e4e:	425b      	negs	r3, r3
 8001e50:	1afb      	subs	r3, r7, r3
 8001e52:	469a      	mov	sl, r3
 8001e54:	2601      	movs	r6, #1
 8001e56:	e585      	b.n	8001964 <__aeabi_dsub+0xb4>
 8001e58:	08c0      	lsrs	r0, r0, #3
 8001e5a:	077b      	lsls	r3, r7, #29
 8001e5c:	465d      	mov	r5, fp
 8001e5e:	4303      	orrs	r3, r0
 8001e60:	08fa      	lsrs	r2, r7, #3
 8001e62:	e6e7      	b.n	8001c34 <__aeabi_dsub+0x384>
 8001e64:	464a      	mov	r2, r9
 8001e66:	08db      	lsrs	r3, r3, #3
 8001e68:	0752      	lsls	r2, r2, #29
 8001e6a:	4313      	orrs	r3, r2
 8001e6c:	464a      	mov	r2, r9
 8001e6e:	08d2      	lsrs	r2, r2, #3
 8001e70:	e6b5      	b.n	8001bde <__aeabi_dsub+0x32e>
 8001e72:	08c0      	lsrs	r0, r0, #3
 8001e74:	077b      	lsls	r3, r7, #29
 8001e76:	4303      	orrs	r3, r0
 8001e78:	08fa      	lsrs	r2, r7, #3
 8001e7a:	e6db      	b.n	8001c34 <__aeabi_dsub+0x384>
 8001e7c:	4649      	mov	r1, r9
 8001e7e:	4319      	orrs	r1, r3
 8001e80:	000b      	movs	r3, r1
 8001e82:	1e59      	subs	r1, r3, #1
 8001e84:	418b      	sbcs	r3, r1
 8001e86:	001c      	movs	r4, r3
 8001e88:	e653      	b.n	8001b32 <__aeabi_dsub+0x282>
 8001e8a:	464d      	mov	r5, r9
 8001e8c:	3c20      	subs	r4, #32
 8001e8e:	40e5      	lsrs	r5, r4
 8001e90:	2920      	cmp	r1, #32
 8001e92:	d005      	beq.n	8001ea0 <__aeabi_dsub+0x5f0>
 8001e94:	2440      	movs	r4, #64	; 0x40
 8001e96:	1a64      	subs	r4, r4, r1
 8001e98:	4649      	mov	r1, r9
 8001e9a:	40a1      	lsls	r1, r4
 8001e9c:	430b      	orrs	r3, r1
 8001e9e:	4698      	mov	r8, r3
 8001ea0:	4643      	mov	r3, r8
 8001ea2:	1e5c      	subs	r4, r3, #1
 8001ea4:	41a3      	sbcs	r3, r4
 8001ea6:	432b      	orrs	r3, r5
 8001ea8:	e776      	b.n	8001d98 <__aeabi_dsub+0x4e8>
 8001eaa:	2a00      	cmp	r2, #0
 8001eac:	d0e1      	beq.n	8001e72 <__aeabi_dsub+0x5c2>
 8001eae:	003a      	movs	r2, r7
 8001eb0:	08db      	lsrs	r3, r3, #3
 8001eb2:	4302      	orrs	r2, r0
 8001eb4:	d100      	bne.n	8001eb8 <__aeabi_dsub+0x608>
 8001eb6:	e6b8      	b.n	8001c2a <__aeabi_dsub+0x37a>
 8001eb8:	464a      	mov	r2, r9
 8001eba:	0752      	lsls	r2, r2, #29
 8001ebc:	2480      	movs	r4, #128	; 0x80
 8001ebe:	4313      	orrs	r3, r2
 8001ec0:	464a      	mov	r2, r9
 8001ec2:	0324      	lsls	r4, r4, #12
 8001ec4:	08d2      	lsrs	r2, r2, #3
 8001ec6:	4222      	tst	r2, r4
 8001ec8:	d007      	beq.n	8001eda <__aeabi_dsub+0x62a>
 8001eca:	08fe      	lsrs	r6, r7, #3
 8001ecc:	4226      	tst	r6, r4
 8001ece:	d104      	bne.n	8001eda <__aeabi_dsub+0x62a>
 8001ed0:	465d      	mov	r5, fp
 8001ed2:	0032      	movs	r2, r6
 8001ed4:	08c3      	lsrs	r3, r0, #3
 8001ed6:	077f      	lsls	r7, r7, #29
 8001ed8:	433b      	orrs	r3, r7
 8001eda:	0f59      	lsrs	r1, r3, #29
 8001edc:	00db      	lsls	r3, r3, #3
 8001ede:	0749      	lsls	r1, r1, #29
 8001ee0:	08db      	lsrs	r3, r3, #3
 8001ee2:	430b      	orrs	r3, r1
 8001ee4:	e6a6      	b.n	8001c34 <__aeabi_dsub+0x384>
 8001ee6:	1ac4      	subs	r4, r0, r3
 8001ee8:	42a0      	cmp	r0, r4
 8001eea:	4180      	sbcs	r0, r0
 8001eec:	464b      	mov	r3, r9
 8001eee:	4240      	negs	r0, r0
 8001ef0:	1aff      	subs	r7, r7, r3
 8001ef2:	1a3b      	subs	r3, r7, r0
 8001ef4:	469a      	mov	sl, r3
 8001ef6:	465d      	mov	r5, fp
 8001ef8:	2601      	movs	r6, #1
 8001efa:	e533      	b.n	8001964 <__aeabi_dsub+0xb4>
 8001efc:	003b      	movs	r3, r7
 8001efe:	4303      	orrs	r3, r0
 8001f00:	d100      	bne.n	8001f04 <__aeabi_dsub+0x654>
 8001f02:	e715      	b.n	8001d30 <__aeabi_dsub+0x480>
 8001f04:	08c0      	lsrs	r0, r0, #3
 8001f06:	077b      	lsls	r3, r7, #29
 8001f08:	465d      	mov	r5, fp
 8001f0a:	4303      	orrs	r3, r0
 8001f0c:	08fa      	lsrs	r2, r7, #3
 8001f0e:	e666      	b.n	8001bde <__aeabi_dsub+0x32e>
 8001f10:	08c0      	lsrs	r0, r0, #3
 8001f12:	077b      	lsls	r3, r7, #29
 8001f14:	4303      	orrs	r3, r0
 8001f16:	08fa      	lsrs	r2, r7, #3
 8001f18:	e65e      	b.n	8001bd8 <__aeabi_dsub+0x328>
 8001f1a:	003a      	movs	r2, r7
 8001f1c:	08db      	lsrs	r3, r3, #3
 8001f1e:	4302      	orrs	r2, r0
 8001f20:	d100      	bne.n	8001f24 <__aeabi_dsub+0x674>
 8001f22:	e682      	b.n	8001c2a <__aeabi_dsub+0x37a>
 8001f24:	464a      	mov	r2, r9
 8001f26:	0752      	lsls	r2, r2, #29
 8001f28:	2480      	movs	r4, #128	; 0x80
 8001f2a:	4313      	orrs	r3, r2
 8001f2c:	464a      	mov	r2, r9
 8001f2e:	0324      	lsls	r4, r4, #12
 8001f30:	08d2      	lsrs	r2, r2, #3
 8001f32:	4222      	tst	r2, r4
 8001f34:	d007      	beq.n	8001f46 <__aeabi_dsub+0x696>
 8001f36:	08fe      	lsrs	r6, r7, #3
 8001f38:	4226      	tst	r6, r4
 8001f3a:	d104      	bne.n	8001f46 <__aeabi_dsub+0x696>
 8001f3c:	465d      	mov	r5, fp
 8001f3e:	0032      	movs	r2, r6
 8001f40:	08c3      	lsrs	r3, r0, #3
 8001f42:	077f      	lsls	r7, r7, #29
 8001f44:	433b      	orrs	r3, r7
 8001f46:	0f59      	lsrs	r1, r3, #29
 8001f48:	00db      	lsls	r3, r3, #3
 8001f4a:	08db      	lsrs	r3, r3, #3
 8001f4c:	0749      	lsls	r1, r1, #29
 8001f4e:	430b      	orrs	r3, r1
 8001f50:	e670      	b.n	8001c34 <__aeabi_dsub+0x384>
 8001f52:	08c0      	lsrs	r0, r0, #3
 8001f54:	077b      	lsls	r3, r7, #29
 8001f56:	4303      	orrs	r3, r0
 8001f58:	08fa      	lsrs	r2, r7, #3
 8001f5a:	e640      	b.n	8001bde <__aeabi_dsub+0x32e>
 8001f5c:	464c      	mov	r4, r9
 8001f5e:	3920      	subs	r1, #32
 8001f60:	40cc      	lsrs	r4, r1
 8001f62:	4661      	mov	r1, ip
 8001f64:	2920      	cmp	r1, #32
 8001f66:	d006      	beq.n	8001f76 <__aeabi_dsub+0x6c6>
 8001f68:	4666      	mov	r6, ip
 8001f6a:	2140      	movs	r1, #64	; 0x40
 8001f6c:	1b89      	subs	r1, r1, r6
 8001f6e:	464e      	mov	r6, r9
 8001f70:	408e      	lsls	r6, r1
 8001f72:	4333      	orrs	r3, r6
 8001f74:	4698      	mov	r8, r3
 8001f76:	4643      	mov	r3, r8
 8001f78:	1e59      	subs	r1, r3, #1
 8001f7a:	418b      	sbcs	r3, r1
 8001f7c:	431c      	orrs	r4, r3
 8001f7e:	e5d8      	b.n	8001b32 <__aeabi_dsub+0x282>
 8001f80:	181c      	adds	r4, r3, r0
 8001f82:	4284      	cmp	r4, r0
 8001f84:	4180      	sbcs	r0, r0
 8001f86:	444f      	add	r7, r9
 8001f88:	46ba      	mov	sl, r7
 8001f8a:	4240      	negs	r0, r0
 8001f8c:	4482      	add	sl, r0
 8001f8e:	e6d9      	b.n	8001d44 <__aeabi_dsub+0x494>
 8001f90:	4653      	mov	r3, sl
 8001f92:	4323      	orrs	r3, r4
 8001f94:	d100      	bne.n	8001f98 <__aeabi_dsub+0x6e8>
 8001f96:	e6cb      	b.n	8001d30 <__aeabi_dsub+0x480>
 8001f98:	e614      	b.n	8001bc4 <__aeabi_dsub+0x314>
 8001f9a:	46c0      	nop			; (mov r8, r8)
 8001f9c:	000007ff 	.word	0x000007ff
 8001fa0:	ff7fffff 	.word	0xff7fffff
 8001fa4:	000007fe 	.word	0x000007fe
 8001fa8:	2300      	movs	r3, #0
 8001faa:	4a01      	ldr	r2, [pc, #4]	; (8001fb0 <__aeabi_dsub+0x700>)
 8001fac:	001c      	movs	r4, r3
 8001fae:	e529      	b.n	8001a04 <__aeabi_dsub+0x154>
 8001fb0:	000007ff 	.word	0x000007ff

08001fb4 <__aeabi_d2iz>:
 8001fb4:	000a      	movs	r2, r1
 8001fb6:	b530      	push	{r4, r5, lr}
 8001fb8:	4c13      	ldr	r4, [pc, #76]	; (8002008 <__aeabi_d2iz+0x54>)
 8001fba:	0053      	lsls	r3, r2, #1
 8001fbc:	0309      	lsls	r1, r1, #12
 8001fbe:	0005      	movs	r5, r0
 8001fc0:	0b09      	lsrs	r1, r1, #12
 8001fc2:	2000      	movs	r0, #0
 8001fc4:	0d5b      	lsrs	r3, r3, #21
 8001fc6:	0fd2      	lsrs	r2, r2, #31
 8001fc8:	42a3      	cmp	r3, r4
 8001fca:	dd04      	ble.n	8001fd6 <__aeabi_d2iz+0x22>
 8001fcc:	480f      	ldr	r0, [pc, #60]	; (800200c <__aeabi_d2iz+0x58>)
 8001fce:	4283      	cmp	r3, r0
 8001fd0:	dd02      	ble.n	8001fd8 <__aeabi_d2iz+0x24>
 8001fd2:	4b0f      	ldr	r3, [pc, #60]	; (8002010 <__aeabi_d2iz+0x5c>)
 8001fd4:	18d0      	adds	r0, r2, r3
 8001fd6:	bd30      	pop	{r4, r5, pc}
 8001fd8:	2080      	movs	r0, #128	; 0x80
 8001fda:	0340      	lsls	r0, r0, #13
 8001fdc:	4301      	orrs	r1, r0
 8001fde:	480d      	ldr	r0, [pc, #52]	; (8002014 <__aeabi_d2iz+0x60>)
 8001fe0:	1ac0      	subs	r0, r0, r3
 8001fe2:	281f      	cmp	r0, #31
 8001fe4:	dd08      	ble.n	8001ff8 <__aeabi_d2iz+0x44>
 8001fe6:	480c      	ldr	r0, [pc, #48]	; (8002018 <__aeabi_d2iz+0x64>)
 8001fe8:	1ac3      	subs	r3, r0, r3
 8001fea:	40d9      	lsrs	r1, r3
 8001fec:	000b      	movs	r3, r1
 8001fee:	4258      	negs	r0, r3
 8001ff0:	2a00      	cmp	r2, #0
 8001ff2:	d1f0      	bne.n	8001fd6 <__aeabi_d2iz+0x22>
 8001ff4:	0018      	movs	r0, r3
 8001ff6:	e7ee      	b.n	8001fd6 <__aeabi_d2iz+0x22>
 8001ff8:	4c08      	ldr	r4, [pc, #32]	; (800201c <__aeabi_d2iz+0x68>)
 8001ffa:	40c5      	lsrs	r5, r0
 8001ffc:	46a4      	mov	ip, r4
 8001ffe:	4463      	add	r3, ip
 8002000:	4099      	lsls	r1, r3
 8002002:	000b      	movs	r3, r1
 8002004:	432b      	orrs	r3, r5
 8002006:	e7f2      	b.n	8001fee <__aeabi_d2iz+0x3a>
 8002008:	000003fe 	.word	0x000003fe
 800200c:	0000041d 	.word	0x0000041d
 8002010:	7fffffff 	.word	0x7fffffff
 8002014:	00000433 	.word	0x00000433
 8002018:	00000413 	.word	0x00000413
 800201c:	fffffbed 	.word	0xfffffbed

08002020 <__aeabi_ui2d>:
 8002020:	b510      	push	{r4, lr}
 8002022:	1e04      	subs	r4, r0, #0
 8002024:	d010      	beq.n	8002048 <__aeabi_ui2d+0x28>
 8002026:	f000 f92d 	bl	8002284 <__clzsi2>
 800202a:	4b0f      	ldr	r3, [pc, #60]	; (8002068 <__aeabi_ui2d+0x48>)
 800202c:	1a1b      	subs	r3, r3, r0
 800202e:	280a      	cmp	r0, #10
 8002030:	dc11      	bgt.n	8002056 <__aeabi_ui2d+0x36>
 8002032:	220b      	movs	r2, #11
 8002034:	0021      	movs	r1, r4
 8002036:	1a12      	subs	r2, r2, r0
 8002038:	40d1      	lsrs	r1, r2
 800203a:	3015      	adds	r0, #21
 800203c:	030a      	lsls	r2, r1, #12
 800203e:	055b      	lsls	r3, r3, #21
 8002040:	4084      	lsls	r4, r0
 8002042:	0b12      	lsrs	r2, r2, #12
 8002044:	0d5b      	lsrs	r3, r3, #21
 8002046:	e001      	b.n	800204c <__aeabi_ui2d+0x2c>
 8002048:	2300      	movs	r3, #0
 800204a:	2200      	movs	r2, #0
 800204c:	051b      	lsls	r3, r3, #20
 800204e:	4313      	orrs	r3, r2
 8002050:	0020      	movs	r0, r4
 8002052:	0019      	movs	r1, r3
 8002054:	bd10      	pop	{r4, pc}
 8002056:	0022      	movs	r2, r4
 8002058:	380b      	subs	r0, #11
 800205a:	4082      	lsls	r2, r0
 800205c:	055b      	lsls	r3, r3, #21
 800205e:	0312      	lsls	r2, r2, #12
 8002060:	2400      	movs	r4, #0
 8002062:	0b12      	lsrs	r2, r2, #12
 8002064:	0d5b      	lsrs	r3, r3, #21
 8002066:	e7f1      	b.n	800204c <__aeabi_ui2d+0x2c>
 8002068:	0000041e 	.word	0x0000041e

0800206c <__aeabi_f2d>:
 800206c:	b570      	push	{r4, r5, r6, lr}
 800206e:	0242      	lsls	r2, r0, #9
 8002070:	0043      	lsls	r3, r0, #1
 8002072:	0fc4      	lsrs	r4, r0, #31
 8002074:	20fe      	movs	r0, #254	; 0xfe
 8002076:	0e1b      	lsrs	r3, r3, #24
 8002078:	1c59      	adds	r1, r3, #1
 800207a:	0a55      	lsrs	r5, r2, #9
 800207c:	4208      	tst	r0, r1
 800207e:	d00c      	beq.n	800209a <__aeabi_f2d+0x2e>
 8002080:	21e0      	movs	r1, #224	; 0xe0
 8002082:	0089      	lsls	r1, r1, #2
 8002084:	468c      	mov	ip, r1
 8002086:	076d      	lsls	r5, r5, #29
 8002088:	0b12      	lsrs	r2, r2, #12
 800208a:	4463      	add	r3, ip
 800208c:	051b      	lsls	r3, r3, #20
 800208e:	4313      	orrs	r3, r2
 8002090:	07e4      	lsls	r4, r4, #31
 8002092:	4323      	orrs	r3, r4
 8002094:	0028      	movs	r0, r5
 8002096:	0019      	movs	r1, r3
 8002098:	bd70      	pop	{r4, r5, r6, pc}
 800209a:	2b00      	cmp	r3, #0
 800209c:	d114      	bne.n	80020c8 <__aeabi_f2d+0x5c>
 800209e:	2d00      	cmp	r5, #0
 80020a0:	d01b      	beq.n	80020da <__aeabi_f2d+0x6e>
 80020a2:	0028      	movs	r0, r5
 80020a4:	f000 f8ee 	bl	8002284 <__clzsi2>
 80020a8:	280a      	cmp	r0, #10
 80020aa:	dc1c      	bgt.n	80020e6 <__aeabi_f2d+0x7a>
 80020ac:	230b      	movs	r3, #11
 80020ae:	002a      	movs	r2, r5
 80020b0:	1a1b      	subs	r3, r3, r0
 80020b2:	40da      	lsrs	r2, r3
 80020b4:	0003      	movs	r3, r0
 80020b6:	3315      	adds	r3, #21
 80020b8:	409d      	lsls	r5, r3
 80020ba:	4b0e      	ldr	r3, [pc, #56]	; (80020f4 <__aeabi_f2d+0x88>)
 80020bc:	0312      	lsls	r2, r2, #12
 80020be:	1a1b      	subs	r3, r3, r0
 80020c0:	055b      	lsls	r3, r3, #21
 80020c2:	0b12      	lsrs	r2, r2, #12
 80020c4:	0d5b      	lsrs	r3, r3, #21
 80020c6:	e7e1      	b.n	800208c <__aeabi_f2d+0x20>
 80020c8:	2d00      	cmp	r5, #0
 80020ca:	d009      	beq.n	80020e0 <__aeabi_f2d+0x74>
 80020cc:	0b13      	lsrs	r3, r2, #12
 80020ce:	2280      	movs	r2, #128	; 0x80
 80020d0:	0312      	lsls	r2, r2, #12
 80020d2:	431a      	orrs	r2, r3
 80020d4:	076d      	lsls	r5, r5, #29
 80020d6:	4b08      	ldr	r3, [pc, #32]	; (80020f8 <__aeabi_f2d+0x8c>)
 80020d8:	e7d8      	b.n	800208c <__aeabi_f2d+0x20>
 80020da:	2300      	movs	r3, #0
 80020dc:	2200      	movs	r2, #0
 80020de:	e7d5      	b.n	800208c <__aeabi_f2d+0x20>
 80020e0:	2200      	movs	r2, #0
 80020e2:	4b05      	ldr	r3, [pc, #20]	; (80020f8 <__aeabi_f2d+0x8c>)
 80020e4:	e7d2      	b.n	800208c <__aeabi_f2d+0x20>
 80020e6:	0003      	movs	r3, r0
 80020e8:	002a      	movs	r2, r5
 80020ea:	3b0b      	subs	r3, #11
 80020ec:	409a      	lsls	r2, r3
 80020ee:	2500      	movs	r5, #0
 80020f0:	e7e3      	b.n	80020ba <__aeabi_f2d+0x4e>
 80020f2:	46c0      	nop			; (mov r8, r8)
 80020f4:	00000389 	.word	0x00000389
 80020f8:	000007ff 	.word	0x000007ff

080020fc <__aeabi_d2f>:
 80020fc:	0002      	movs	r2, r0
 80020fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002100:	004b      	lsls	r3, r1, #1
 8002102:	030d      	lsls	r5, r1, #12
 8002104:	0f40      	lsrs	r0, r0, #29
 8002106:	0d5b      	lsrs	r3, r3, #21
 8002108:	0fcc      	lsrs	r4, r1, #31
 800210a:	0a6d      	lsrs	r5, r5, #9
 800210c:	493a      	ldr	r1, [pc, #232]	; (80021f8 <__aeabi_d2f+0xfc>)
 800210e:	4305      	orrs	r5, r0
 8002110:	1c58      	adds	r0, r3, #1
 8002112:	00d7      	lsls	r7, r2, #3
 8002114:	4208      	tst	r0, r1
 8002116:	d00a      	beq.n	800212e <__aeabi_d2f+0x32>
 8002118:	4938      	ldr	r1, [pc, #224]	; (80021fc <__aeabi_d2f+0x100>)
 800211a:	1859      	adds	r1, r3, r1
 800211c:	29fe      	cmp	r1, #254	; 0xfe
 800211e:	dd16      	ble.n	800214e <__aeabi_d2f+0x52>
 8002120:	20ff      	movs	r0, #255	; 0xff
 8002122:	2200      	movs	r2, #0
 8002124:	05c0      	lsls	r0, r0, #23
 8002126:	4310      	orrs	r0, r2
 8002128:	07e4      	lsls	r4, r4, #31
 800212a:	4320      	orrs	r0, r4
 800212c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800212e:	2b00      	cmp	r3, #0
 8002130:	d106      	bne.n	8002140 <__aeabi_d2f+0x44>
 8002132:	433d      	orrs	r5, r7
 8002134:	d026      	beq.n	8002184 <__aeabi_d2f+0x88>
 8002136:	2205      	movs	r2, #5
 8002138:	0192      	lsls	r2, r2, #6
 800213a:	0a52      	lsrs	r2, r2, #9
 800213c:	b2d8      	uxtb	r0, r3
 800213e:	e7f1      	b.n	8002124 <__aeabi_d2f+0x28>
 8002140:	432f      	orrs	r7, r5
 8002142:	d0ed      	beq.n	8002120 <__aeabi_d2f+0x24>
 8002144:	2280      	movs	r2, #128	; 0x80
 8002146:	03d2      	lsls	r2, r2, #15
 8002148:	20ff      	movs	r0, #255	; 0xff
 800214a:	432a      	orrs	r2, r5
 800214c:	e7ea      	b.n	8002124 <__aeabi_d2f+0x28>
 800214e:	2900      	cmp	r1, #0
 8002150:	dd1b      	ble.n	800218a <__aeabi_d2f+0x8e>
 8002152:	0192      	lsls	r2, r2, #6
 8002154:	1e50      	subs	r0, r2, #1
 8002156:	4182      	sbcs	r2, r0
 8002158:	00ed      	lsls	r5, r5, #3
 800215a:	0f7f      	lsrs	r7, r7, #29
 800215c:	432a      	orrs	r2, r5
 800215e:	433a      	orrs	r2, r7
 8002160:	0753      	lsls	r3, r2, #29
 8002162:	d047      	beq.n	80021f4 <__aeabi_d2f+0xf8>
 8002164:	230f      	movs	r3, #15
 8002166:	4013      	ands	r3, r2
 8002168:	2b04      	cmp	r3, #4
 800216a:	d000      	beq.n	800216e <__aeabi_d2f+0x72>
 800216c:	3204      	adds	r2, #4
 800216e:	2380      	movs	r3, #128	; 0x80
 8002170:	04db      	lsls	r3, r3, #19
 8002172:	4013      	ands	r3, r2
 8002174:	d03e      	beq.n	80021f4 <__aeabi_d2f+0xf8>
 8002176:	1c48      	adds	r0, r1, #1
 8002178:	29fe      	cmp	r1, #254	; 0xfe
 800217a:	d0d1      	beq.n	8002120 <__aeabi_d2f+0x24>
 800217c:	0192      	lsls	r2, r2, #6
 800217e:	0a52      	lsrs	r2, r2, #9
 8002180:	b2c0      	uxtb	r0, r0
 8002182:	e7cf      	b.n	8002124 <__aeabi_d2f+0x28>
 8002184:	2000      	movs	r0, #0
 8002186:	2200      	movs	r2, #0
 8002188:	e7cc      	b.n	8002124 <__aeabi_d2f+0x28>
 800218a:	000a      	movs	r2, r1
 800218c:	3217      	adds	r2, #23
 800218e:	db2f      	blt.n	80021f0 <__aeabi_d2f+0xf4>
 8002190:	2680      	movs	r6, #128	; 0x80
 8002192:	0436      	lsls	r6, r6, #16
 8002194:	432e      	orrs	r6, r5
 8002196:	251e      	movs	r5, #30
 8002198:	1a6d      	subs	r5, r5, r1
 800219a:	2d1f      	cmp	r5, #31
 800219c:	dd11      	ble.n	80021c2 <__aeabi_d2f+0xc6>
 800219e:	2202      	movs	r2, #2
 80021a0:	4252      	negs	r2, r2
 80021a2:	1a52      	subs	r2, r2, r1
 80021a4:	0031      	movs	r1, r6
 80021a6:	40d1      	lsrs	r1, r2
 80021a8:	2d20      	cmp	r5, #32
 80021aa:	d004      	beq.n	80021b6 <__aeabi_d2f+0xba>
 80021ac:	4a14      	ldr	r2, [pc, #80]	; (8002200 <__aeabi_d2f+0x104>)
 80021ae:	4694      	mov	ip, r2
 80021b0:	4463      	add	r3, ip
 80021b2:	409e      	lsls	r6, r3
 80021b4:	4337      	orrs	r7, r6
 80021b6:	003a      	movs	r2, r7
 80021b8:	1e53      	subs	r3, r2, #1
 80021ba:	419a      	sbcs	r2, r3
 80021bc:	430a      	orrs	r2, r1
 80021be:	2100      	movs	r1, #0
 80021c0:	e7ce      	b.n	8002160 <__aeabi_d2f+0x64>
 80021c2:	4a10      	ldr	r2, [pc, #64]	; (8002204 <__aeabi_d2f+0x108>)
 80021c4:	0038      	movs	r0, r7
 80021c6:	4694      	mov	ip, r2
 80021c8:	4463      	add	r3, ip
 80021ca:	4098      	lsls	r0, r3
 80021cc:	003a      	movs	r2, r7
 80021ce:	1e41      	subs	r1, r0, #1
 80021d0:	4188      	sbcs	r0, r1
 80021d2:	409e      	lsls	r6, r3
 80021d4:	40ea      	lsrs	r2, r5
 80021d6:	4330      	orrs	r0, r6
 80021d8:	4302      	orrs	r2, r0
 80021da:	2100      	movs	r1, #0
 80021dc:	0753      	lsls	r3, r2, #29
 80021de:	d1c1      	bne.n	8002164 <__aeabi_d2f+0x68>
 80021e0:	2180      	movs	r1, #128	; 0x80
 80021e2:	0013      	movs	r3, r2
 80021e4:	04c9      	lsls	r1, r1, #19
 80021e6:	2001      	movs	r0, #1
 80021e8:	400b      	ands	r3, r1
 80021ea:	420a      	tst	r2, r1
 80021ec:	d1c6      	bne.n	800217c <__aeabi_d2f+0x80>
 80021ee:	e7a3      	b.n	8002138 <__aeabi_d2f+0x3c>
 80021f0:	2300      	movs	r3, #0
 80021f2:	e7a0      	b.n	8002136 <__aeabi_d2f+0x3a>
 80021f4:	000b      	movs	r3, r1
 80021f6:	e79f      	b.n	8002138 <__aeabi_d2f+0x3c>
 80021f8:	000007fe 	.word	0x000007fe
 80021fc:	fffffc80 	.word	0xfffffc80
 8002200:	fffffca2 	.word	0xfffffca2
 8002204:	fffffc82 	.word	0xfffffc82

08002208 <__aeabi_cdrcmple>:
 8002208:	4684      	mov	ip, r0
 800220a:	0010      	movs	r0, r2
 800220c:	4662      	mov	r2, ip
 800220e:	468c      	mov	ip, r1
 8002210:	0019      	movs	r1, r3
 8002212:	4663      	mov	r3, ip
 8002214:	e000      	b.n	8002218 <__aeabi_cdcmpeq>
 8002216:	46c0      	nop			; (mov r8, r8)

08002218 <__aeabi_cdcmpeq>:
 8002218:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800221a:	f000 f905 	bl	8002428 <__ledf2>
 800221e:	2800      	cmp	r0, #0
 8002220:	d401      	bmi.n	8002226 <__aeabi_cdcmpeq+0xe>
 8002222:	2100      	movs	r1, #0
 8002224:	42c8      	cmn	r0, r1
 8002226:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08002228 <__aeabi_dcmpeq>:
 8002228:	b510      	push	{r4, lr}
 800222a:	f000 f855 	bl	80022d8 <__eqdf2>
 800222e:	4240      	negs	r0, r0
 8002230:	3001      	adds	r0, #1
 8002232:	bd10      	pop	{r4, pc}

08002234 <__aeabi_dcmplt>:
 8002234:	b510      	push	{r4, lr}
 8002236:	f000 f8f7 	bl	8002428 <__ledf2>
 800223a:	2800      	cmp	r0, #0
 800223c:	db01      	blt.n	8002242 <__aeabi_dcmplt+0xe>
 800223e:	2000      	movs	r0, #0
 8002240:	bd10      	pop	{r4, pc}
 8002242:	2001      	movs	r0, #1
 8002244:	bd10      	pop	{r4, pc}
 8002246:	46c0      	nop			; (mov r8, r8)

08002248 <__aeabi_dcmple>:
 8002248:	b510      	push	{r4, lr}
 800224a:	f000 f8ed 	bl	8002428 <__ledf2>
 800224e:	2800      	cmp	r0, #0
 8002250:	dd01      	ble.n	8002256 <__aeabi_dcmple+0xe>
 8002252:	2000      	movs	r0, #0
 8002254:	bd10      	pop	{r4, pc}
 8002256:	2001      	movs	r0, #1
 8002258:	bd10      	pop	{r4, pc}
 800225a:	46c0      	nop			; (mov r8, r8)

0800225c <__aeabi_dcmpgt>:
 800225c:	b510      	push	{r4, lr}
 800225e:	f000 f87d 	bl	800235c <__gedf2>
 8002262:	2800      	cmp	r0, #0
 8002264:	dc01      	bgt.n	800226a <__aeabi_dcmpgt+0xe>
 8002266:	2000      	movs	r0, #0
 8002268:	bd10      	pop	{r4, pc}
 800226a:	2001      	movs	r0, #1
 800226c:	bd10      	pop	{r4, pc}
 800226e:	46c0      	nop			; (mov r8, r8)

08002270 <__aeabi_dcmpge>:
 8002270:	b510      	push	{r4, lr}
 8002272:	f000 f873 	bl	800235c <__gedf2>
 8002276:	2800      	cmp	r0, #0
 8002278:	da01      	bge.n	800227e <__aeabi_dcmpge+0xe>
 800227a:	2000      	movs	r0, #0
 800227c:	bd10      	pop	{r4, pc}
 800227e:	2001      	movs	r0, #1
 8002280:	bd10      	pop	{r4, pc}
 8002282:	46c0      	nop			; (mov r8, r8)

08002284 <__clzsi2>:
 8002284:	211c      	movs	r1, #28
 8002286:	2301      	movs	r3, #1
 8002288:	041b      	lsls	r3, r3, #16
 800228a:	4298      	cmp	r0, r3
 800228c:	d301      	bcc.n	8002292 <__clzsi2+0xe>
 800228e:	0c00      	lsrs	r0, r0, #16
 8002290:	3910      	subs	r1, #16
 8002292:	0a1b      	lsrs	r3, r3, #8
 8002294:	4298      	cmp	r0, r3
 8002296:	d301      	bcc.n	800229c <__clzsi2+0x18>
 8002298:	0a00      	lsrs	r0, r0, #8
 800229a:	3908      	subs	r1, #8
 800229c:	091b      	lsrs	r3, r3, #4
 800229e:	4298      	cmp	r0, r3
 80022a0:	d301      	bcc.n	80022a6 <__clzsi2+0x22>
 80022a2:	0900      	lsrs	r0, r0, #4
 80022a4:	3904      	subs	r1, #4
 80022a6:	a202      	add	r2, pc, #8	; (adr r2, 80022b0 <__clzsi2+0x2c>)
 80022a8:	5c10      	ldrb	r0, [r2, r0]
 80022aa:	1840      	adds	r0, r0, r1
 80022ac:	4770      	bx	lr
 80022ae:	46c0      	nop			; (mov r8, r8)
 80022b0:	02020304 	.word	0x02020304
 80022b4:	01010101 	.word	0x01010101
	...

080022c0 <__clzdi2>:
 80022c0:	b510      	push	{r4, lr}
 80022c2:	2900      	cmp	r1, #0
 80022c4:	d103      	bne.n	80022ce <__clzdi2+0xe>
 80022c6:	f7ff ffdd 	bl	8002284 <__clzsi2>
 80022ca:	3020      	adds	r0, #32
 80022cc:	e002      	b.n	80022d4 <__clzdi2+0x14>
 80022ce:	0008      	movs	r0, r1
 80022d0:	f7ff ffd8 	bl	8002284 <__clzsi2>
 80022d4:	bd10      	pop	{r4, pc}
 80022d6:	46c0      	nop			; (mov r8, r8)

080022d8 <__eqdf2>:
 80022d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022da:	464e      	mov	r6, r9
 80022dc:	4645      	mov	r5, r8
 80022de:	46de      	mov	lr, fp
 80022e0:	4657      	mov	r7, sl
 80022e2:	4690      	mov	r8, r2
 80022e4:	b5e0      	push	{r5, r6, r7, lr}
 80022e6:	0017      	movs	r7, r2
 80022e8:	031a      	lsls	r2, r3, #12
 80022ea:	0b12      	lsrs	r2, r2, #12
 80022ec:	0005      	movs	r5, r0
 80022ee:	4684      	mov	ip, r0
 80022f0:	4819      	ldr	r0, [pc, #100]	; (8002358 <__eqdf2+0x80>)
 80022f2:	030e      	lsls	r6, r1, #12
 80022f4:	004c      	lsls	r4, r1, #1
 80022f6:	4691      	mov	r9, r2
 80022f8:	005a      	lsls	r2, r3, #1
 80022fa:	0fdb      	lsrs	r3, r3, #31
 80022fc:	469b      	mov	fp, r3
 80022fe:	0b36      	lsrs	r6, r6, #12
 8002300:	0d64      	lsrs	r4, r4, #21
 8002302:	0fc9      	lsrs	r1, r1, #31
 8002304:	0d52      	lsrs	r2, r2, #21
 8002306:	4284      	cmp	r4, r0
 8002308:	d019      	beq.n	800233e <__eqdf2+0x66>
 800230a:	4282      	cmp	r2, r0
 800230c:	d010      	beq.n	8002330 <__eqdf2+0x58>
 800230e:	2001      	movs	r0, #1
 8002310:	4294      	cmp	r4, r2
 8002312:	d10e      	bne.n	8002332 <__eqdf2+0x5a>
 8002314:	454e      	cmp	r6, r9
 8002316:	d10c      	bne.n	8002332 <__eqdf2+0x5a>
 8002318:	2001      	movs	r0, #1
 800231a:	45c4      	cmp	ip, r8
 800231c:	d109      	bne.n	8002332 <__eqdf2+0x5a>
 800231e:	4559      	cmp	r1, fp
 8002320:	d017      	beq.n	8002352 <__eqdf2+0x7a>
 8002322:	2c00      	cmp	r4, #0
 8002324:	d105      	bne.n	8002332 <__eqdf2+0x5a>
 8002326:	0030      	movs	r0, r6
 8002328:	4328      	orrs	r0, r5
 800232a:	1e43      	subs	r3, r0, #1
 800232c:	4198      	sbcs	r0, r3
 800232e:	e000      	b.n	8002332 <__eqdf2+0x5a>
 8002330:	2001      	movs	r0, #1
 8002332:	bcf0      	pop	{r4, r5, r6, r7}
 8002334:	46bb      	mov	fp, r7
 8002336:	46b2      	mov	sl, r6
 8002338:	46a9      	mov	r9, r5
 800233a:	46a0      	mov	r8, r4
 800233c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800233e:	0033      	movs	r3, r6
 8002340:	2001      	movs	r0, #1
 8002342:	432b      	orrs	r3, r5
 8002344:	d1f5      	bne.n	8002332 <__eqdf2+0x5a>
 8002346:	42a2      	cmp	r2, r4
 8002348:	d1f3      	bne.n	8002332 <__eqdf2+0x5a>
 800234a:	464b      	mov	r3, r9
 800234c:	433b      	orrs	r3, r7
 800234e:	d1f0      	bne.n	8002332 <__eqdf2+0x5a>
 8002350:	e7e2      	b.n	8002318 <__eqdf2+0x40>
 8002352:	2000      	movs	r0, #0
 8002354:	e7ed      	b.n	8002332 <__eqdf2+0x5a>
 8002356:	46c0      	nop			; (mov r8, r8)
 8002358:	000007ff 	.word	0x000007ff

0800235c <__gedf2>:
 800235c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800235e:	4647      	mov	r7, r8
 8002360:	46ce      	mov	lr, r9
 8002362:	0004      	movs	r4, r0
 8002364:	0018      	movs	r0, r3
 8002366:	0016      	movs	r6, r2
 8002368:	031b      	lsls	r3, r3, #12
 800236a:	0b1b      	lsrs	r3, r3, #12
 800236c:	4d2d      	ldr	r5, [pc, #180]	; (8002424 <__gedf2+0xc8>)
 800236e:	004a      	lsls	r2, r1, #1
 8002370:	4699      	mov	r9, r3
 8002372:	b580      	push	{r7, lr}
 8002374:	0043      	lsls	r3, r0, #1
 8002376:	030f      	lsls	r7, r1, #12
 8002378:	46a4      	mov	ip, r4
 800237a:	46b0      	mov	r8, r6
 800237c:	0b3f      	lsrs	r7, r7, #12
 800237e:	0d52      	lsrs	r2, r2, #21
 8002380:	0fc9      	lsrs	r1, r1, #31
 8002382:	0d5b      	lsrs	r3, r3, #21
 8002384:	0fc0      	lsrs	r0, r0, #31
 8002386:	42aa      	cmp	r2, r5
 8002388:	d021      	beq.n	80023ce <__gedf2+0x72>
 800238a:	42ab      	cmp	r3, r5
 800238c:	d013      	beq.n	80023b6 <__gedf2+0x5a>
 800238e:	2a00      	cmp	r2, #0
 8002390:	d122      	bne.n	80023d8 <__gedf2+0x7c>
 8002392:	433c      	orrs	r4, r7
 8002394:	2b00      	cmp	r3, #0
 8002396:	d102      	bne.n	800239e <__gedf2+0x42>
 8002398:	464d      	mov	r5, r9
 800239a:	432e      	orrs	r6, r5
 800239c:	d022      	beq.n	80023e4 <__gedf2+0x88>
 800239e:	2c00      	cmp	r4, #0
 80023a0:	d010      	beq.n	80023c4 <__gedf2+0x68>
 80023a2:	4281      	cmp	r1, r0
 80023a4:	d022      	beq.n	80023ec <__gedf2+0x90>
 80023a6:	2002      	movs	r0, #2
 80023a8:	3901      	subs	r1, #1
 80023aa:	4008      	ands	r0, r1
 80023ac:	3801      	subs	r0, #1
 80023ae:	bcc0      	pop	{r6, r7}
 80023b0:	46b9      	mov	r9, r7
 80023b2:	46b0      	mov	r8, r6
 80023b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023b6:	464d      	mov	r5, r9
 80023b8:	432e      	orrs	r6, r5
 80023ba:	d129      	bne.n	8002410 <__gedf2+0xb4>
 80023bc:	2a00      	cmp	r2, #0
 80023be:	d1f0      	bne.n	80023a2 <__gedf2+0x46>
 80023c0:	433c      	orrs	r4, r7
 80023c2:	d1ee      	bne.n	80023a2 <__gedf2+0x46>
 80023c4:	2800      	cmp	r0, #0
 80023c6:	d1f2      	bne.n	80023ae <__gedf2+0x52>
 80023c8:	2001      	movs	r0, #1
 80023ca:	4240      	negs	r0, r0
 80023cc:	e7ef      	b.n	80023ae <__gedf2+0x52>
 80023ce:	003d      	movs	r5, r7
 80023d0:	4325      	orrs	r5, r4
 80023d2:	d11d      	bne.n	8002410 <__gedf2+0xb4>
 80023d4:	4293      	cmp	r3, r2
 80023d6:	d0ee      	beq.n	80023b6 <__gedf2+0x5a>
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d1e2      	bne.n	80023a2 <__gedf2+0x46>
 80023dc:	464c      	mov	r4, r9
 80023de:	4326      	orrs	r6, r4
 80023e0:	d1df      	bne.n	80023a2 <__gedf2+0x46>
 80023e2:	e7e0      	b.n	80023a6 <__gedf2+0x4a>
 80023e4:	2000      	movs	r0, #0
 80023e6:	2c00      	cmp	r4, #0
 80023e8:	d0e1      	beq.n	80023ae <__gedf2+0x52>
 80023ea:	e7dc      	b.n	80023a6 <__gedf2+0x4a>
 80023ec:	429a      	cmp	r2, r3
 80023ee:	dc0a      	bgt.n	8002406 <__gedf2+0xaa>
 80023f0:	dbe8      	blt.n	80023c4 <__gedf2+0x68>
 80023f2:	454f      	cmp	r7, r9
 80023f4:	d8d7      	bhi.n	80023a6 <__gedf2+0x4a>
 80023f6:	d00e      	beq.n	8002416 <__gedf2+0xba>
 80023f8:	2000      	movs	r0, #0
 80023fa:	454f      	cmp	r7, r9
 80023fc:	d2d7      	bcs.n	80023ae <__gedf2+0x52>
 80023fe:	2900      	cmp	r1, #0
 8002400:	d0e2      	beq.n	80023c8 <__gedf2+0x6c>
 8002402:	0008      	movs	r0, r1
 8002404:	e7d3      	b.n	80023ae <__gedf2+0x52>
 8002406:	4243      	negs	r3, r0
 8002408:	4158      	adcs	r0, r3
 800240a:	0040      	lsls	r0, r0, #1
 800240c:	3801      	subs	r0, #1
 800240e:	e7ce      	b.n	80023ae <__gedf2+0x52>
 8002410:	2002      	movs	r0, #2
 8002412:	4240      	negs	r0, r0
 8002414:	e7cb      	b.n	80023ae <__gedf2+0x52>
 8002416:	45c4      	cmp	ip, r8
 8002418:	d8c5      	bhi.n	80023a6 <__gedf2+0x4a>
 800241a:	2000      	movs	r0, #0
 800241c:	45c4      	cmp	ip, r8
 800241e:	d2c6      	bcs.n	80023ae <__gedf2+0x52>
 8002420:	e7ed      	b.n	80023fe <__gedf2+0xa2>
 8002422:	46c0      	nop			; (mov r8, r8)
 8002424:	000007ff 	.word	0x000007ff

08002428 <__ledf2>:
 8002428:	b5f0      	push	{r4, r5, r6, r7, lr}
 800242a:	4647      	mov	r7, r8
 800242c:	46ce      	mov	lr, r9
 800242e:	0004      	movs	r4, r0
 8002430:	0018      	movs	r0, r3
 8002432:	0016      	movs	r6, r2
 8002434:	031b      	lsls	r3, r3, #12
 8002436:	0b1b      	lsrs	r3, r3, #12
 8002438:	4d2c      	ldr	r5, [pc, #176]	; (80024ec <__ledf2+0xc4>)
 800243a:	004a      	lsls	r2, r1, #1
 800243c:	4699      	mov	r9, r3
 800243e:	b580      	push	{r7, lr}
 8002440:	0043      	lsls	r3, r0, #1
 8002442:	030f      	lsls	r7, r1, #12
 8002444:	46a4      	mov	ip, r4
 8002446:	46b0      	mov	r8, r6
 8002448:	0b3f      	lsrs	r7, r7, #12
 800244a:	0d52      	lsrs	r2, r2, #21
 800244c:	0fc9      	lsrs	r1, r1, #31
 800244e:	0d5b      	lsrs	r3, r3, #21
 8002450:	0fc0      	lsrs	r0, r0, #31
 8002452:	42aa      	cmp	r2, r5
 8002454:	d00d      	beq.n	8002472 <__ledf2+0x4a>
 8002456:	42ab      	cmp	r3, r5
 8002458:	d010      	beq.n	800247c <__ledf2+0x54>
 800245a:	2a00      	cmp	r2, #0
 800245c:	d127      	bne.n	80024ae <__ledf2+0x86>
 800245e:	433c      	orrs	r4, r7
 8002460:	2b00      	cmp	r3, #0
 8002462:	d111      	bne.n	8002488 <__ledf2+0x60>
 8002464:	464d      	mov	r5, r9
 8002466:	432e      	orrs	r6, r5
 8002468:	d10e      	bne.n	8002488 <__ledf2+0x60>
 800246a:	2000      	movs	r0, #0
 800246c:	2c00      	cmp	r4, #0
 800246e:	d015      	beq.n	800249c <__ledf2+0x74>
 8002470:	e00e      	b.n	8002490 <__ledf2+0x68>
 8002472:	003d      	movs	r5, r7
 8002474:	4325      	orrs	r5, r4
 8002476:	d110      	bne.n	800249a <__ledf2+0x72>
 8002478:	4293      	cmp	r3, r2
 800247a:	d118      	bne.n	80024ae <__ledf2+0x86>
 800247c:	464d      	mov	r5, r9
 800247e:	432e      	orrs	r6, r5
 8002480:	d10b      	bne.n	800249a <__ledf2+0x72>
 8002482:	2a00      	cmp	r2, #0
 8002484:	d102      	bne.n	800248c <__ledf2+0x64>
 8002486:	433c      	orrs	r4, r7
 8002488:	2c00      	cmp	r4, #0
 800248a:	d00b      	beq.n	80024a4 <__ledf2+0x7c>
 800248c:	4281      	cmp	r1, r0
 800248e:	d014      	beq.n	80024ba <__ledf2+0x92>
 8002490:	2002      	movs	r0, #2
 8002492:	3901      	subs	r1, #1
 8002494:	4008      	ands	r0, r1
 8002496:	3801      	subs	r0, #1
 8002498:	e000      	b.n	800249c <__ledf2+0x74>
 800249a:	2002      	movs	r0, #2
 800249c:	bcc0      	pop	{r6, r7}
 800249e:	46b9      	mov	r9, r7
 80024a0:	46b0      	mov	r8, r6
 80024a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024a4:	2800      	cmp	r0, #0
 80024a6:	d1f9      	bne.n	800249c <__ledf2+0x74>
 80024a8:	2001      	movs	r0, #1
 80024aa:	4240      	negs	r0, r0
 80024ac:	e7f6      	b.n	800249c <__ledf2+0x74>
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d1ec      	bne.n	800248c <__ledf2+0x64>
 80024b2:	464c      	mov	r4, r9
 80024b4:	4326      	orrs	r6, r4
 80024b6:	d1e9      	bne.n	800248c <__ledf2+0x64>
 80024b8:	e7ea      	b.n	8002490 <__ledf2+0x68>
 80024ba:	429a      	cmp	r2, r3
 80024bc:	dd04      	ble.n	80024c8 <__ledf2+0xa0>
 80024be:	4243      	negs	r3, r0
 80024c0:	4158      	adcs	r0, r3
 80024c2:	0040      	lsls	r0, r0, #1
 80024c4:	3801      	subs	r0, #1
 80024c6:	e7e9      	b.n	800249c <__ledf2+0x74>
 80024c8:	429a      	cmp	r2, r3
 80024ca:	dbeb      	blt.n	80024a4 <__ledf2+0x7c>
 80024cc:	454f      	cmp	r7, r9
 80024ce:	d8df      	bhi.n	8002490 <__ledf2+0x68>
 80024d0:	d006      	beq.n	80024e0 <__ledf2+0xb8>
 80024d2:	2000      	movs	r0, #0
 80024d4:	454f      	cmp	r7, r9
 80024d6:	d2e1      	bcs.n	800249c <__ledf2+0x74>
 80024d8:	2900      	cmp	r1, #0
 80024da:	d0e5      	beq.n	80024a8 <__ledf2+0x80>
 80024dc:	0008      	movs	r0, r1
 80024de:	e7dd      	b.n	800249c <__ledf2+0x74>
 80024e0:	45c4      	cmp	ip, r8
 80024e2:	d8d5      	bhi.n	8002490 <__ledf2+0x68>
 80024e4:	2000      	movs	r0, #0
 80024e6:	45c4      	cmp	ip, r8
 80024e8:	d2d8      	bcs.n	800249c <__ledf2+0x74>
 80024ea:	e7f5      	b.n	80024d8 <__ledf2+0xb0>
 80024ec:	000007ff 	.word	0x000007ff

080024f0 <convertTempToPWM>:
#define DUTY_CYCLE_MAX            (0.9 * __HAL_TIM_GET_AUTORELOAD(&htim2))
#define DUTY_CYCLE_ERROR_UNDER_TEMP  (0.05 * __HAL_TIM_GET_AUTORELOAD(&htim2))   // if temperature read is outisde the min/max range,
#define DUTY_CYCLE_ERROR_OVER_TEMP   (0.95 * __HAL_TIM_GET_AUTORELOAD(&htim2))   // then indicate it using these error voltages
#define TEMP_TO_VOLTAGE_SLOPE     (DUTY_CYCLE_MAX - DUTY_CYCLE_MIN) / (TEMPERATURE_MAX - TEMPERATURE_MIN)
uint32_t convertTempToPWM(float temp) {
  uint32_t dutycycle = DUTY_CYCLE_ERROR_UNDER_TEMP;
 80024f0:	4b32      	ldr	r3, [pc, #200]	; (80025bc <convertTempToPWM+0xcc>)
uint32_t convertTempToPWM(float temp) {
 80024f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t dutycycle = DUTY_CYCLE_ERROR_UNDER_TEMP;
 80024f4:	681e      	ldr	r6, [r3, #0]
  int errorOccurred = 0;

  // check if temperature is in the range we need
  if (temp < TEMPERATURE_MIN || isnan(temp)) {
 80024f6:	4932      	ldr	r1, [pc, #200]	; (80025c0 <convertTempToPWM+0xd0>)
  uint32_t dutycycle = DUTY_CYCLE_ERROR_UNDER_TEMP;
 80024f8:	6af3      	ldr	r3, [r6, #44]	; 0x2c
uint32_t convertTempToPWM(float temp) {
 80024fa:	1c04      	adds	r4, r0, #0
  if (temp < TEMPERATURE_MIN || isnan(temp)) {
 80024fc:	f7fd fea2 	bl	8000244 <__aeabi_fcmplt>
 8002500:	2800      	cmp	r0, #0
 8002502:	d105      	bne.n	8002510 <convertTempToPWM+0x20>
 8002504:	1c21      	adds	r1, r4, #0
 8002506:	1c20      	adds	r0, r4, #0
 8002508:	f7fe f8ac 	bl	8000664 <__aeabi_fcmpun>
 800250c:	2800      	cmp	r0, #0
 800250e:	d009      	beq.n	8002524 <convertTempToPWM+0x34>
    dutycycle = DUTY_CYCLE_ERROR_UNDER_TEMP;
 8002510:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8002512:	f7ff fd85 	bl	8002020 <__aeabi_ui2d>
 8002516:	4a2b      	ldr	r2, [pc, #172]	; (80025c4 <convertTempToPWM+0xd4>)
 8002518:	4b2b      	ldr	r3, [pc, #172]	; (80025c8 <convertTempToPWM+0xd8>)
    errorOccurred = 1;
  }
  else if (temp > TEMPERATURE_MAX) {
    dutycycle = DUTY_CYCLE_ERROR_OVER_TEMP;
 800251a:	f7fe ff07 	bl	800132c <__aeabi_dmul>
	  dutycycle = TEMP_TO_VOLTAGE_SLOPE * (temp - TEMPERATURE_MIN);
  }

  // now convert to value to be written using analogWrite()
  if (errorOccurred == 0) {
	  dutycycle += DUTY_CYCLE_MIN;
 800251e:	f7fd ff07 	bl	8000330 <__aeabi_d2uiz>
  }

  return dutycycle;
}
 8002522:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  else if (temp > TEMPERATURE_MAX) {
 8002524:	4929      	ldr	r1, [pc, #164]	; (80025cc <convertTempToPWM+0xdc>)
 8002526:	1c20      	adds	r0, r4, #0
 8002528:	f7fd fea0 	bl	800026c <__aeabi_fcmpgt>
 800252c:	2800      	cmp	r0, #0
 800252e:	d005      	beq.n	800253c <convertTempToPWM+0x4c>
    dutycycle = DUTY_CYCLE_ERROR_OVER_TEMP;
 8002530:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8002532:	f7ff fd75 	bl	8002020 <__aeabi_ui2d>
 8002536:	4a26      	ldr	r2, [pc, #152]	; (80025d0 <convertTempToPWM+0xe0>)
 8002538:	4b26      	ldr	r3, [pc, #152]	; (80025d4 <convertTempToPWM+0xe4>)
 800253a:	e7ee      	b.n	800251a <convertTempToPWM+0x2a>
	  dutycycle = TEMP_TO_VOLTAGE_SLOPE * (temp - TEMPERATURE_MIN);
 800253c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 800253e:	6af5      	ldr	r5, [r6, #44]	; 0x2c
	  dutycycle += DUTY_CYCLE_MIN;
 8002540:	6af3      	ldr	r3, [r6, #44]	; 0x2c
 8002542:	9301      	str	r3, [sp, #4]
	  dutycycle = TEMP_TO_VOLTAGE_SLOPE * (temp - TEMPERATURE_MIN);
 8002544:	f7ff fd6c 	bl	8002020 <__aeabi_ui2d>
 8002548:	4a23      	ldr	r2, [pc, #140]	; (80025d8 <convertTempToPWM+0xe8>)
 800254a:	4b24      	ldr	r3, [pc, #144]	; (80025dc <convertTempToPWM+0xec>)
 800254c:	f7fe feee 	bl	800132c <__aeabi_dmul>
 8002550:	0006      	movs	r6, r0
 8002552:	0028      	movs	r0, r5
 8002554:	000f      	movs	r7, r1
 8002556:	f7ff fd63 	bl	8002020 <__aeabi_ui2d>
 800255a:	4a1a      	ldr	r2, [pc, #104]	; (80025c4 <convertTempToPWM+0xd4>)
 800255c:	4b20      	ldr	r3, [pc, #128]	; (80025e0 <convertTempToPWM+0xf0>)
 800255e:	f7fe fee5 	bl	800132c <__aeabi_dmul>
 8002562:	0002      	movs	r2, r0
 8002564:	000b      	movs	r3, r1
 8002566:	0030      	movs	r0, r6
 8002568:	0039      	movs	r1, r7
 800256a:	f7ff f9a1 	bl	80018b0 <__aeabi_dsub>
 800256e:	2200      	movs	r2, #0
 8002570:	4b1c      	ldr	r3, [pc, #112]	; (80025e4 <convertTempToPWM+0xf4>)
 8002572:	f7fe fbed 	bl	8000d50 <__aeabi_ddiv>
 8002576:	0006      	movs	r6, r0
 8002578:	1c20      	adds	r0, r4, #0
 800257a:	000f      	movs	r7, r1
 800257c:	f7ff fd76 	bl	800206c <__aeabi_f2d>
 8002580:	2200      	movs	r2, #0
 8002582:	4b19      	ldr	r3, [pc, #100]	; (80025e8 <convertTempToPWM+0xf8>)
 8002584:	f7fe f884 	bl	8000690 <__aeabi_dadd>
 8002588:	0002      	movs	r2, r0
 800258a:	000b      	movs	r3, r1
 800258c:	0030      	movs	r0, r6
 800258e:	0039      	movs	r1, r7
 8002590:	f7fe fecc 	bl	800132c <__aeabi_dmul>
 8002594:	f7fd fecc 	bl	8000330 <__aeabi_d2uiz>
	  dutycycle += DUTY_CYCLE_MIN;
 8002598:	f7ff fd42 	bl	8002020 <__aeabi_ui2d>
 800259c:	0004      	movs	r4, r0
 800259e:	9801      	ldr	r0, [sp, #4]
 80025a0:	000d      	movs	r5, r1
 80025a2:	f7ff fd3d 	bl	8002020 <__aeabi_ui2d>
 80025a6:	4a07      	ldr	r2, [pc, #28]	; (80025c4 <convertTempToPWM+0xd4>)
 80025a8:	4b0d      	ldr	r3, [pc, #52]	; (80025e0 <convertTempToPWM+0xf0>)
 80025aa:	f7fe febf 	bl	800132c <__aeabi_dmul>
 80025ae:	0002      	movs	r2, r0
 80025b0:	000b      	movs	r3, r1
 80025b2:	0020      	movs	r0, r4
 80025b4:	0029      	movs	r1, r5
 80025b6:	f7fe f86b 	bl	8000690 <__aeabi_dadd>
 80025ba:	e7b0      	b.n	800251e <convertTempToPWM+0x2e>
 80025bc:	20000088 	.word	0x20000088
 80025c0:	c2480000 	.word	0xc2480000
 80025c4:	9999999a 	.word	0x9999999a
 80025c8:	3fa99999 	.word	0x3fa99999
 80025cc:	42480000 	.word	0x42480000
 80025d0:	66666666 	.word	0x66666666
 80025d4:	3fee6666 	.word	0x3fee6666
 80025d8:	cccccccd 	.word	0xcccccccd
 80025dc:	3feccccc 	.word	0x3feccccc
 80025e0:	3fb99999 	.word	0x3fb99999
 80025e4:	40590000 	.word	0x40590000
 80025e8:	40490000 	.word	0x40490000

080025ec <Max31855_Read_Temp>:
//uint8_t DATATX = {0xFF, 0xFF, 0xFF, 0xFF};         	// Raw Data from MAX6675
float thermocoupleTemperature;

// ------------------- Functions ----------------
float Max31855_Read_Temp(void) {
	HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET); 	// Low State for SPI Communication
 80025ec:	20a0      	movs	r0, #160	; 0xa0
float Max31855_Read_Temp(void) {
 80025ee:	b510      	push	{r4, lr}
	HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET); 	// Low State for SPI Communication
 80025f0:	2200      	movs	r2, #0
 80025f2:	2110      	movs	r1, #16
 80025f4:	05c0      	lsls	r0, r0, #23
 80025f6:	f000 fb35 	bl	8002c64 <HAL_GPIO_WritePin>
	HAL_StatusTypeDef spiStatus = HAL_SPI_Receive(&hspi1, DATARX, 4, 1000);		// DATA Transfer
 80025fa:	23fa      	movs	r3, #250	; 0xfa
 80025fc:	4c18      	ldr	r4, [pc, #96]	; (8002660 <Max31855_Read_Temp+0x74>)
 80025fe:	009b      	lsls	r3, r3, #2
 8002600:	2204      	movs	r2, #4
 8002602:	0021      	movs	r1, r4
 8002604:	4817      	ldr	r0, [pc, #92]	; (8002664 <Max31855_Read_Temp+0x78>)
 8002606:	f001 f8a9 	bl	800375c <HAL_SPI_Receive>
	HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);   	// High State for SPI Communication
 800260a:	20a0      	movs	r0, #160	; 0xa0
 800260c:	2201      	movs	r2, #1
 800260e:	2110      	movs	r1, #16
 8002610:	05c0      	lsls	r0, r0, #23
 8002612:	f000 fb27 	bl	8002c64 <HAL_GPIO_WritePin>

	uint32_t v = DATARX[3] | (DATARX[2] << 8) | (DATARX[1] << 16) | (DATARX[0] << 24);
 8002616:	7863      	ldrb	r3, [r4, #1]
 8002618:	7822      	ldrb	r2, [r4, #0]
 800261a:	021b      	lsls	r3, r3, #8
 800261c:	4313      	orrs	r3, r2
 800261e:	78a2      	ldrb	r2, [r4, #2]

	Error = v & 0x07;								  	// Error Detection

	uint8_t errorCode = 0;
	if (v & 0x7) {
 8002620:	2107      	movs	r1, #7
 8002622:	0412      	lsls	r2, r2, #16
 8002624:	431a      	orrs	r2, r3
 8002626:	78e3      	ldrb	r3, [r4, #3]
 8002628:	061b      	lsls	r3, r3, #24
 800262a:	4313      	orrs	r3, r2
 800262c:	ba1b      	rev	r3, r3
 800262e:	0018      	movs	r0, r3
 8002630:	4a0d      	ldr	r2, [pc, #52]	; (8002668 <Max31855_Read_Temp+0x7c>)
 8002632:	4008      	ands	r0, r1
 8002634:	420b      	tst	r3, r1
 8002636:	d004      	beq.n	8002642 <Max31855_Read_Temp+0x56>
		}

		if (v & 0x4) {
			errorCode = 4; // short to vcc
		}
		Error = 1;
 8002638:	2301      	movs	r3, #1
 800263a:	7013      	strb	r3, [r2, #0]
		return thermocoupleTemperature;
 800263c:	4b0b      	ldr	r3, [pc, #44]	; (800266c <Max31855_Read_Temp+0x80>)
 800263e:	6818      	ldr	r0, [r3, #0]
	double centigrade = v;

	// LSB = 0.25 degrees C
	centigrade *= 0.25;
	return centigrade;
}
 8002640:	bd10      	pop	{r4, pc}
		Error = 0;
 8002642:	7010      	strb	r0, [r2, #0]
		v = 0xFFFFC000 | ((v >> 18) & 0x00003FFF);
 8002644:	0c98      	lsrs	r0, r3, #18
	if (v & 0x80000000) {
 8002646:	2b00      	cmp	r3, #0
 8002648:	da01      	bge.n	800264e <Max31855_Read_Temp+0x62>
		v = 0xFFFFC000 | ((v >> 18) & 0x00003FFF);
 800264a:	4b09      	ldr	r3, [pc, #36]	; (8002670 <Max31855_Read_Temp+0x84>)
 800264c:	4318      	orrs	r0, r3
	double centigrade = v;
 800264e:	f7ff fce7 	bl	8002020 <__aeabi_ui2d>
	centigrade *= 0.25;
 8002652:	2200      	movs	r2, #0
 8002654:	4b07      	ldr	r3, [pc, #28]	; (8002674 <Max31855_Read_Temp+0x88>)
 8002656:	f7fe fe69 	bl	800132c <__aeabi_dmul>
	return centigrade;
 800265a:	f7ff fd4f 	bl	80020fc <__aeabi_d2f>
 800265e:	e7ef      	b.n	8002640 <Max31855_Read_Temp+0x54>
 8002660:	20000028 	.word	0x20000028
 8002664:	20000030 	.word	0x20000030
 8002668:	2000002c 	.word	0x2000002c
 800266c:	200000cc 	.word	0x200000cc
 8002670:	ffffc000 	.word	0xffffc000
 8002674:	3fd00000 	.word	0x3fd00000

08002678 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002678:	b510      	push	{r4, lr}
 800267a:	b092      	sub	sp, #72	; 0x48
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800267c:	2220      	movs	r2, #32
 800267e:	2100      	movs	r1, #0
 8002680:	a806      	add	r0, sp, #24
 8002682:	f001 fb5b 	bl	8003d3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002686:	2214      	movs	r2, #20
 8002688:	2100      	movs	r1, #0
 800268a:	4668      	mov	r0, sp
 800268c:	f001 fb56 	bl	8003d3c <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002690:	4917      	ldr	r1, [pc, #92]	; (80026f0 <SystemClock_Config+0x78>)
 8002692:	4b18      	ldr	r3, [pc, #96]	; (80026f4 <SystemClock_Config+0x7c>)
 8002694:	680a      	ldr	r2, [r1, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002696:	2401      	movs	r4, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002698:	401a      	ands	r2, r3
 800269a:	2380      	movs	r3, #128	; 0x80
 800269c:	011b      	lsls	r3, r3, #4
 800269e:	4313      	orrs	r3, r2
 80026a0:	600b      	str	r3, [r1, #0]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80026a2:	2302      	movs	r3, #2
 80026a4:	9305      	str	r3, [sp, #20]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80026a6:	930e      	str	r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80026a8:	2300      	movs	r3, #0
 80026aa:	930f      	str	r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 80026ac:	2380      	movs	r3, #128	; 0x80
 80026ae:	02db      	lsls	r3, r3, #11
 80026b0:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 80026b2:	2380      	movs	r3, #128	; 0x80
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80026b4:	2210      	movs	r2, #16
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 80026b6:	03db      	lsls	r3, r3, #15
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80026b8:	a805      	add	r0, sp, #20
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80026ba:	9408      	str	r4, [sp, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80026bc:	9209      	str	r2, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 80026be:	9311      	str	r3, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80026c0:	f000 fb1e 	bl	8002d00 <HAL_RCC_OscConfig>
 80026c4:	2800      	cmp	r0, #0
 80026c6:	d001      	beq.n	80026cc <SystemClock_Config+0x54>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80026c8:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80026ca:	e7fe      	b.n	80026ca <SystemClock_Config+0x52>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80026cc:	230f      	movs	r3, #15
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80026ce:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80026d0:	9300      	str	r3, [sp, #0]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80026d2:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80026d4:	3b0c      	subs	r3, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80026d6:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80026d8:	0021      	movs	r1, r4
 80026da:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80026dc:	9301      	str	r3, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80026de:	f000 fd5d 	bl	800319c <HAL_RCC_ClockConfig>
 80026e2:	2800      	cmp	r0, #0
 80026e4:	d001      	beq.n	80026ea <SystemClock_Config+0x72>
 80026e6:	b672      	cpsid	i
  while (1)
 80026e8:	e7fe      	b.n	80026e8 <SystemClock_Config+0x70>
}
 80026ea:	b012      	add	sp, #72	; 0x48
 80026ec:	bd10      	pop	{r4, pc}
 80026ee:	46c0      	nop			; (mov r8, r8)
 80026f0:	40007000 	.word	0x40007000
 80026f4:	ffffe7ff 	.word	0xffffe7ff

080026f8 <main>:
{
 80026f8:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80026fa:	2401      	movs	r4, #1
{
 80026fc:	b08d      	sub	sp, #52	; 0x34
  HAL_Init();
 80026fe:	f000 f999 	bl	8002a34 <HAL_Init>
  SystemClock_Config();
 8002702:	f7ff ffb9 	bl	8002678 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002706:	2214      	movs	r2, #20
 8002708:	2100      	movs	r1, #0
 800270a:	a807      	add	r0, sp, #28
 800270c:	f001 fb16 	bl	8003d3c <memset>
  HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);
 8002710:	20a0      	movs	r0, #160	; 0xa0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002712:	4b53      	ldr	r3, [pc, #332]	; (8002860 <main+0x168>)
  HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);
 8002714:	2110      	movs	r1, #16
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002716:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);
 8002718:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800271a:	4322      	orrs	r2, r4
 800271c:	62da      	str	r2, [r3, #44]	; 0x2c
 800271e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);
 8002720:	0022      	movs	r2, r4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002722:	4023      	ands	r3, r4
 8002724:	9300      	str	r3, [sp, #0]
 8002726:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_SET);
 8002728:	f000 fa9c 	bl	8002c64 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 800272c:	2180      	movs	r1, #128	; 0x80
 800272e:	20a0      	movs	r0, #160	; 0xa0
 8002730:	0022      	movs	r2, r4
 8002732:	00c9      	lsls	r1, r1, #3
 8002734:	05c0      	lsls	r0, r0, #23
 8002736:	f000 fa95 	bl	8002c64 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = CS_Pin|LED_Pin;
 800273a:	2382      	movs	r3, #130	; 0x82
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800273c:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800273e:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002740:	2400      	movs	r4, #0
  GPIO_InitStruct.Pin = CS_Pin|LED_Pin;
 8002742:	00db      	lsls	r3, r3, #3
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002744:	a907      	add	r1, sp, #28
 8002746:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = CS_Pin|LED_Pin;
 8002748:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800274a:	9409      	str	r4, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800274c:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800274e:	f000 f9db 	bl	8002b08 <HAL_GPIO_Init>
  hspi1.Instance = SPI1;
 8002752:	4844      	ldr	r0, [pc, #272]	; (8002864 <main+0x16c>)
 8002754:	4b44      	ldr	r3, [pc, #272]	; (8002868 <main+0x170>)
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002756:	6084      	str	r4, [r0, #8]
  hspi1.Instance = SPI1;
 8002758:	6003      	str	r3, [r0, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800275a:	2382      	movs	r3, #130	; 0x82
 800275c:	005b      	lsls	r3, r3, #1
 800275e:	6043      	str	r3, [r0, #4]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002760:	33fc      	adds	r3, #252	; 0xfc
 8002762:	6183      	str	r3, [r0, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8002764:	3be9      	subs	r3, #233	; 0xe9
 8002766:	3bff      	subs	r3, #255	; 0xff
 8002768:	61c3      	str	r3, [r0, #28]
  hspi1.Init.CRCPolynomial = 7;
 800276a:	3b11      	subs	r3, #17
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800276c:	60c4      	str	r4, [r0, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800276e:	6104      	str	r4, [r0, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002770:	6144      	str	r4, [r0, #20]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002772:	6204      	str	r4, [r0, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002774:	6244      	str	r4, [r0, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002776:	6284      	str	r4, [r0, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 7;
 8002778:	62c3      	str	r3, [r0, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800277a:	f000 fe95 	bl	80034a8 <HAL_SPI_Init>
 800277e:	0005      	movs	r5, r0
 8002780:	42a0      	cmp	r0, r4
 8002782:	d001      	beq.n	8002788 <main+0x90>
 8002784:	b672      	cpsid	i
  while (1)
 8002786:	e7fe      	b.n	8002786 <main+0x8e>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002788:	0001      	movs	r1, r0
 800278a:	2210      	movs	r2, #16
 800278c:	a803      	add	r0, sp, #12
 800278e:	f001 fad5 	bl	8003d3c <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002792:	2208      	movs	r2, #8
 8002794:	0029      	movs	r1, r5
 8002796:	a801      	add	r0, sp, #4
 8002798:	f001 fad0 	bl	8003d3c <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 800279c:	2210      	movs	r2, #16
 800279e:	0029      	movs	r1, r5
 80027a0:	a807      	add	r0, sp, #28
 80027a2:	f001 facb 	bl	8003d3c <memset>
  htim2.Instance = TIM2;
 80027a6:	2380      	movs	r3, #128	; 0x80
 80027a8:	4c30      	ldr	r4, [pc, #192]	; (800286c <main+0x174>)
 80027aa:	05db      	lsls	r3, r3, #23
 80027ac:	6023      	str	r3, [r4, #0]
  htim2.Init.Period = 33;
 80027ae:	2321      	movs	r3, #33	; 0x21
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80027b0:	0020      	movs	r0, r4
  htim2.Init.Period = 33;
 80027b2:	60e3      	str	r3, [r4, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80027b4:	335f      	adds	r3, #95	; 0x5f
  htim2.Init.Prescaler = 0;
 80027b6:	6065      	str	r5, [r4, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027b8:	60a5      	str	r5, [r4, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80027ba:	6125      	str	r5, [r4, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80027bc:	6163      	str	r3, [r4, #20]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80027be:	f001 f8da 	bl	8003976 <HAL_TIM_Base_Init>
 80027c2:	2800      	cmp	r0, #0
 80027c4:	d001      	beq.n	80027ca <main+0xd2>
 80027c6:	b672      	cpsid	i
  while (1)
 80027c8:	e7fe      	b.n	80027c8 <main+0xd0>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80027ca:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80027cc:	0020      	movs	r0, r4
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80027ce:	015b      	lsls	r3, r3, #5
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80027d0:	a903      	add	r1, sp, #12
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80027d2:	9303      	str	r3, [sp, #12]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80027d4:	f001 f9e4 	bl	8003ba0 <HAL_TIM_ConfigClockSource>
 80027d8:	2800      	cmp	r0, #0
 80027da:	d001      	beq.n	80027e0 <main+0xe8>
 80027dc:	b672      	cpsid	i
  while (1)
 80027de:	e7fe      	b.n	80027de <main+0xe6>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80027e0:	0020      	movs	r0, r4
 80027e2:	f001 f924 	bl	8003a2e <HAL_TIM_PWM_Init>
 80027e6:	2800      	cmp	r0, #0
 80027e8:	d001      	beq.n	80027ee <main+0xf6>
 80027ea:	b672      	cpsid	i
  while (1)
 80027ec:	e7fe      	b.n	80027ec <main+0xf4>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80027ee:	9001      	str	r0, [sp, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80027f0:	9002      	str	r0, [sp, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80027f2:	a901      	add	r1, sp, #4
 80027f4:	0020      	movs	r0, r4
 80027f6:	f001 fa79 	bl	8003cec <HAL_TIMEx_MasterConfigSynchronization>
 80027fa:	2800      	cmp	r0, #0
 80027fc:	d001      	beq.n	8002802 <main+0x10a>
 80027fe:	b672      	cpsid	i
  while (1)
 8002800:	e7fe      	b.n	8002800 <main+0x108>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002802:	2360      	movs	r3, #96	; 0x60
  sConfigOC.Pulse = 0;
 8002804:	9008      	str	r0, [sp, #32]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002806:	9009      	str	r0, [sp, #36]	; 0x24
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002808:	900a      	str	r0, [sp, #40]	; 0x28
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800280a:	220c      	movs	r2, #12
 800280c:	0020      	movs	r0, r4
 800280e:	a907      	add	r1, sp, #28
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002810:	9307      	str	r3, [sp, #28]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002812:	f001 f935 	bl	8003a80 <HAL_TIM_PWM_ConfigChannel>
 8002816:	2800      	cmp	r0, #0
 8002818:	d001      	beq.n	800281e <main+0x126>
 800281a:	b672      	cpsid	i
  while (1)
 800281c:	e7fe      	b.n	800281c <main+0x124>
  HAL_TIM_MspPostInit(&htim2);
 800281e:	0020      	movs	r0, r4
 8002820:	f000 f874 	bl	800290c <HAL_TIM_MspPostInit>
		  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 8002824:	2580      	movs	r5, #128	; 0x80
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 8002826:	210c      	movs	r1, #12
 8002828:	0020      	movs	r0, r4
		  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 800282a:	26a0      	movs	r6, #160	; 0xa0
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 800282c:	f001 f923 	bl	8003a76 <HAL_TIM_PWM_Start>
		  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 8002830:	00ed      	lsls	r5, r5, #3
 8002832:	05f6      	lsls	r6, r6, #23
	  thermocoupleTemperature = Max31855_Read_Temp();
 8002834:	f7ff feda 	bl	80025ec <Max31855_Read_Temp>
 8002838:	4b0d      	ldr	r3, [pc, #52]	; (8002870 <main+0x178>)
 800283a:	6018      	str	r0, [r3, #0]
	  pwmDutyCycle = (uint32_t)convertTempToPWM(thermocoupleTemperature);
 800283c:	f7ff fe58 	bl	80024f0 <convertTempToPWM>
	  if (Error==1) {
 8002840:	4b0c      	ldr	r3, [pc, #48]	; (8002874 <main+0x17c>)
	  pwmDutyCycle = (uint32_t)convertTempToPWM(thermocoupleTemperature);
 8002842:	4f0d      	ldr	r7, [pc, #52]	; (8002878 <main+0x180>)
	  if (Error==1) {
 8002844:	781b      	ldrb	r3, [r3, #0]
		  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8002846:	2200      	movs	r2, #0
	  pwmDutyCycle = (uint32_t)convertTempToPWM(thermocoupleTemperature);
 8002848:	6038      	str	r0, [r7, #0]
	  if (Error==1) {
 800284a:	2b01      	cmp	r3, #1
 800284c:	d000      	beq.n	8002850 <main+0x158>
		  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 800284e:	2201      	movs	r2, #1
 8002850:	0029      	movs	r1, r5
 8002852:	0030      	movs	r0, r6
 8002854:	f000 fa06 	bl	8002c64 <HAL_GPIO_WritePin>
	  __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_4, pwmDutyCycle);
 8002858:	6823      	ldr	r3, [r4, #0]
 800285a:	683a      	ldr	r2, [r7, #0]
 800285c:	641a      	str	r2, [r3, #64]	; 0x40
  {
 800285e:	e7e9      	b.n	8002834 <main+0x13c>
 8002860:	40021000 	.word	0x40021000
 8002864:	20000030 	.word	0x20000030
 8002868:	40013000 	.word	0x40013000
 800286c:	20000088 	.word	0x20000088
 8002870:	200000cc 	.word	0x200000cc
 8002874:	2000002c 	.word	0x2000002c
 8002878:	200000c8 	.word	0x200000c8

0800287c <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800287c:	2201      	movs	r2, #1
 800287e:	4b05      	ldr	r3, [pc, #20]	; (8002894 <HAL_MspInit+0x18>)
 8002880:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002882:	430a      	orrs	r2, r1
 8002884:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8002886:	2280      	movs	r2, #128	; 0x80
 8002888:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800288a:	0552      	lsls	r2, r2, #21
 800288c:	430a      	orrs	r2, r1
 800288e:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002890:	4770      	bx	lr
 8002892:	46c0      	nop			; (mov r8, r8)
 8002894:	40021000 	.word	0x40021000

08002898 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002898:	b510      	push	{r4, lr}
 800289a:	0004      	movs	r4, r0
 800289c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800289e:	2214      	movs	r2, #20
 80028a0:	2100      	movs	r1, #0
 80028a2:	a801      	add	r0, sp, #4
 80028a4:	f001 fa4a 	bl	8003d3c <memset>
  if(hspi->Instance==SPI1)
 80028a8:	4b0f      	ldr	r3, [pc, #60]	; (80028e8 <HAL_SPI_MspInit+0x50>)
 80028aa:	6822      	ldr	r2, [r4, #0]
 80028ac:	429a      	cmp	r2, r3
 80028ae:	d118      	bne.n	80028e2 <HAL_SPI_MspInit+0x4a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80028b0:	2280      	movs	r2, #128	; 0x80
 80028b2:	4b0e      	ldr	r3, [pc, #56]	; (80028ec <HAL_SPI_MspInit+0x54>)
 80028b4:	0152      	lsls	r2, r2, #5
 80028b6:	6b59      	ldr	r1, [r3, #52]	; 0x34
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028b8:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_SPI1_CLK_ENABLE();
 80028ba:	430a      	orrs	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028bc:	2101      	movs	r1, #1
    __HAL_RCC_SPI1_CLK_ENABLE();
 80028be:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028c2:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028c4:	430a      	orrs	r2, r1
 80028c6:	62da      	str	r2, [r3, #44]	; 0x2c
 80028c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028ca:	400b      	ands	r3, r1
 80028cc:	9300      	str	r3, [sp, #0]
 80028ce:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 80028d0:	23e0      	movs	r3, #224	; 0xe0
 80028d2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028d4:	3bde      	subs	r3, #222	; 0xde
 80028d6:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80028d8:	185b      	adds	r3, r3, r1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028da:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80028dc:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028de:	f000 f913 	bl	8002b08 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 80028e2:	b006      	add	sp, #24
 80028e4:	bd10      	pop	{r4, pc}
 80028e6:	46c0      	nop			; (mov r8, r8)
 80028e8:	40013000 	.word	0x40013000
 80028ec:	40021000 	.word	0x40021000

080028f0 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 80028f0:	2380      	movs	r3, #128	; 0x80
 80028f2:	6802      	ldr	r2, [r0, #0]
 80028f4:	05db      	lsls	r3, r3, #23
 80028f6:	429a      	cmp	r2, r3
 80028f8:	d104      	bne.n	8002904 <HAL_TIM_Base_MspInit+0x14>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80028fa:	2301      	movs	r3, #1
 80028fc:	4a02      	ldr	r2, [pc, #8]	; (8002908 <HAL_TIM_Base_MspInit+0x18>)
 80028fe:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8002900:	430b      	orrs	r3, r1
 8002902:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8002904:	4770      	bx	lr
 8002906:	46c0      	nop			; (mov r8, r8)
 8002908:	40021000 	.word	0x40021000

0800290c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800290c:	b510      	push	{r4, lr}
 800290e:	0004      	movs	r4, r0
 8002910:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002912:	2214      	movs	r2, #20
 8002914:	2100      	movs	r1, #0
 8002916:	a801      	add	r0, sp, #4
 8002918:	f001 fa10 	bl	8003d3c <memset>
  if(htim->Instance==TIM2)
 800291c:	2380      	movs	r3, #128	; 0x80
 800291e:	6822      	ldr	r2, [r4, #0]
 8002920:	05db      	lsls	r3, r3, #23
 8002922:	429a      	cmp	r2, r3
 8002924:	d112      	bne.n	800294c <HAL_TIM_MspPostInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002926:	2101      	movs	r1, #1
 8002928:	4b09      	ldr	r3, [pc, #36]	; (8002950 <HAL_TIM_MspPostInit+0x44>)
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800292a:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800292c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800292e:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002930:	430a      	orrs	r2, r1
 8002932:	62da      	str	r2, [r3, #44]	; 0x2c
 8002934:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002936:	400b      	ands	r3, r1
 8002938:	9300      	str	r3, [sp, #0]
 800293a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800293c:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800293e:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002940:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002942:	3b06      	subs	r3, #6
 8002944:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 8002946:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002948:	f000 f8de 	bl	8002b08 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 800294c:	b006      	add	sp, #24
 800294e:	bd10      	pop	{r4, pc}
 8002950:	40021000 	.word	0x40021000

08002954 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002954:	e7fe      	b.n	8002954 <NMI_Handler>

08002956 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002956:	e7fe      	b.n	8002956 <HardFault_Handler>

08002958 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002958:	4770      	bx	lr

0800295a <PendSV_Handler>:
 800295a:	4770      	bx	lr

0800295c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800295c:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800295e:	f000 f87d 	bl	8002a5c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002962:	bd10      	pop	{r4, pc}

08002964 <SystemInit>:
{
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002964:	4770      	bx	lr
	...

08002968 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8002968:	4813      	ldr	r0, [pc, #76]	; (80029b8 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 800296a:	4685      	mov	sp, r0
   
/* Call the clock system initialization function.*/
  bl  SystemInit
 800296c:	f7ff fffa 	bl	8002964 <SystemInit>

/*Check if boot space corresponds to system memory*/

    LDR R0,=0x00000004
 8002970:	4812      	ldr	r0, [pc, #72]	; (80029bc <LoopForever+0x6>)
    LDR R1, [R0]
 8002972:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 8002974:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 8002976:	4a12      	ldr	r2, [pc, #72]	; (80029c0 <LoopForever+0xa>)
    CMP R1, R2
 8002978:	4291      	cmp	r1, r2
    BNE ApplicationStart
 800297a:	d105      	bne.n	8002988 <ApplicationStart>

 /*SYSCFG clock enable*/
    LDR R0,=0x40021034
 800297c:	4811      	ldr	r0, [pc, #68]	; (80029c4 <LoopForever+0xe>)
    LDR R1,=0x00000001
 800297e:	4912      	ldr	r1, [pc, #72]	; (80029c8 <LoopForever+0x12>)
    STR R1, [R0]
 8002980:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 8002982:	4812      	ldr	r0, [pc, #72]	; (80029cc <LoopForever+0x16>)
    LDR R1,=0x00000000
 8002984:	4912      	ldr	r1, [pc, #72]	; (80029d0 <LoopForever+0x1a>)
    STR R1, [R0]
 8002986:	6001      	str	r1, [r0, #0]

08002988 <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002988:	4812      	ldr	r0, [pc, #72]	; (80029d4 <LoopForever+0x1e>)
  ldr r1, =_edata
 800298a:	4913      	ldr	r1, [pc, #76]	; (80029d8 <LoopForever+0x22>)
  ldr r2, =_sidata
 800298c:	4a13      	ldr	r2, [pc, #76]	; (80029dc <LoopForever+0x26>)
  movs r3, #0
 800298e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002990:	e002      	b.n	8002998 <LoopCopyDataInit>

08002992 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002992:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002994:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002996:	3304      	adds	r3, #4

08002998 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002998:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800299a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800299c:	d3f9      	bcc.n	8002992 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800299e:	4a10      	ldr	r2, [pc, #64]	; (80029e0 <LoopForever+0x2a>)
  ldr r4, =_ebss
 80029a0:	4c10      	ldr	r4, [pc, #64]	; (80029e4 <LoopForever+0x2e>)
  movs r3, #0
 80029a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80029a4:	e001      	b.n	80029aa <LoopFillZerobss>

080029a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80029a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80029a8:	3204      	adds	r2, #4

080029aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80029aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80029ac:	d3fb      	bcc.n	80029a6 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80029ae:	f001 f9cd 	bl	8003d4c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80029b2:	f7ff fea1 	bl	80026f8 <main>

080029b6 <LoopForever>:

LoopForever:
    b LoopForever
 80029b6:	e7fe      	b.n	80029b6 <LoopForever>
   ldr   r0, =_estack
 80029b8:	20000800 	.word	0x20000800
    LDR R0,=0x00000004
 80029bc:	00000004 	.word	0x00000004
    LDR R2,=0x1F
 80029c0:	0000001f 	.word	0x0000001f
    LDR R0,=0x40021034
 80029c4:	40021034 	.word	0x40021034
    LDR R1,=0x00000001
 80029c8:	00000001 	.word	0x00000001
    LDR R0,=0x40010000
 80029cc:	40010000 	.word	0x40010000
    LDR R1,=0x00000000
 80029d0:	00000000 	.word	0x00000000
  ldr r0, =_sdata
 80029d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80029d8:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 80029dc:	08003e18 	.word	0x08003e18
  ldr r2, =_sbss
 80029e0:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 80029e4:	200000d4 	.word	0x200000d4

080029e8 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80029e8:	e7fe      	b.n	80029e8 <ADC1_IRQHandler>
	...

080029ec <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80029ec:	b570      	push	{r4, r5, r6, lr}
 80029ee:	0005      	movs	r5, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80029f0:	20fa      	movs	r0, #250	; 0xfa
 80029f2:	4b0d      	ldr	r3, [pc, #52]	; (8002a28 <HAL_InitTick+0x3c>)
 80029f4:	0080      	lsls	r0, r0, #2
 80029f6:	7819      	ldrb	r1, [r3, #0]
 80029f8:	f7fd fb86 	bl	8000108 <__udivsi3>
 80029fc:	4c0b      	ldr	r4, [pc, #44]	; (8002a2c <HAL_InitTick+0x40>)
 80029fe:	0001      	movs	r1, r0
 8002a00:	6820      	ldr	r0, [r4, #0]
 8002a02:	f7fd fb81 	bl	8000108 <__udivsi3>
 8002a06:	f000 f865 	bl	8002ad4 <HAL_SYSTICK_Config>
 8002a0a:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8002a0c:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002a0e:	2c00      	cmp	r4, #0
 8002a10:	d109      	bne.n	8002a26 <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002a12:	2d03      	cmp	r5, #3
 8002a14:	d807      	bhi.n	8002a26 <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002a16:	3802      	subs	r0, #2
 8002a18:	0022      	movs	r2, r4
 8002a1a:	0029      	movs	r1, r5
 8002a1c:	f000 f830 	bl	8002a80 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002a20:	0020      	movs	r0, r4
 8002a22:	4b03      	ldr	r3, [pc, #12]	; (8002a30 <HAL_InitTick+0x44>)
 8002a24:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 8002a26:	bd70      	pop	{r4, r5, r6, pc}
 8002a28:	20000004 	.word	0x20000004
 8002a2c:	20000000 	.word	0x20000000
 8002a30:	20000008 	.word	0x20000008

08002a34 <HAL_Init>:
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8002a34:	2340      	movs	r3, #64	; 0x40
 8002a36:	4a08      	ldr	r2, [pc, #32]	; (8002a58 <HAL_Init+0x24>)
{
 8002a38:	b510      	push	{r4, lr}
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8002a3a:	6811      	ldr	r1, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002a3c:	2003      	movs	r0, #3
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8002a3e:	430b      	orrs	r3, r1
 8002a40:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002a42:	f7ff ffd3 	bl	80029ec <HAL_InitTick>
 8002a46:	1e04      	subs	r4, r0, #0
 8002a48:	d103      	bne.n	8002a52 <HAL_Init+0x1e>
    HAL_MspInit();
 8002a4a:	f7ff ff17 	bl	800287c <HAL_MspInit>
}
 8002a4e:	0020      	movs	r0, r4
 8002a50:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8002a52:	2401      	movs	r4, #1
 8002a54:	e7fb      	b.n	8002a4e <HAL_Init+0x1a>
 8002a56:	46c0      	nop			; (mov r8, r8)
 8002a58:	40022000 	.word	0x40022000

08002a5c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002a5c:	4a03      	ldr	r2, [pc, #12]	; (8002a6c <HAL_IncTick+0x10>)
 8002a5e:	4b04      	ldr	r3, [pc, #16]	; (8002a70 <HAL_IncTick+0x14>)
 8002a60:	6811      	ldr	r1, [r2, #0]
 8002a62:	781b      	ldrb	r3, [r3, #0]
 8002a64:	185b      	adds	r3, r3, r1
 8002a66:	6013      	str	r3, [r2, #0]
}
 8002a68:	4770      	bx	lr
 8002a6a:	46c0      	nop			; (mov r8, r8)
 8002a6c:	200000d0 	.word	0x200000d0
 8002a70:	20000004 	.word	0x20000004

08002a74 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002a74:	4b01      	ldr	r3, [pc, #4]	; (8002a7c <HAL_GetTick+0x8>)
 8002a76:	6818      	ldr	r0, [r3, #0]
}
 8002a78:	4770      	bx	lr
 8002a7a:	46c0      	nop			; (mov r8, r8)
 8002a7c:	200000d0 	.word	0x200000d0

08002a80 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002a80:	b530      	push	{r4, r5, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a82:	25ff      	movs	r5, #255	; 0xff
 8002a84:	2403      	movs	r4, #3
 8002a86:	002a      	movs	r2, r5
 8002a88:	4004      	ands	r4, r0
 8002a8a:	00e4      	lsls	r4, r4, #3
 8002a8c:	40a2      	lsls	r2, r4
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002a8e:	0189      	lsls	r1, r1, #6
 8002a90:	4029      	ands	r1, r5
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a92:	43d2      	mvns	r2, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002a94:	40a1      	lsls	r1, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a96:	b2c3      	uxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
 8002a98:	2800      	cmp	r0, #0
 8002a9a:	db0a      	blt.n	8002ab2 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a9c:	24c0      	movs	r4, #192	; 0xc0
 8002a9e:	4b0b      	ldr	r3, [pc, #44]	; (8002acc <HAL_NVIC_SetPriority+0x4c>)
 8002aa0:	0880      	lsrs	r0, r0, #2
 8002aa2:	0080      	lsls	r0, r0, #2
 8002aa4:	18c0      	adds	r0, r0, r3
 8002aa6:	00a4      	lsls	r4, r4, #2
 8002aa8:	5903      	ldr	r3, [r0, r4]
 8002aaa:	4013      	ands	r3, r2
 8002aac:	430b      	orrs	r3, r1
 8002aae:	5103      	str	r3, [r0, r4]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
}
 8002ab0:	bd30      	pop	{r4, r5, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ab2:	200f      	movs	r0, #15
 8002ab4:	4003      	ands	r3, r0
 8002ab6:	3b08      	subs	r3, #8
 8002ab8:	4805      	ldr	r0, [pc, #20]	; (8002ad0 <HAL_NVIC_SetPriority+0x50>)
 8002aba:	089b      	lsrs	r3, r3, #2
 8002abc:	009b      	lsls	r3, r3, #2
 8002abe:	181b      	adds	r3, r3, r0
 8002ac0:	69d8      	ldr	r0, [r3, #28]
 8002ac2:	4002      	ands	r2, r0
 8002ac4:	430a      	orrs	r2, r1
 8002ac6:	61da      	str	r2, [r3, #28]
 8002ac8:	e7f2      	b.n	8002ab0 <HAL_NVIC_SetPriority+0x30>
 8002aca:	46c0      	nop			; (mov r8, r8)
 8002acc:	e000e100 	.word	0xe000e100
 8002ad0:	e000ed00 	.word	0xe000ed00

08002ad4 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002ad4:	2280      	movs	r2, #128	; 0x80
 8002ad6:	1e43      	subs	r3, r0, #1
 8002ad8:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8002ada:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002adc:	4293      	cmp	r3, r2
 8002ade:	d20d      	bcs.n	8002afc <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ae0:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002ae2:	4a07      	ldr	r2, [pc, #28]	; (8002b00 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ae4:	4807      	ldr	r0, [pc, #28]	; (8002b04 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002ae6:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ae8:	6a03      	ldr	r3, [r0, #32]
 8002aea:	0609      	lsls	r1, r1, #24
 8002aec:	021b      	lsls	r3, r3, #8
 8002aee:	0a1b      	lsrs	r3, r3, #8
 8002af0:	430b      	orrs	r3, r1
 8002af2:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002af4:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002af6:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002af8:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002afa:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8002afc:	4770      	bx	lr
 8002afe:	46c0      	nop			; (mov r8, r8)
 8002b00:	e000e010 	.word	0xe000e010
 8002b04:	e000ed00 	.word	0xe000ed00

08002b08 <HAL_GPIO_Init>:
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00U;
 8002b08:	2300      	movs	r3, #0
{
 8002b0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b0c:	b085      	sub	sp, #20
  /* Check the parameters */
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 8002b0e:	680a      	ldr	r2, [r1, #0]
 8002b10:	0014      	movs	r4, r2
 8002b12:	40dc      	lsrs	r4, r3
 8002b14:	d101      	bne.n	8002b1a <HAL_GPIO_Init+0x12>
        EXTI->IMR = temp;
      }
    }
    position++;
  }
}
 8002b16:	b005      	add	sp, #20
 8002b18:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 8002b1a:	2501      	movs	r5, #1
 8002b1c:	0014      	movs	r4, r2
 8002b1e:	409d      	lsls	r5, r3
 8002b20:	402c      	ands	r4, r5
 8002b22:	9400      	str	r4, [sp, #0]
    if (iocurrent)
 8002b24:	422a      	tst	r2, r5
 8002b26:	d100      	bne.n	8002b2a <HAL_GPIO_Init+0x22>
 8002b28:	e090      	b.n	8002c4c <HAL_GPIO_Init+0x144>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002b2a:	684a      	ldr	r2, [r1, #4]
 8002b2c:	005f      	lsls	r7, r3, #1
 8002b2e:	4694      	mov	ip, r2
 8002b30:	2203      	movs	r2, #3
 8002b32:	4664      	mov	r4, ip
 8002b34:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8002b36:	2403      	movs	r4, #3
 8002b38:	40bc      	lsls	r4, r7
 8002b3a:	43e4      	mvns	r4, r4
 8002b3c:	9401      	str	r4, [sp, #4]
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002b3e:	1e54      	subs	r4, r2, #1
 8002b40:	2c01      	cmp	r4, #1
 8002b42:	d82e      	bhi.n	8002ba2 <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 8002b44:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8002b46:	9c01      	ldr	r4, [sp, #4]
 8002b48:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002b4a:	68cc      	ldr	r4, [r1, #12]
 8002b4c:	40bc      	lsls	r4, r7
 8002b4e:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 8002b50:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 8002b52:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002b54:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002b56:	43ac      	bics	r4, r5
 8002b58:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002b5a:	4664      	mov	r4, ip
 8002b5c:	0924      	lsrs	r4, r4, #4
 8002b5e:	4034      	ands	r4, r6
 8002b60:	409c      	lsls	r4, r3
 8002b62:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8002b64:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8002b66:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8002b68:	9c01      	ldr	r4, [sp, #4]
 8002b6a:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002b6c:	688c      	ldr	r4, [r1, #8]
 8002b6e:	40bc      	lsls	r4, r7
 8002b70:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 8002b72:	60c4      	str	r4, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002b74:	2a02      	cmp	r2, #2
 8002b76:	d116      	bne.n	8002ba6 <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 8002b78:	2507      	movs	r5, #7
 8002b7a:	260f      	movs	r6, #15
 8002b7c:	401d      	ands	r5, r3
 8002b7e:	00ad      	lsls	r5, r5, #2
 8002b80:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3U];
 8002b82:	08dc      	lsrs	r4, r3, #3
 8002b84:	00a4      	lsls	r4, r4, #2
 8002b86:	1904      	adds	r4, r0, r4
 8002b88:	9402      	str	r4, [sp, #8]
 8002b8a:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 8002b8c:	9603      	str	r6, [sp, #12]
 8002b8e:	0026      	movs	r6, r4
 8002b90:	9c03      	ldr	r4, [sp, #12]
 8002b92:	43a6      	bics	r6, r4
 8002b94:	0034      	movs	r4, r6
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 8002b96:	690e      	ldr	r6, [r1, #16]
 8002b98:	40ae      	lsls	r6, r5
 8002b9a:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3U] = temp;
 8002b9c:	9c02      	ldr	r4, [sp, #8]
 8002b9e:	6226      	str	r6, [r4, #32]
 8002ba0:	e001      	b.n	8002ba6 <HAL_GPIO_Init+0x9e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002ba2:	2a03      	cmp	r2, #3
 8002ba4:	d1df      	bne.n	8002b66 <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002ba6:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8002ba8:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8002baa:	9d01      	ldr	r5, [sp, #4]
 8002bac:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002bae:	432a      	orrs	r2, r5
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002bb0:	24c0      	movs	r4, #192	; 0xc0
      GPIOx->MODER = temp;
 8002bb2:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002bb4:	4662      	mov	r2, ip
 8002bb6:	02a4      	lsls	r4, r4, #10
 8002bb8:	4222      	tst	r2, r4
 8002bba:	d047      	beq.n	8002c4c <HAL_GPIO_Init+0x144>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002bbc:	2501      	movs	r5, #1
 8002bbe:	4c24      	ldr	r4, [pc, #144]	; (8002c50 <HAL_GPIO_Init+0x148>)
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002bc0:	27a0      	movs	r7, #160	; 0xa0
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002bc2:	6b62      	ldr	r2, [r4, #52]	; 0x34
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002bc4:	05ff      	lsls	r7, r7, #23
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002bc6:	432a      	orrs	r2, r5
 8002bc8:	6362      	str	r2, [r4, #52]	; 0x34
        temp = SYSCFG->EXTICR[position >> 2U];
 8002bca:	4a22      	ldr	r2, [pc, #136]	; (8002c54 <HAL_GPIO_Init+0x14c>)
 8002bcc:	089c      	lsrs	r4, r3, #2
 8002bce:	00a4      	lsls	r4, r4, #2
 8002bd0:	18a4      	adds	r4, r4, r2
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 8002bd2:	220f      	movs	r2, #15
 8002bd4:	3502      	adds	r5, #2
 8002bd6:	401d      	ands	r5, r3
 8002bd8:	00ad      	lsls	r5, r5, #2
 8002bda:	40aa      	lsls	r2, r5
        temp = SYSCFG->EXTICR[position >> 2U];
 8002bdc:	68a6      	ldr	r6, [r4, #8]
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 8002bde:	4396      	bics	r6, r2
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002be0:	2200      	movs	r2, #0
 8002be2:	42b8      	cmp	r0, r7
 8002be4:	d008      	beq.n	8002bf8 <HAL_GPIO_Init+0xf0>
 8002be6:	4f1c      	ldr	r7, [pc, #112]	; (8002c58 <HAL_GPIO_Init+0x150>)
 8002be8:	3201      	adds	r2, #1
 8002bea:	42b8      	cmp	r0, r7
 8002bec:	d004      	beq.n	8002bf8 <HAL_GPIO_Init+0xf0>
 8002bee:	4f1b      	ldr	r7, [pc, #108]	; (8002c5c <HAL_GPIO_Init+0x154>)
 8002bf0:	3201      	adds	r2, #1
 8002bf2:	42b8      	cmp	r0, r7
 8002bf4:	d000      	beq.n	8002bf8 <HAL_GPIO_Init+0xf0>
 8002bf6:	3204      	adds	r2, #4
 8002bf8:	40aa      	lsls	r2, r5
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8002bfa:	4667      	mov	r7, ip
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002bfc:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002bfe:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 8002c00:	4a17      	ldr	r2, [pc, #92]	; (8002c60 <HAL_GPIO_Init+0x158>)
        temp &= ~((uint32_t)iocurrent);
 8002c02:	9c00      	ldr	r4, [sp, #0]
        temp = EXTI->RTSR;
 8002c04:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 8002c06:	9d00      	ldr	r5, [sp, #0]
        temp &= ~((uint32_t)iocurrent);
 8002c08:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 8002c0a:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8002c0c:	02ff      	lsls	r7, r7, #11
 8002c0e:	d401      	bmi.n	8002c14 <HAL_GPIO_Init+0x10c>
        temp &= ~((uint32_t)iocurrent);
 8002c10:	0035      	movs	r5, r6
 8002c12:	4025      	ands	r5, r4
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8002c14:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 8002c16:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 8002c18:	68d6      	ldr	r6, [r2, #12]
          temp |= iocurrent;
 8002c1a:	9d00      	ldr	r5, [sp, #0]
 8002c1c:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8002c1e:	02bf      	lsls	r7, r7, #10
 8002c20:	d401      	bmi.n	8002c26 <HAL_GPIO_Init+0x11e>
        temp &= ~((uint32_t)iocurrent);
 8002c22:	0035      	movs	r5, r6
 8002c24:	4025      	ands	r5, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8002c26:	4667      	mov	r7, ip
        EXTI->FTSR = temp;
 8002c28:	60d5      	str	r5, [r2, #12]
        temp = EXTI->EMR;
 8002c2a:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 8002c2c:	9d00      	ldr	r5, [sp, #0]
 8002c2e:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8002c30:	03bf      	lsls	r7, r7, #14
 8002c32:	d401      	bmi.n	8002c38 <HAL_GPIO_Init+0x130>
        temp &= ~((uint32_t)iocurrent);
 8002c34:	0035      	movs	r5, r6
 8002c36:	4025      	ands	r5, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8002c38:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 8002c3a:	6055      	str	r5, [r2, #4]
        temp = EXTI->IMR;
 8002c3c:	6815      	ldr	r5, [r2, #0]
          temp |= iocurrent;
 8002c3e:	9e00      	ldr	r6, [sp, #0]
 8002c40:	432e      	orrs	r6, r5
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8002c42:	03ff      	lsls	r7, r7, #15
 8002c44:	d401      	bmi.n	8002c4a <HAL_GPIO_Init+0x142>
        temp &= ~((uint32_t)iocurrent);
 8002c46:	4025      	ands	r5, r4
 8002c48:	002e      	movs	r6, r5
        EXTI->IMR = temp;
 8002c4a:	6016      	str	r6, [r2, #0]
    position++;
 8002c4c:	3301      	adds	r3, #1
 8002c4e:	e75e      	b.n	8002b0e <HAL_GPIO_Init+0x6>
 8002c50:	40021000 	.word	0x40021000
 8002c54:	40010000 	.word	0x40010000
 8002c58:	50000400 	.word	0x50000400
 8002c5c:	50000800 	.word	0x50000800
 8002c60:	40010400 	.word	0x40010400

08002c64 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002c64:	2a00      	cmp	r2, #0
 8002c66:	d001      	beq.n	8002c6c <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = GPIO_Pin;
 8002c68:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8002c6a:	4770      	bx	lr
    GPIOx->BRR = GPIO_Pin ;
 8002c6c:	6281      	str	r1, [r0, #40]	; 0x28
}
 8002c6e:	e7fc      	b.n	8002c6a <HAL_GPIO_WritePin+0x6>

08002c70 <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8002c70:	220c      	movs	r2, #12
  tmpreg = RCC->CFGR;
 8002c72:	4b1d      	ldr	r3, [pc, #116]	; (8002ce8 <HAL_RCC_GetSysClockFreq+0x78>)
{
 8002c74:	b570      	push	{r4, r5, r6, lr}
  tmpreg = RCC->CFGR;
 8002c76:	68dc      	ldr	r4, [r3, #12]
  switch (tmpreg & RCC_CFGR_SWS)
 8002c78:	4022      	ands	r2, r4
 8002c7a:	2a08      	cmp	r2, #8
 8002c7c:	d031      	beq.n	8002ce2 <HAL_RCC_GetSysClockFreq+0x72>
 8002c7e:	2a0c      	cmp	r2, #12
 8002c80:	d009      	beq.n	8002c96 <HAL_RCC_GetSysClockFreq+0x26>
 8002c82:	2a04      	cmp	r2, #4
 8002c84:	d125      	bne.n	8002cd2 <HAL_RCC_GetSysClockFreq+0x62>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8002c86:	6818      	ldr	r0, [r3, #0]
      {
        sysclockfreq =  (HSI_VALUE >> 2);
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
 8002c88:	4b18      	ldr	r3, [pc, #96]	; (8002cec <HAL_RCC_GetSysClockFreq+0x7c>)
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8002c8a:	06c0      	lsls	r0, r0, #27
        sysclockfreq =  HSI_VALUE;
 8002c8c:	17c0      	asrs	r0, r0, #31
 8002c8e:	4018      	ands	r0, r3
 8002c90:	4b17      	ldr	r3, [pc, #92]	; (8002cf0 <HAL_RCC_GetSysClockFreq+0x80>)
 8002c92:	18c0      	adds	r0, r0, r3
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
      break;
    }
  }
  return sysclockfreq;
}
 8002c94:	bd70      	pop	{r4, r5, r6, pc}
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8002c96:	02a2      	lsls	r2, r4, #10
 8002c98:	4816      	ldr	r0, [pc, #88]	; (8002cf4 <HAL_RCC_GetSysClockFreq+0x84>)
 8002c9a:	0f12      	lsrs	r2, r2, #28
        pllvco = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8002c9c:	5c80      	ldrb	r0, [r0, r2]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002c9e:	2280      	movs	r2, #128	; 0x80
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8002ca0:	0224      	lsls	r4, r4, #8
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002ca2:	68d9      	ldr	r1, [r3, #12]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8002ca4:	0fa4      	lsrs	r4, r4, #30
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002ca6:	0252      	lsls	r2, r2, #9
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8002ca8:	3401      	adds	r4, #1
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002caa:	4211      	tst	r1, r2
 8002cac:	d009      	beq.n	8002cc2 <HAL_RCC_GetSysClockFreq+0x52>
        pllvco = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8002cae:	4a12      	ldr	r2, [pc, #72]	; (8002cf8 <HAL_RCC_GetSysClockFreq+0x88>)
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	2100      	movs	r1, #0
 8002cb4:	f7fd fb0e 	bl	80002d4 <__aeabi_lmul>
 8002cb8:	0022      	movs	r2, r4
 8002cba:	2300      	movs	r3, #0
 8002cbc:	f7fd faea 	bl	8000294 <__aeabi_uldivmod>
 8002cc0:	e7e8      	b.n	8002c94 <HAL_RCC_GetSysClockFreq+0x24>
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8002cc2:	681a      	ldr	r2, [r3, #0]
 8002cc4:	2310      	movs	r3, #16
 8002cc6:	421a      	tst	r2, r3
 8002cc8:	d001      	beq.n	8002cce <HAL_RCC_GetSysClockFreq+0x5e>
          pllvco = (uint32_t)((((uint64_t)(HSI_VALUE >> 2)) * (uint64_t)pllm) / (uint64_t)plld);
 8002cca:	4a0c      	ldr	r2, [pc, #48]	; (8002cfc <HAL_RCC_GetSysClockFreq+0x8c>)
 8002ccc:	e7f0      	b.n	8002cb0 <HAL_RCC_GetSysClockFreq+0x40>
         pllvco = (uint32_t)(((uint64_t)HSI_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8002cce:	4a08      	ldr	r2, [pc, #32]	; (8002cf0 <HAL_RCC_GetSysClockFreq+0x80>)
 8002cd0:	e7ee      	b.n	8002cb0 <HAL_RCC_GetSysClockFreq+0x40>
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8002cd2:	2080      	movs	r0, #128	; 0x80
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8002cd4:	685b      	ldr	r3, [r3, #4]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8002cd6:	0200      	lsls	r0, r0, #8
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8002cd8:	041b      	lsls	r3, r3, #16
 8002cda:	0f5b      	lsrs	r3, r3, #29
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8002cdc:	3301      	adds	r3, #1
 8002cde:	4098      	lsls	r0, r3
      break;
 8002ce0:	e7d8      	b.n	8002c94 <HAL_RCC_GetSysClockFreq+0x24>
  switch (tmpreg & RCC_CFGR_SWS)
 8002ce2:	4805      	ldr	r0, [pc, #20]	; (8002cf8 <HAL_RCC_GetSysClockFreq+0x88>)
 8002ce4:	e7d6      	b.n	8002c94 <HAL_RCC_GetSysClockFreq+0x24>
 8002ce6:	46c0      	nop			; (mov r8, r8)
 8002ce8:	40021000 	.word	0x40021000
 8002cec:	ff48e500 	.word	0xff48e500
 8002cf0:	00f42400 	.word	0x00f42400
 8002cf4:	08003dfc 	.word	0x08003dfc
 8002cf8:	007a1200 	.word	0x007a1200
 8002cfc:	003d0900 	.word	0x003d0900

08002d00 <HAL_RCC_OscConfig>:
{
 8002d00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d02:	0005      	movs	r5, r0
 8002d04:	b085      	sub	sp, #20
  if(RCC_OscInitStruct == NULL)
 8002d06:	2800      	cmp	r0, #0
 8002d08:	d055      	beq.n	8002db6 <HAL_RCC_OscConfig+0xb6>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002d0a:	230c      	movs	r3, #12
 8002d0c:	4cc0      	ldr	r4, [pc, #768]	; (8003010 <HAL_RCC_OscConfig+0x310>)
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002d0e:	6802      	ldr	r2, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002d10:	68e6      	ldr	r6, [r4, #12]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002d12:	68e7      	ldr	r7, [r4, #12]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002d14:	401e      	ands	r6, r3
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002d16:	2380      	movs	r3, #128	; 0x80
 8002d18:	025b      	lsls	r3, r3, #9
 8002d1a:	0019      	movs	r1, r3
 8002d1c:	401f      	ands	r7, r3
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002d1e:	07d2      	lsls	r2, r2, #31
 8002d20:	d43d      	bmi.n	8002d9e <HAL_RCC_OscConfig+0x9e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002d22:	682b      	ldr	r3, [r5, #0]
 8002d24:	079b      	lsls	r3, r3, #30
 8002d26:	d500      	bpl.n	8002d2a <HAL_RCC_OscConfig+0x2a>
 8002d28:	e086      	b.n	8002e38 <HAL_RCC_OscConfig+0x138>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8002d2a:	682b      	ldr	r3, [r5, #0]
 8002d2c:	06db      	lsls	r3, r3, #27
 8002d2e:	d528      	bpl.n	8002d82 <HAL_RCC_OscConfig+0x82>
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8002d30:	2e00      	cmp	r6, #0
 8002d32:	d000      	beq.n	8002d36 <HAL_RCC_OscConfig+0x36>
 8002d34:	e0df      	b.n	8002ef6 <HAL_RCC_OscConfig+0x1f6>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8002d36:	6823      	ldr	r3, [r4, #0]
 8002d38:	059b      	lsls	r3, r3, #22
 8002d3a:	d502      	bpl.n	8002d42 <HAL_RCC_OscConfig+0x42>
 8002d3c:	69ab      	ldr	r3, [r5, #24]
 8002d3e:	2b00      	cmp	r3, #0
 8002d40:	d039      	beq.n	8002db6 <HAL_RCC_OscConfig+0xb6>
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002d42:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002d44:	6862      	ldr	r2, [r4, #4]
 8002d46:	49b3      	ldr	r1, [pc, #716]	; (8003014 <HAL_RCC_OscConfig+0x314>)
 8002d48:	6a2b      	ldr	r3, [r5, #32]
 8002d4a:	400a      	ands	r2, r1
 8002d4c:	431a      	orrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002d4e:	0b5b      	lsrs	r3, r3, #13
 8002d50:	3301      	adds	r3, #1
 8002d52:	023f      	lsls	r7, r7, #8
 8002d54:	409f      	lsls	r7, r3
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002d56:	6062      	str	r2, [r4, #4]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002d58:	6861      	ldr	r1, [r4, #4]
 8002d5a:	69ea      	ldr	r2, [r5, #28]
 8002d5c:	0209      	lsls	r1, r1, #8
 8002d5e:	0a09      	lsrs	r1, r1, #8
 8002d60:	0612      	lsls	r2, r2, #24
 8002d62:	430a      	orrs	r2, r1
 8002d64:	6062      	str	r2, [r4, #4]
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8002d66:	68e1      	ldr	r1, [r4, #12]
 8002d68:	48ab      	ldr	r0, [pc, #684]	; (8003018 <HAL_RCC_OscConfig+0x318>)
 8002d6a:	060b      	lsls	r3, r1, #24
 8002d6c:	0f1b      	lsrs	r3, r3, #28
 8002d6e:	5cc3      	ldrb	r3, [r0, r3]
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002d70:	4aaa      	ldr	r2, [pc, #680]	; (800301c <HAL_RCC_OscConfig+0x31c>)
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8002d72:	40df      	lsrs	r7, r3
        status = HAL_InitTick (uwTickPrio);
 8002d74:	4baa      	ldr	r3, [pc, #680]	; (8003020 <HAL_RCC_OscConfig+0x320>)
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002d76:	6017      	str	r7, [r2, #0]
        status = HAL_InitTick (uwTickPrio);
 8002d78:	6818      	ldr	r0, [r3, #0]
 8002d7a:	f7ff fe37 	bl	80029ec <HAL_InitTick>
        if(status != HAL_OK)
 8002d7e:	2800      	cmp	r0, #0
 8002d80:	d130      	bne.n	8002de4 <HAL_RCC_OscConfig+0xe4>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002d82:	682b      	ldr	r3, [r5, #0]
 8002d84:	071b      	lsls	r3, r3, #28
 8002d86:	d500      	bpl.n	8002d8a <HAL_RCC_OscConfig+0x8a>
 8002d88:	e0ec      	b.n	8002f64 <HAL_RCC_OscConfig+0x264>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002d8a:	682b      	ldr	r3, [r5, #0]
 8002d8c:	075b      	lsls	r3, r3, #29
 8002d8e:	d500      	bpl.n	8002d92 <HAL_RCC_OscConfig+0x92>
 8002d90:	e10e      	b.n	8002fb0 <HAL_RCC_OscConfig+0x2b0>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002d92:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d000      	beq.n	8002d9a <HAL_RCC_OscConfig+0x9a>
 8002d98:	e193      	b.n	80030c2 <HAL_RCC_OscConfig+0x3c2>
  return HAL_OK;
 8002d9a:	2000      	movs	r0, #0
 8002d9c:	e022      	b.n	8002de4 <HAL_RCC_OscConfig+0xe4>
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002d9e:	2e08      	cmp	r6, #8
 8002da0:	d003      	beq.n	8002daa <HAL_RCC_OscConfig+0xaa>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8002da2:	2e0c      	cmp	r6, #12
 8002da4:	d109      	bne.n	8002dba <HAL_RCC_OscConfig+0xba>
 8002da6:	2f00      	cmp	r7, #0
 8002da8:	d007      	beq.n	8002dba <HAL_RCC_OscConfig+0xba>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002daa:	6823      	ldr	r3, [r4, #0]
 8002dac:	039b      	lsls	r3, r3, #14
 8002dae:	d5b8      	bpl.n	8002d22 <HAL_RCC_OscConfig+0x22>
 8002db0:	686b      	ldr	r3, [r5, #4]
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d1b5      	bne.n	8002d22 <HAL_RCC_OscConfig+0x22>
          return HAL_ERROR;
 8002db6:	2001      	movs	r0, #1
 8002db8:	e014      	b.n	8002de4 <HAL_RCC_OscConfig+0xe4>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002dba:	686a      	ldr	r2, [r5, #4]
 8002dbc:	428a      	cmp	r2, r1
 8002dbe:	d113      	bne.n	8002de8 <HAL_RCC_OscConfig+0xe8>
 8002dc0:	6822      	ldr	r2, [r4, #0]
 8002dc2:	4313      	orrs	r3, r2
 8002dc4:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002dc6:	f7ff fe55 	bl	8002a74 <HAL_GetTick>
 8002dca:	9000      	str	r0, [sp, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002dcc:	2280      	movs	r2, #128	; 0x80
 8002dce:	6823      	ldr	r3, [r4, #0]
 8002dd0:	0292      	lsls	r2, r2, #10
 8002dd2:	4213      	tst	r3, r2
 8002dd4:	d1a5      	bne.n	8002d22 <HAL_RCC_OscConfig+0x22>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002dd6:	f7ff fe4d 	bl	8002a74 <HAL_GetTick>
 8002dda:	9b00      	ldr	r3, [sp, #0]
 8002ddc:	1ac0      	subs	r0, r0, r3
 8002dde:	2864      	cmp	r0, #100	; 0x64
 8002de0:	d9f4      	bls.n	8002dcc <HAL_RCC_OscConfig+0xcc>
            return HAL_TIMEOUT;
 8002de2:	2003      	movs	r0, #3
}
 8002de4:	b005      	add	sp, #20
 8002de6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002de8:	21a0      	movs	r1, #160	; 0xa0
 8002dea:	02c9      	lsls	r1, r1, #11
 8002dec:	428a      	cmp	r2, r1
 8002dee:	d105      	bne.n	8002dfc <HAL_RCC_OscConfig+0xfc>
 8002df0:	2280      	movs	r2, #128	; 0x80
 8002df2:	6821      	ldr	r1, [r4, #0]
 8002df4:	02d2      	lsls	r2, r2, #11
 8002df6:	430a      	orrs	r2, r1
 8002df8:	6022      	str	r2, [r4, #0]
 8002dfa:	e7e1      	b.n	8002dc0 <HAL_RCC_OscConfig+0xc0>
 8002dfc:	6821      	ldr	r1, [r4, #0]
 8002dfe:	4889      	ldr	r0, [pc, #548]	; (8003024 <HAL_RCC_OscConfig+0x324>)
 8002e00:	4001      	ands	r1, r0
 8002e02:	6021      	str	r1, [r4, #0]
 8002e04:	6821      	ldr	r1, [r4, #0]
 8002e06:	400b      	ands	r3, r1
 8002e08:	9303      	str	r3, [sp, #12]
 8002e0a:	9b03      	ldr	r3, [sp, #12]
 8002e0c:	4986      	ldr	r1, [pc, #536]	; (8003028 <HAL_RCC_OscConfig+0x328>)
 8002e0e:	6823      	ldr	r3, [r4, #0]
 8002e10:	400b      	ands	r3, r1
 8002e12:	6023      	str	r3, [r4, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002e14:	2a00      	cmp	r2, #0
 8002e16:	d1d6      	bne.n	8002dc6 <HAL_RCC_OscConfig+0xc6>
        tickstart = HAL_GetTick();
 8002e18:	f7ff fe2c 	bl	8002a74 <HAL_GetTick>
 8002e1c:	9000      	str	r0, [sp, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8002e1e:	2280      	movs	r2, #128	; 0x80
 8002e20:	6823      	ldr	r3, [r4, #0]
 8002e22:	0292      	lsls	r2, r2, #10
 8002e24:	4213      	tst	r3, r2
 8002e26:	d100      	bne.n	8002e2a <HAL_RCC_OscConfig+0x12a>
 8002e28:	e77b      	b.n	8002d22 <HAL_RCC_OscConfig+0x22>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002e2a:	f7ff fe23 	bl	8002a74 <HAL_GetTick>
 8002e2e:	9b00      	ldr	r3, [sp, #0]
 8002e30:	1ac0      	subs	r0, r0, r3
 8002e32:	2864      	cmp	r0, #100	; 0x64
 8002e34:	d9f3      	bls.n	8002e1e <HAL_RCC_OscConfig+0x11e>
 8002e36:	e7d4      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8002e38:	2220      	movs	r2, #32
    hsi_state = RCC_OscInitStruct->HSIState;
 8002e3a:	68eb      	ldr	r3, [r5, #12]
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8002e3c:	4213      	tst	r3, r2
 8002e3e:	d003      	beq.n	8002e48 <HAL_RCC_OscConfig+0x148>
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002e40:	6821      	ldr	r1, [r4, #0]
      hsi_state &= ~RCC_CR_HSIOUTEN;
 8002e42:	4393      	bics	r3, r2
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002e44:	4311      	orrs	r1, r2
 8002e46:	6021      	str	r1, [r4, #0]
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002e48:	2e04      	cmp	r6, #4
 8002e4a:	d003      	beq.n	8002e54 <HAL_RCC_OscConfig+0x154>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8002e4c:	2e0c      	cmp	r6, #12
 8002e4e:	d124      	bne.n	8002e9a <HAL_RCC_OscConfig+0x19a>
 8002e50:	2f00      	cmp	r7, #0
 8002e52:	d122      	bne.n	8002e9a <HAL_RCC_OscConfig+0x19a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 8002e54:	6822      	ldr	r2, [r4, #0]
 8002e56:	0752      	lsls	r2, r2, #29
 8002e58:	d501      	bpl.n	8002e5e <HAL_RCC_OscConfig+0x15e>
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d0ab      	beq.n	8002db6 <HAL_RCC_OscConfig+0xb6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002e5e:	6861      	ldr	r1, [r4, #4]
 8002e60:	692a      	ldr	r2, [r5, #16]
 8002e62:	4872      	ldr	r0, [pc, #456]	; (800302c <HAL_RCC_OscConfig+0x32c>)
 8002e64:	0212      	lsls	r2, r2, #8
 8002e66:	4001      	ands	r1, r0
 8002e68:	430a      	orrs	r2, r1
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002e6a:	2109      	movs	r1, #9
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002e6c:	6062      	str	r2, [r4, #4]
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002e6e:	6822      	ldr	r2, [r4, #0]
 8002e70:	438a      	bics	r2, r1
 8002e72:	4313      	orrs	r3, r2
 8002e74:	6023      	str	r3, [r4, #0]
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002e76:	f7ff fefb 	bl	8002c70 <HAL_RCC_GetSysClockFreq>
 8002e7a:	68e3      	ldr	r3, [r4, #12]
 8002e7c:	4a66      	ldr	r2, [pc, #408]	; (8003018 <HAL_RCC_OscConfig+0x318>)
 8002e7e:	061b      	lsls	r3, r3, #24
 8002e80:	0f1b      	lsrs	r3, r3, #28
 8002e82:	5cd3      	ldrb	r3, [r2, r3]
 8002e84:	4965      	ldr	r1, [pc, #404]	; (800301c <HAL_RCC_OscConfig+0x31c>)
 8002e86:	40d8      	lsrs	r0, r3
      status = HAL_InitTick (uwTickPrio);
 8002e88:	4b65      	ldr	r3, [pc, #404]	; (8003020 <HAL_RCC_OscConfig+0x320>)
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002e8a:	6008      	str	r0, [r1, #0]
      status = HAL_InitTick (uwTickPrio);
 8002e8c:	6818      	ldr	r0, [r3, #0]
 8002e8e:	f7ff fdad 	bl	80029ec <HAL_InitTick>
      if(status != HAL_OK)
 8002e92:	2800      	cmp	r0, #0
 8002e94:	d100      	bne.n	8002e98 <HAL_RCC_OscConfig+0x198>
 8002e96:	e748      	b.n	8002d2a <HAL_RCC_OscConfig+0x2a>
 8002e98:	e7a4      	b.n	8002de4 <HAL_RCC_OscConfig+0xe4>
      if(hsi_state != RCC_HSI_OFF)
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d019      	beq.n	8002ed2 <HAL_RCC_OscConfig+0x1d2>
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002e9e:	2109      	movs	r1, #9
 8002ea0:	6822      	ldr	r2, [r4, #0]
 8002ea2:	438a      	bics	r2, r1
 8002ea4:	4313      	orrs	r3, r2
 8002ea6:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002ea8:	f7ff fde4 	bl	8002a74 <HAL_GetTick>
 8002eac:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002eae:	2204      	movs	r2, #4
 8002eb0:	6823      	ldr	r3, [r4, #0]
 8002eb2:	4213      	tst	r3, r2
 8002eb4:	d007      	beq.n	8002ec6 <HAL_RCC_OscConfig+0x1c6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002eb6:	6862      	ldr	r2, [r4, #4]
 8002eb8:	692b      	ldr	r3, [r5, #16]
 8002eba:	495c      	ldr	r1, [pc, #368]	; (800302c <HAL_RCC_OscConfig+0x32c>)
 8002ebc:	021b      	lsls	r3, r3, #8
 8002ebe:	400a      	ands	r2, r1
 8002ec0:	4313      	orrs	r3, r2
 8002ec2:	6063      	str	r3, [r4, #4]
 8002ec4:	e731      	b.n	8002d2a <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002ec6:	f7ff fdd5 	bl	8002a74 <HAL_GetTick>
 8002eca:	1bc0      	subs	r0, r0, r7
 8002ecc:	2802      	cmp	r0, #2
 8002ece:	d9ee      	bls.n	8002eae <HAL_RCC_OscConfig+0x1ae>
 8002ed0:	e787      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
        __HAL_RCC_HSI_DISABLE();
 8002ed2:	2201      	movs	r2, #1
 8002ed4:	6823      	ldr	r3, [r4, #0]
 8002ed6:	4393      	bics	r3, r2
 8002ed8:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002eda:	f7ff fdcb 	bl	8002a74 <HAL_GetTick>
 8002ede:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002ee0:	2204      	movs	r2, #4
 8002ee2:	6823      	ldr	r3, [r4, #0]
 8002ee4:	4213      	tst	r3, r2
 8002ee6:	d100      	bne.n	8002eea <HAL_RCC_OscConfig+0x1ea>
 8002ee8:	e71f      	b.n	8002d2a <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002eea:	f7ff fdc3 	bl	8002a74 <HAL_GetTick>
 8002eee:	1bc0      	subs	r0, r0, r7
 8002ef0:	2802      	cmp	r0, #2
 8002ef2:	d9f5      	bls.n	8002ee0 <HAL_RCC_OscConfig+0x1e0>
 8002ef4:	e775      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8002ef6:	69ab      	ldr	r3, [r5, #24]
 8002ef8:	2b00      	cmp	r3, #0
 8002efa:	d020      	beq.n	8002f3e <HAL_RCC_OscConfig+0x23e>
        __HAL_RCC_MSI_ENABLE();
 8002efc:	2380      	movs	r3, #128	; 0x80
 8002efe:	6822      	ldr	r2, [r4, #0]
 8002f00:	005b      	lsls	r3, r3, #1
 8002f02:	4313      	orrs	r3, r2
 8002f04:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002f06:	f7ff fdb5 	bl	8002a74 <HAL_GetTick>
 8002f0a:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002f0c:	2280      	movs	r2, #128	; 0x80
 8002f0e:	6823      	ldr	r3, [r4, #0]
 8002f10:	0092      	lsls	r2, r2, #2
 8002f12:	4213      	tst	r3, r2
 8002f14:	d00d      	beq.n	8002f32 <HAL_RCC_OscConfig+0x232>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002f16:	6863      	ldr	r3, [r4, #4]
 8002f18:	4a3e      	ldr	r2, [pc, #248]	; (8003014 <HAL_RCC_OscConfig+0x314>)
 8002f1a:	4013      	ands	r3, r2
 8002f1c:	6a2a      	ldr	r2, [r5, #32]
 8002f1e:	4313      	orrs	r3, r2
 8002f20:	6063      	str	r3, [r4, #4]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002f22:	6862      	ldr	r2, [r4, #4]
 8002f24:	69eb      	ldr	r3, [r5, #28]
 8002f26:	0212      	lsls	r2, r2, #8
 8002f28:	061b      	lsls	r3, r3, #24
 8002f2a:	0a12      	lsrs	r2, r2, #8
 8002f2c:	4313      	orrs	r3, r2
 8002f2e:	6063      	str	r3, [r4, #4]
 8002f30:	e727      	b.n	8002d82 <HAL_RCC_OscConfig+0x82>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002f32:	f7ff fd9f 	bl	8002a74 <HAL_GetTick>
 8002f36:	1bc0      	subs	r0, r0, r7
 8002f38:	2802      	cmp	r0, #2
 8002f3a:	d9e7      	bls.n	8002f0c <HAL_RCC_OscConfig+0x20c>
 8002f3c:	e751      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
        __HAL_RCC_MSI_DISABLE();
 8002f3e:	6823      	ldr	r3, [r4, #0]
 8002f40:	4a3b      	ldr	r2, [pc, #236]	; (8003030 <HAL_RCC_OscConfig+0x330>)
 8002f42:	4013      	ands	r3, r2
 8002f44:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002f46:	f7ff fd95 	bl	8002a74 <HAL_GetTick>
 8002f4a:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8002f4c:	2280      	movs	r2, #128	; 0x80
 8002f4e:	6823      	ldr	r3, [r4, #0]
 8002f50:	0092      	lsls	r2, r2, #2
 8002f52:	4213      	tst	r3, r2
 8002f54:	d100      	bne.n	8002f58 <HAL_RCC_OscConfig+0x258>
 8002f56:	e714      	b.n	8002d82 <HAL_RCC_OscConfig+0x82>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002f58:	f7ff fd8c 	bl	8002a74 <HAL_GetTick>
 8002f5c:	1bc0      	subs	r0, r0, r7
 8002f5e:	2802      	cmp	r0, #2
 8002f60:	d9f4      	bls.n	8002f4c <HAL_RCC_OscConfig+0x24c>
 8002f62:	e73e      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002f64:	696a      	ldr	r2, [r5, #20]
 8002f66:	2301      	movs	r3, #1
 8002f68:	2a00      	cmp	r2, #0
 8002f6a:	d010      	beq.n	8002f8e <HAL_RCC_OscConfig+0x28e>
      __HAL_RCC_LSI_ENABLE();
 8002f6c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002f6e:	4313      	orrs	r3, r2
 8002f70:	6523      	str	r3, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8002f72:	f7ff fd7f 	bl	8002a74 <HAL_GetTick>
 8002f76:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8002f78:	2202      	movs	r2, #2
 8002f7a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002f7c:	4213      	tst	r3, r2
 8002f7e:	d000      	beq.n	8002f82 <HAL_RCC_OscConfig+0x282>
 8002f80:	e703      	b.n	8002d8a <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002f82:	f7ff fd77 	bl	8002a74 <HAL_GetTick>
 8002f86:	1bc0      	subs	r0, r0, r7
 8002f88:	2802      	cmp	r0, #2
 8002f8a:	d9f5      	bls.n	8002f78 <HAL_RCC_OscConfig+0x278>
 8002f8c:	e729      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
      __HAL_RCC_LSI_DISABLE();
 8002f8e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002f90:	439a      	bics	r2, r3
 8002f92:	6522      	str	r2, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8002f94:	f7ff fd6e 	bl	8002a74 <HAL_GetTick>
 8002f98:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8002f9a:	2202      	movs	r2, #2
 8002f9c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002f9e:	4213      	tst	r3, r2
 8002fa0:	d100      	bne.n	8002fa4 <HAL_RCC_OscConfig+0x2a4>
 8002fa2:	e6f2      	b.n	8002d8a <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002fa4:	f7ff fd66 	bl	8002a74 <HAL_GetTick>
 8002fa8:	1bc0      	subs	r0, r0, r7
 8002faa:	2802      	cmp	r0, #2
 8002fac:	d9f5      	bls.n	8002f9a <HAL_RCC_OscConfig+0x29a>
 8002fae:	e718      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002fb0:	2380      	movs	r3, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8002fb2:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002fb4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002fb6:	055b      	lsls	r3, r3, #21
    FlagStatus       pwrclkchanged = RESET;
 8002fb8:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002fba:	421a      	tst	r2, r3
 8002fbc:	d104      	bne.n	8002fc8 <HAL_RCC_OscConfig+0x2c8>
      __HAL_RCC_PWR_CLK_ENABLE();
 8002fbe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002fc0:	4313      	orrs	r3, r2
 8002fc2:	63a3      	str	r3, [r4, #56]	; 0x38
      pwrclkchanged = SET;
 8002fc4:	2301      	movs	r3, #1
 8002fc6:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002fc8:	2280      	movs	r2, #128	; 0x80
 8002fca:	4f1a      	ldr	r7, [pc, #104]	; (8003034 <HAL_RCC_OscConfig+0x334>)
 8002fcc:	0052      	lsls	r2, r2, #1
 8002fce:	683b      	ldr	r3, [r7, #0]
 8002fd0:	4213      	tst	r3, r2
 8002fd2:	d008      	beq.n	8002fe6 <HAL_RCC_OscConfig+0x2e6>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002fd4:	2280      	movs	r2, #128	; 0x80
 8002fd6:	68ab      	ldr	r3, [r5, #8]
 8002fd8:	0052      	lsls	r2, r2, #1
 8002fda:	4293      	cmp	r3, r2
 8002fdc:	d12c      	bne.n	8003038 <HAL_RCC_OscConfig+0x338>
 8002fde:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002fe0:	4313      	orrs	r3, r2
 8002fe2:	6523      	str	r3, [r4, #80]	; 0x50
 8002fe4:	e04d      	b.n	8003082 <HAL_RCC_OscConfig+0x382>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002fe6:	2280      	movs	r2, #128	; 0x80
 8002fe8:	683b      	ldr	r3, [r7, #0]
 8002fea:	0052      	lsls	r2, r2, #1
 8002fec:	4313      	orrs	r3, r2
 8002fee:	603b      	str	r3, [r7, #0]
      tickstart = HAL_GetTick();
 8002ff0:	f7ff fd40 	bl	8002a74 <HAL_GetTick>
 8002ff4:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002ff6:	2280      	movs	r2, #128	; 0x80
 8002ff8:	683b      	ldr	r3, [r7, #0]
 8002ffa:	0052      	lsls	r2, r2, #1
 8002ffc:	4213      	tst	r3, r2
 8002ffe:	d1e9      	bne.n	8002fd4 <HAL_RCC_OscConfig+0x2d4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003000:	f7ff fd38 	bl	8002a74 <HAL_GetTick>
 8003004:	9b01      	ldr	r3, [sp, #4]
 8003006:	1ac0      	subs	r0, r0, r3
 8003008:	2864      	cmp	r0, #100	; 0x64
 800300a:	d9f4      	bls.n	8002ff6 <HAL_RCC_OscConfig+0x2f6>
 800300c:	e6e9      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
 800300e:	46c0      	nop			; (mov r8, r8)
 8003010:	40021000 	.word	0x40021000
 8003014:	ffff1fff 	.word	0xffff1fff
 8003018:	08003dec 	.word	0x08003dec
 800301c:	20000000 	.word	0x20000000
 8003020:	20000008 	.word	0x20000008
 8003024:	fffeffff 	.word	0xfffeffff
 8003028:	fffbffff 	.word	0xfffbffff
 800302c:	ffffe0ff 	.word	0xffffe0ff
 8003030:	fffffeff 	.word	0xfffffeff
 8003034:	40007000 	.word	0x40007000
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003038:	2b00      	cmp	r3, #0
 800303a:	d116      	bne.n	800306a <HAL_RCC_OscConfig+0x36a>
 800303c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800303e:	4a51      	ldr	r2, [pc, #324]	; (8003184 <HAL_RCC_OscConfig+0x484>)
 8003040:	4013      	ands	r3, r2
 8003042:	6523      	str	r3, [r4, #80]	; 0x50
 8003044:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003046:	4a50      	ldr	r2, [pc, #320]	; (8003188 <HAL_RCC_OscConfig+0x488>)
 8003048:	4013      	ands	r3, r2
 800304a:	6523      	str	r3, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 800304c:	f7ff fd12 	bl	8002a74 <HAL_GetTick>
 8003050:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8003052:	2280      	movs	r2, #128	; 0x80
 8003054:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003056:	0092      	lsls	r2, r2, #2
 8003058:	4213      	tst	r3, r2
 800305a:	d01a      	beq.n	8003092 <HAL_RCC_OscConfig+0x392>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800305c:	f7ff fd0a 	bl	8002a74 <HAL_GetTick>
 8003060:	4b4a      	ldr	r3, [pc, #296]	; (800318c <HAL_RCC_OscConfig+0x48c>)
 8003062:	1bc0      	subs	r0, r0, r7
 8003064:	4298      	cmp	r0, r3
 8003066:	d9f4      	bls.n	8003052 <HAL_RCC_OscConfig+0x352>
 8003068:	e6bb      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800306a:	21a0      	movs	r1, #160	; 0xa0
 800306c:	00c9      	lsls	r1, r1, #3
 800306e:	428b      	cmp	r3, r1
 8003070:	d118      	bne.n	80030a4 <HAL_RCC_OscConfig+0x3a4>
 8003072:	2380      	movs	r3, #128	; 0x80
 8003074:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003076:	00db      	lsls	r3, r3, #3
 8003078:	430b      	orrs	r3, r1
 800307a:	6523      	str	r3, [r4, #80]	; 0x50
 800307c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800307e:	431a      	orrs	r2, r3
 8003080:	6522      	str	r2, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8003082:	f7ff fcf7 	bl	8002a74 <HAL_GetTick>
 8003086:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003088:	2280      	movs	r2, #128	; 0x80
 800308a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800308c:	0092      	lsls	r2, r2, #2
 800308e:	4213      	tst	r3, r2
 8003090:	d010      	beq.n	80030b4 <HAL_RCC_OscConfig+0x3b4>
    if(pwrclkchanged == SET)
 8003092:	9b00      	ldr	r3, [sp, #0]
 8003094:	2b01      	cmp	r3, #1
 8003096:	d000      	beq.n	800309a <HAL_RCC_OscConfig+0x39a>
 8003098:	e67b      	b.n	8002d92 <HAL_RCC_OscConfig+0x92>
      __HAL_RCC_PWR_CLK_DISABLE();
 800309a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800309c:	4a3c      	ldr	r2, [pc, #240]	; (8003190 <HAL_RCC_OscConfig+0x490>)
 800309e:	4013      	ands	r3, r2
 80030a0:	63a3      	str	r3, [r4, #56]	; 0x38
 80030a2:	e676      	b.n	8002d92 <HAL_RCC_OscConfig+0x92>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80030a4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80030a6:	4a37      	ldr	r2, [pc, #220]	; (8003184 <HAL_RCC_OscConfig+0x484>)
 80030a8:	4013      	ands	r3, r2
 80030aa:	6523      	str	r3, [r4, #80]	; 0x50
 80030ac:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80030ae:	4a36      	ldr	r2, [pc, #216]	; (8003188 <HAL_RCC_OscConfig+0x488>)
 80030b0:	4013      	ands	r3, r2
 80030b2:	e796      	b.n	8002fe2 <HAL_RCC_OscConfig+0x2e2>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80030b4:	f7ff fcde 	bl	8002a74 <HAL_GetTick>
 80030b8:	4b34      	ldr	r3, [pc, #208]	; (800318c <HAL_RCC_OscConfig+0x48c>)
 80030ba:	1bc0      	subs	r0, r0, r7
 80030bc:	4298      	cmp	r0, r3
 80030be:	d9e3      	bls.n	8003088 <HAL_RCC_OscConfig+0x388>
 80030c0:	e68f      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80030c2:	2e0c      	cmp	r6, #12
 80030c4:	d043      	beq.n	800314e <HAL_RCC_OscConfig+0x44e>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80030c6:	4a33      	ldr	r2, [pc, #204]	; (8003194 <HAL_RCC_OscConfig+0x494>)
 80030c8:	2b02      	cmp	r3, #2
 80030ca:	d12e      	bne.n	800312a <HAL_RCC_OscConfig+0x42a>
        __HAL_RCC_PLL_DISABLE();
 80030cc:	6823      	ldr	r3, [r4, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80030ce:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 80030d0:	4013      	ands	r3, r2
 80030d2:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 80030d4:	f7ff fcce 	bl	8002a74 <HAL_GetTick>
 80030d8:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80030da:	04bf      	lsls	r7, r7, #18
 80030dc:	6823      	ldr	r3, [r4, #0]
 80030de:	423b      	tst	r3, r7
 80030e0:	d11d      	bne.n	800311e <HAL_RCC_OscConfig+0x41e>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030e2:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80030e4:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80030e6:	68e2      	ldr	r2, [r4, #12]
 80030e8:	430b      	orrs	r3, r1
 80030ea:	492b      	ldr	r1, [pc, #172]	; (8003198 <HAL_RCC_OscConfig+0x498>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 80030ec:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030ee:	400a      	ands	r2, r1
 80030f0:	4313      	orrs	r3, r2
 80030f2:	6b2a      	ldr	r2, [r5, #48]	; 0x30
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 80030f4:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030f6:	4313      	orrs	r3, r2
 80030f8:	60e3      	str	r3, [r4, #12]
        __HAL_RCC_PLL_ENABLE();
 80030fa:	2380      	movs	r3, #128	; 0x80
 80030fc:	6822      	ldr	r2, [r4, #0]
 80030fe:	045b      	lsls	r3, r3, #17
 8003100:	4313      	orrs	r3, r2
 8003102:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8003104:	f7ff fcb6 	bl	8002a74 <HAL_GetTick>
 8003108:	0005      	movs	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 800310a:	6823      	ldr	r3, [r4, #0]
 800310c:	4233      	tst	r3, r6
 800310e:	d000      	beq.n	8003112 <HAL_RCC_OscConfig+0x412>
 8003110:	e643      	b.n	8002d9a <HAL_RCC_OscConfig+0x9a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003112:	f7ff fcaf 	bl	8002a74 <HAL_GetTick>
 8003116:	1b40      	subs	r0, r0, r5
 8003118:	2802      	cmp	r0, #2
 800311a:	d9f6      	bls.n	800310a <HAL_RCC_OscConfig+0x40a>
 800311c:	e661      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800311e:	f7ff fca9 	bl	8002a74 <HAL_GetTick>
 8003122:	1b80      	subs	r0, r0, r6
 8003124:	2802      	cmp	r0, #2
 8003126:	d9d9      	bls.n	80030dc <HAL_RCC_OscConfig+0x3dc>
 8003128:	e65b      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
        __HAL_RCC_PLL_DISABLE();
 800312a:	6823      	ldr	r3, [r4, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 800312c:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 800312e:	4013      	ands	r3, r2
 8003130:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8003132:	f7ff fc9f 	bl	8002a74 <HAL_GetTick>
 8003136:	0005      	movs	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003138:	04b6      	lsls	r6, r6, #18
 800313a:	6823      	ldr	r3, [r4, #0]
 800313c:	4233      	tst	r3, r6
 800313e:	d100      	bne.n	8003142 <HAL_RCC_OscConfig+0x442>
 8003140:	e62b      	b.n	8002d9a <HAL_RCC_OscConfig+0x9a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003142:	f7ff fc97 	bl	8002a74 <HAL_GetTick>
 8003146:	1b40      	subs	r0, r0, r5
 8003148:	2802      	cmp	r0, #2
 800314a:	d9f6      	bls.n	800313a <HAL_RCC_OscConfig+0x43a>
 800314c:	e649      	b.n	8002de2 <HAL_RCC_OscConfig+0xe2>
        return HAL_ERROR;
 800314e:	0018      	movs	r0, r3
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003150:	2b01      	cmp	r3, #1
 8003152:	d100      	bne.n	8003156 <HAL_RCC_OscConfig+0x456>
 8003154:	e646      	b.n	8002de4 <HAL_RCC_OscConfig+0xe4>
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003156:	2280      	movs	r2, #128	; 0x80
        pll_config = RCC->CFGR;
 8003158:	68e3      	ldr	r3, [r4, #12]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800315a:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 800315c:	0252      	lsls	r2, r2, #9
 800315e:	401a      	ands	r2, r3
 8003160:	428a      	cmp	r2, r1
 8003162:	d000      	beq.n	8003166 <HAL_RCC_OscConfig+0x466>
 8003164:	e627      	b.n	8002db6 <HAL_RCC_OscConfig+0xb6>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8003166:	22f0      	movs	r2, #240	; 0xf0
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003168:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 800316a:	0392      	lsls	r2, r2, #14
 800316c:	401a      	ands	r2, r3
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800316e:	428a      	cmp	r2, r1
 8003170:	d000      	beq.n	8003174 <HAL_RCC_OscConfig+0x474>
 8003172:	e620      	b.n	8002db6 <HAL_RCC_OscConfig+0xb6>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8003174:	22c0      	movs	r2, #192	; 0xc0
 8003176:	0412      	lsls	r2, r2, #16
 8003178:	4013      	ands	r3, r2
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 800317a:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 800317c:	4293      	cmp	r3, r2
 800317e:	d100      	bne.n	8003182 <HAL_RCC_OscConfig+0x482>
 8003180:	e60b      	b.n	8002d9a <HAL_RCC_OscConfig+0x9a>
 8003182:	e618      	b.n	8002db6 <HAL_RCC_OscConfig+0xb6>
 8003184:	fffffeff 	.word	0xfffffeff
 8003188:	fffffbff 	.word	0xfffffbff
 800318c:	00001388 	.word	0x00001388
 8003190:	efffffff 	.word	0xefffffff
 8003194:	feffffff 	.word	0xfeffffff
 8003198:	ff02ffff 	.word	0xff02ffff

0800319c <HAL_RCC_ClockConfig>:
{
 800319c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800319e:	1e04      	subs	r4, r0, #0
 80031a0:	9101      	str	r1, [sp, #4]
  if(RCC_ClkInitStruct == NULL)
 80031a2:	d101      	bne.n	80031a8 <HAL_RCC_ClockConfig+0xc>
    return HAL_ERROR;
 80031a4:	2001      	movs	r0, #1
}
 80031a6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80031a8:	2501      	movs	r5, #1
 80031aa:	4e5b      	ldr	r6, [pc, #364]	; (8003318 <HAL_RCC_ClockConfig+0x17c>)
 80031ac:	9a01      	ldr	r2, [sp, #4]
 80031ae:	6833      	ldr	r3, [r6, #0]
 80031b0:	402b      	ands	r3, r5
 80031b2:	4293      	cmp	r3, r2
 80031b4:	d331      	bcc.n	800321a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80031b6:	6822      	ldr	r2, [r4, #0]
 80031b8:	0793      	lsls	r3, r2, #30
 80031ba:	d443      	bmi.n	8003244 <HAL_RCC_ClockConfig+0xa8>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80031bc:	07d2      	lsls	r2, r2, #31
 80031be:	d449      	bmi.n	8003254 <HAL_RCC_ClockConfig+0xb8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80031c0:	2501      	movs	r5, #1
 80031c2:	6833      	ldr	r3, [r6, #0]
 80031c4:	9a01      	ldr	r2, [sp, #4]
 80031c6:	402b      	ands	r3, r5
 80031c8:	4293      	cmp	r3, r2
 80031ca:	d909      	bls.n	80031e0 <HAL_RCC_ClockConfig+0x44>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80031cc:	6833      	ldr	r3, [r6, #0]
 80031ce:	43ab      	bics	r3, r5
 80031d0:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80031d2:	f7ff fc4f 	bl	8002a74 <HAL_GetTick>
 80031d6:	0007      	movs	r7, r0
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 80031d8:	6833      	ldr	r3, [r6, #0]
 80031da:	422b      	tst	r3, r5
 80031dc:	d000      	beq.n	80031e0 <HAL_RCC_ClockConfig+0x44>
 80031de:	e08c      	b.n	80032fa <HAL_RCC_ClockConfig+0x15e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80031e0:	6822      	ldr	r2, [r4, #0]
 80031e2:	4d4e      	ldr	r5, [pc, #312]	; (800331c <HAL_RCC_ClockConfig+0x180>)
 80031e4:	0753      	lsls	r3, r2, #29
 80031e6:	d500      	bpl.n	80031ea <HAL_RCC_ClockConfig+0x4e>
 80031e8:	e08f      	b.n	800330a <HAL_RCC_ClockConfig+0x16e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80031ea:	0712      	lsls	r2, r2, #28
 80031ec:	d506      	bpl.n	80031fc <HAL_RCC_ClockConfig+0x60>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80031ee:	68ea      	ldr	r2, [r5, #12]
 80031f0:	6923      	ldr	r3, [r4, #16]
 80031f2:	494b      	ldr	r1, [pc, #300]	; (8003320 <HAL_RCC_ClockConfig+0x184>)
 80031f4:	00db      	lsls	r3, r3, #3
 80031f6:	400a      	ands	r2, r1
 80031f8:	4313      	orrs	r3, r2
 80031fa:	60eb      	str	r3, [r5, #12]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80031fc:	f7ff fd38 	bl	8002c70 <HAL_RCC_GetSysClockFreq>
 8003200:	68eb      	ldr	r3, [r5, #12]
 8003202:	4a48      	ldr	r2, [pc, #288]	; (8003324 <HAL_RCC_ClockConfig+0x188>)
 8003204:	061b      	lsls	r3, r3, #24
 8003206:	0f1b      	lsrs	r3, r3, #28
 8003208:	5cd3      	ldrb	r3, [r2, r3]
 800320a:	4947      	ldr	r1, [pc, #284]	; (8003328 <HAL_RCC_ClockConfig+0x18c>)
 800320c:	40d8      	lsrs	r0, r3
  status = HAL_InitTick(uwTickPrio);
 800320e:	4b47      	ldr	r3, [pc, #284]	; (800332c <HAL_RCC_ClockConfig+0x190>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8003210:	6008      	str	r0, [r1, #0]
  status = HAL_InitTick(uwTickPrio);
 8003212:	6818      	ldr	r0, [r3, #0]
 8003214:	f7ff fbea 	bl	80029ec <HAL_InitTick>
  if(status != HAL_OK)
 8003218:	e7c5      	b.n	80031a6 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800321a:	6833      	ldr	r3, [r6, #0]
 800321c:	9a01      	ldr	r2, [sp, #4]
 800321e:	43ab      	bics	r3, r5
 8003220:	4313      	orrs	r3, r2
 8003222:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8003224:	f7ff fc26 	bl	8002a74 <HAL_GetTick>
 8003228:	0007      	movs	r7, r0
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 800322a:	6833      	ldr	r3, [r6, #0]
 800322c:	9a01      	ldr	r2, [sp, #4]
 800322e:	402b      	ands	r3, r5
 8003230:	4293      	cmp	r3, r2
 8003232:	d0c0      	beq.n	80031b6 <HAL_RCC_ClockConfig+0x1a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003234:	f7ff fc1e 	bl	8002a74 <HAL_GetTick>
 8003238:	4b3d      	ldr	r3, [pc, #244]	; (8003330 <HAL_RCC_ClockConfig+0x194>)
 800323a:	1bc0      	subs	r0, r0, r7
 800323c:	4298      	cmp	r0, r3
 800323e:	d9f4      	bls.n	800322a <HAL_RCC_ClockConfig+0x8e>
        return HAL_TIMEOUT;
 8003240:	2003      	movs	r0, #3
 8003242:	e7b0      	b.n	80031a6 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003244:	20f0      	movs	r0, #240	; 0xf0
 8003246:	4935      	ldr	r1, [pc, #212]	; (800331c <HAL_RCC_ClockConfig+0x180>)
 8003248:	68cb      	ldr	r3, [r1, #12]
 800324a:	4383      	bics	r3, r0
 800324c:	68a0      	ldr	r0, [r4, #8]
 800324e:	4303      	orrs	r3, r0
 8003250:	60cb      	str	r3, [r1, #12]
 8003252:	e7b3      	b.n	80031bc <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003254:	4d31      	ldr	r5, [pc, #196]	; (800331c <HAL_RCC_ClockConfig+0x180>)
 8003256:	6862      	ldr	r2, [r4, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8003258:	682b      	ldr	r3, [r5, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800325a:	2a02      	cmp	r2, #2
 800325c:	d118      	bne.n	8003290 <HAL_RCC_ClockConfig+0xf4>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800325e:	039b      	lsls	r3, r3, #14
 8003260:	d5a0      	bpl.n	80031a4 <HAL_RCC_ClockConfig+0x8>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003262:	2103      	movs	r1, #3
 8003264:	68eb      	ldr	r3, [r5, #12]
 8003266:	438b      	bics	r3, r1
 8003268:	4313      	orrs	r3, r2
 800326a:	60eb      	str	r3, [r5, #12]
    tickstart = HAL_GetTick();
 800326c:	f7ff fc02 	bl	8002a74 <HAL_GetTick>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003270:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 8003272:	0007      	movs	r7, r0
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003274:	2b02      	cmp	r3, #2
 8003276:	d118      	bne.n	80032aa <HAL_RCC_ClockConfig+0x10e>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8003278:	220c      	movs	r2, #12
 800327a:	68eb      	ldr	r3, [r5, #12]
 800327c:	4013      	ands	r3, r2
 800327e:	2b08      	cmp	r3, #8
 8003280:	d09e      	beq.n	80031c0 <HAL_RCC_ClockConfig+0x24>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003282:	f7ff fbf7 	bl	8002a74 <HAL_GetTick>
 8003286:	4b2a      	ldr	r3, [pc, #168]	; (8003330 <HAL_RCC_ClockConfig+0x194>)
 8003288:	1bc0      	subs	r0, r0, r7
 800328a:	4298      	cmp	r0, r3
 800328c:	d9f4      	bls.n	8003278 <HAL_RCC_ClockConfig+0xdc>
 800328e:	e7d7      	b.n	8003240 <HAL_RCC_ClockConfig+0xa4>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003290:	2a03      	cmp	r2, #3
 8003292:	d102      	bne.n	800329a <HAL_RCC_ClockConfig+0xfe>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8003294:	019b      	lsls	r3, r3, #6
 8003296:	d4e4      	bmi.n	8003262 <HAL_RCC_ClockConfig+0xc6>
 8003298:	e784      	b.n	80031a4 <HAL_RCC_ClockConfig+0x8>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 800329a:	2a01      	cmp	r2, #1
 800329c:	d102      	bne.n	80032a4 <HAL_RCC_ClockConfig+0x108>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800329e:	075b      	lsls	r3, r3, #29
 80032a0:	d4df      	bmi.n	8003262 <HAL_RCC_ClockConfig+0xc6>
 80032a2:	e77f      	b.n	80031a4 <HAL_RCC_ClockConfig+0x8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80032a4:	059b      	lsls	r3, r3, #22
 80032a6:	d4dc      	bmi.n	8003262 <HAL_RCC_ClockConfig+0xc6>
 80032a8:	e77c      	b.n	80031a4 <HAL_RCC_ClockConfig+0x8>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80032aa:	2b03      	cmp	r3, #3
 80032ac:	d10b      	bne.n	80032c6 <HAL_RCC_ClockConfig+0x12a>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80032ae:	220c      	movs	r2, #12
 80032b0:	68eb      	ldr	r3, [r5, #12]
 80032b2:	4013      	ands	r3, r2
 80032b4:	4293      	cmp	r3, r2
 80032b6:	d083      	beq.n	80031c0 <HAL_RCC_ClockConfig+0x24>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80032b8:	f7ff fbdc 	bl	8002a74 <HAL_GetTick>
 80032bc:	4b1c      	ldr	r3, [pc, #112]	; (8003330 <HAL_RCC_ClockConfig+0x194>)
 80032be:	1bc0      	subs	r0, r0, r7
 80032c0:	4298      	cmp	r0, r3
 80032c2:	d9f4      	bls.n	80032ae <HAL_RCC_ClockConfig+0x112>
 80032c4:	e7bc      	b.n	8003240 <HAL_RCC_ClockConfig+0xa4>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80032c6:	2b01      	cmp	r3, #1
 80032c8:	d011      	beq.n	80032ee <HAL_RCC_ClockConfig+0x152>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 80032ca:	220c      	movs	r2, #12
 80032cc:	68eb      	ldr	r3, [r5, #12]
 80032ce:	4213      	tst	r3, r2
 80032d0:	d100      	bne.n	80032d4 <HAL_RCC_ClockConfig+0x138>
 80032d2:	e775      	b.n	80031c0 <HAL_RCC_ClockConfig+0x24>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80032d4:	f7ff fbce 	bl	8002a74 <HAL_GetTick>
 80032d8:	4b15      	ldr	r3, [pc, #84]	; (8003330 <HAL_RCC_ClockConfig+0x194>)
 80032da:	1bc0      	subs	r0, r0, r7
 80032dc:	4298      	cmp	r0, r3
 80032de:	d9f4      	bls.n	80032ca <HAL_RCC_ClockConfig+0x12e>
 80032e0:	e7ae      	b.n	8003240 <HAL_RCC_ClockConfig+0xa4>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80032e2:	f7ff fbc7 	bl	8002a74 <HAL_GetTick>
 80032e6:	4b12      	ldr	r3, [pc, #72]	; (8003330 <HAL_RCC_ClockConfig+0x194>)
 80032e8:	1bc0      	subs	r0, r0, r7
 80032ea:	4298      	cmp	r0, r3
 80032ec:	d8a8      	bhi.n	8003240 <HAL_RCC_ClockConfig+0xa4>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80032ee:	220c      	movs	r2, #12
 80032f0:	68eb      	ldr	r3, [r5, #12]
 80032f2:	4013      	ands	r3, r2
 80032f4:	2b04      	cmp	r3, #4
 80032f6:	d1f4      	bne.n	80032e2 <HAL_RCC_ClockConfig+0x146>
 80032f8:	e762      	b.n	80031c0 <HAL_RCC_ClockConfig+0x24>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80032fa:	f7ff fbbb 	bl	8002a74 <HAL_GetTick>
 80032fe:	4b0c      	ldr	r3, [pc, #48]	; (8003330 <HAL_RCC_ClockConfig+0x194>)
 8003300:	1bc0      	subs	r0, r0, r7
 8003302:	4298      	cmp	r0, r3
 8003304:	d800      	bhi.n	8003308 <HAL_RCC_ClockConfig+0x16c>
 8003306:	e767      	b.n	80031d8 <HAL_RCC_ClockConfig+0x3c>
 8003308:	e79a      	b.n	8003240 <HAL_RCC_ClockConfig+0xa4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800330a:	68eb      	ldr	r3, [r5, #12]
 800330c:	4909      	ldr	r1, [pc, #36]	; (8003334 <HAL_RCC_ClockConfig+0x198>)
 800330e:	400b      	ands	r3, r1
 8003310:	68e1      	ldr	r1, [r4, #12]
 8003312:	430b      	orrs	r3, r1
 8003314:	60eb      	str	r3, [r5, #12]
 8003316:	e768      	b.n	80031ea <HAL_RCC_ClockConfig+0x4e>
 8003318:	40022000 	.word	0x40022000
 800331c:	40021000 	.word	0x40021000
 8003320:	ffffc7ff 	.word	0xffffc7ff
 8003324:	08003dec 	.word	0x08003dec
 8003328:	20000000 	.word	0x20000000
 800332c:	20000008 	.word	0x20000008
 8003330:	00001388 	.word	0x00001388
 8003334:	fffff8ff 	.word	0xfffff8ff

08003338 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8003338:	b5f0      	push	{r4, r5, r6, r7, lr}
 800333a:	001d      	movs	r5, r3
 800333c:	0017      	movs	r7, r2
 800333e:	b085      	sub	sp, #20
 8003340:	000e      	movs	r6, r1
 8003342:	0004      	movs	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8003344:	f7ff fb96 	bl	8002a74 <HAL_GetTick>
 8003348:	19ed      	adds	r5, r5, r7
 800334a:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800334c:	f7ff fb92 	bl	8002a74 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8003350:	4b25      	ldr	r3, [pc, #148]	; (80033e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb0>)
  tmp_tickstart = HAL_GetTick();
 8003352:	9001      	str	r0, [sp, #4]
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	015b      	lsls	r3, r3, #5
 8003358:	0d1b      	lsrs	r3, r3, #20
 800335a:	436b      	muls	r3, r5

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800335c:	6822      	ldr	r2, [r4, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 800335e:	9303      	str	r3, [sp, #12]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8003360:	6893      	ldr	r3, [r2, #8]
 8003362:	4033      	ands	r3, r6
 8003364:	429e      	cmp	r6, r3
 8003366:	d001      	beq.n	800336c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 8003368:	2000      	movs	r0, #0
 800336a:	e032      	b.n	80033d2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x9a>
    if (Timeout != HAL_MAX_DELAY)
 800336c:	1c7b      	adds	r3, r7, #1
 800336e:	d0f7      	beq.n	8003360 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8003370:	f7ff fb80 	bl	8002a74 <HAL_GetTick>
 8003374:	9b01      	ldr	r3, [sp, #4]
 8003376:	1ac0      	subs	r0, r0, r3
 8003378:	42a8      	cmp	r0, r5
 800337a:	d32c      	bcc.n	80033d6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x9e>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800337c:	21e0      	movs	r1, #224	; 0xe0
 800337e:	6823      	ldr	r3, [r4, #0]
 8003380:	685a      	ldr	r2, [r3, #4]
 8003382:	438a      	bics	r2, r1
 8003384:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8003386:	2282      	movs	r2, #130	; 0x82
 8003388:	6861      	ldr	r1, [r4, #4]
 800338a:	0052      	lsls	r2, r2, #1
 800338c:	4291      	cmp	r1, r2
 800338e:	d10c      	bne.n	80033aa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x72>
 8003390:	2180      	movs	r1, #128	; 0x80
 8003392:	68a2      	ldr	r2, [r4, #8]
 8003394:	0209      	lsls	r1, r1, #8
 8003396:	428a      	cmp	r2, r1
 8003398:	d003      	beq.n	80033a2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800339a:	2180      	movs	r1, #128	; 0x80
 800339c:	00c9      	lsls	r1, r1, #3
 800339e:	428a      	cmp	r2, r1
 80033a0:	d103      	bne.n	80033aa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x72>
          __HAL_SPI_DISABLE(hspi);
 80033a2:	2140      	movs	r1, #64	; 0x40
 80033a4:	681a      	ldr	r2, [r3, #0]
 80033a6:	438a      	bics	r2, r1
 80033a8:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80033aa:	2180      	movs	r1, #128	; 0x80
 80033ac:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80033ae:	0189      	lsls	r1, r1, #6
 80033b0:	428a      	cmp	r2, r1
 80033b2:	d106      	bne.n	80033c2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x8a>
          SPI_RESET_CRC(hspi);
 80033b4:	6819      	ldr	r1, [r3, #0]
 80033b6:	480d      	ldr	r0, [pc, #52]	; (80033ec <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb4>)
 80033b8:	4001      	ands	r1, r0
 80033ba:	6019      	str	r1, [r3, #0]
 80033bc:	6819      	ldr	r1, [r3, #0]
 80033be:	430a      	orrs	r2, r1
 80033c0:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80033c2:	0023      	movs	r3, r4
 80033c4:	2201      	movs	r2, #1
 80033c6:	3351      	adds	r3, #81	; 0x51
 80033c8:	701a      	strb	r2, [r3, #0]
        __HAL_UNLOCK(hspi);
 80033ca:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 80033cc:	2003      	movs	r0, #3
        __HAL_UNLOCK(hspi);
 80033ce:	3450      	adds	r4, #80	; 0x50
 80033d0:	7023      	strb	r3, [r4, #0]
}
 80033d2:	b005      	add	sp, #20
 80033d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 80033d6:	9b03      	ldr	r3, [sp, #12]
        tmp_timeout = 0U;
 80033d8:	1e5a      	subs	r2, r3, #1
 80033da:	4193      	sbcs	r3, r2
 80033dc:	425b      	negs	r3, r3
 80033de:	401d      	ands	r5, r3
      count--;
 80033e0:	9b03      	ldr	r3, [sp, #12]
 80033e2:	3b01      	subs	r3, #1
 80033e4:	e7ba      	b.n	800335c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 80033e6:	46c0      	nop			; (mov r8, r8)
 80033e8:	20000000 	.word	0x20000000
 80033ec:	ffffdfff 	.word	0xffffdfff

080033f0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80033f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033f2:	0013      	movs	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80033f4:	2282      	movs	r2, #130	; 0x82
{
 80033f6:	0004      	movs	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80033f8:	6840      	ldr	r0, [r0, #4]
 80033fa:	0052      	lsls	r2, r2, #1
 80033fc:	4290      	cmp	r0, r2
 80033fe:	d11e      	bne.n	800343e <SPI_EndRxTransaction+0x4e>
 8003400:	2080      	movs	r0, #128	; 0x80
 8003402:	2580      	movs	r5, #128	; 0x80
 8003404:	68a2      	ldr	r2, [r4, #8]
 8003406:	0200      	lsls	r0, r0, #8
 8003408:	00ed      	lsls	r5, r5, #3
 800340a:	4282      	cmp	r2, r0
 800340c:	d001      	beq.n	8003412 <SPI_EndRxTransaction+0x22>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800340e:	42aa      	cmp	r2, r5
 8003410:	d106      	bne.n	8003420 <SPI_EndRxTransaction+0x30>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8003412:	2740      	movs	r7, #64	; 0x40
 8003414:	6826      	ldr	r6, [r4, #0]
 8003416:	6830      	ldr	r0, [r6, #0]
 8003418:	43b8      	bics	r0, r7
 800341a:	6030      	str	r0, [r6, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800341c:	42aa      	cmp	r2, r5
 800341e:	d00e      	beq.n	800343e <SPI_EndRxTransaction+0x4e>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8003420:	000a      	movs	r2, r1
 8003422:	2180      	movs	r1, #128	; 0x80
 8003424:	0020      	movs	r0, r4
 8003426:	f7ff ff87 	bl	8003338 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800342a:	2800      	cmp	r0, #0
 800342c:	d101      	bne.n	8003432 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800342e:	2000      	movs	r0, #0
}
 8003430:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8003432:	2320      	movs	r3, #32
 8003434:	6d62      	ldr	r2, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8003436:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8003438:	4313      	orrs	r3, r2
 800343a:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800343c:	e7f8      	b.n	8003430 <SPI_EndRxTransaction+0x40>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800343e:	000a      	movs	r2, r1
 8003440:	2101      	movs	r1, #1
 8003442:	e7ef      	b.n	8003424 <SPI_EndRxTransaction+0x34>

08003444 <SPI_EndRxTxTransaction>:
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8003444:	4b16      	ldr	r3, [pc, #88]	; (80034a0 <SPI_EndRxTxTransaction+0x5c>)
{
 8003446:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003448:	0004      	movs	r4, r0
 800344a:	000d      	movs	r5, r1
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800344c:	6818      	ldr	r0, [r3, #0]
 800344e:	4915      	ldr	r1, [pc, #84]	; (80034a4 <SPI_EndRxTxTransaction+0x60>)
{
 8003450:	0016      	movs	r6, r2
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8003452:	f7fc fe59 	bl	8000108 <__udivsi3>
 8003456:	23fa      	movs	r3, #250	; 0xfa
 8003458:	009b      	lsls	r3, r3, #2
 800345a:	4343      	muls	r3, r0
 800345c:	9301      	str	r3, [sp, #4]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800345e:	2382      	movs	r3, #130	; 0x82
 8003460:	6861      	ldr	r1, [r4, #4]
      if (count == 0U)
      {
        break;
      }
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8003462:	2280      	movs	r2, #128	; 0x80
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8003464:	005b      	lsls	r3, r3, #1
 8003466:	4299      	cmp	r1, r3
 8003468:	d10d      	bne.n	8003486 <SPI_EndRxTxTransaction+0x42>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800346a:	0033      	movs	r3, r6
 800346c:	002a      	movs	r2, r5
 800346e:	2180      	movs	r1, #128	; 0x80
 8003470:	0020      	movs	r0, r4
 8003472:	f7ff ff61 	bl	8003338 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8003476:	2800      	cmp	r0, #0
 8003478:	d00f      	beq.n	800349a <SPI_EndRxTxTransaction+0x56>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800347a:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
 800347c:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800347e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8003480:	4313      	orrs	r3, r2
 8003482:	6563      	str	r3, [r4, #84]	; 0x54
  }

  return HAL_OK;
}
 8003484:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
      if (count == 0U)
 8003486:	9b01      	ldr	r3, [sp, #4]
 8003488:	2b00      	cmp	r3, #0
 800348a:	d006      	beq.n	800349a <SPI_EndRxTxTransaction+0x56>
      count--;
 800348c:	9b01      	ldr	r3, [sp, #4]
 800348e:	3b01      	subs	r3, #1
 8003490:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8003492:	6823      	ldr	r3, [r4, #0]
 8003494:	689b      	ldr	r3, [r3, #8]
 8003496:	4213      	tst	r3, r2
 8003498:	d1f5      	bne.n	8003486 <SPI_EndRxTxTransaction+0x42>
  return HAL_OK;
 800349a:	2000      	movs	r0, #0
 800349c:	e7f2      	b.n	8003484 <SPI_EndRxTxTransaction+0x40>
 800349e:	46c0      	nop			; (mov r8, r8)
 80034a0:	20000000 	.word	0x20000000
 80034a4:	016e3600 	.word	0x016e3600

080034a8 <HAL_SPI_Init>:
{
 80034a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034aa:	0004      	movs	r4, r0
    return HAL_ERROR;
 80034ac:	2001      	movs	r0, #1
  if (hspi == NULL)
 80034ae:	2c00      	cmp	r4, #0
 80034b0:	d050      	beq.n	8003554 <HAL_SPI_Init+0xac>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80034b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d14e      	bne.n	8003556 <HAL_SPI_Init+0xae>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80034b8:	2282      	movs	r2, #130	; 0x82
 80034ba:	6861      	ldr	r1, [r4, #4]
 80034bc:	0052      	lsls	r2, r2, #1
 80034be:	4291      	cmp	r1, r2
 80034c0:	d000      	beq.n	80034c4 <HAL_SPI_Init+0x1c>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80034c2:	61e3      	str	r3, [r4, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80034c4:	2300      	movs	r3, #0
  if (hspi->State == HAL_SPI_STATE_RESET)
 80034c6:	0025      	movs	r5, r4
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80034c8:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80034ca:	3551      	adds	r5, #81	; 0x51
 80034cc:	782b      	ldrb	r3, [r5, #0]
 80034ce:	b2da      	uxtb	r2, r3
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d105      	bne.n	80034e0 <HAL_SPI_Init+0x38>
    hspi->Lock = HAL_UNLOCKED;
 80034d4:	0023      	movs	r3, r4
 80034d6:	3350      	adds	r3, #80	; 0x50
    HAL_SPI_MspInit(hspi);
 80034d8:	0020      	movs	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 80034da:	701a      	strb	r2, [r3, #0]
    HAL_SPI_MspInit(hspi);
 80034dc:	f7ff f9dc 	bl	8002898 <HAL_SPI_MspInit>
  hspi->State = HAL_SPI_STATE_BUSY;
 80034e0:	2602      	movs	r6, #2
  __HAL_SPI_DISABLE(hspi);
 80034e2:	2240      	movs	r2, #64	; 0x40
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80034e4:	2082      	movs	r0, #130	; 0x82
 80034e6:	2784      	movs	r7, #132	; 0x84
  hspi->State = HAL_SPI_STATE_BUSY;
 80034e8:	702e      	strb	r6, [r5, #0]
  __HAL_SPI_DISABLE(hspi);
 80034ea:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80034ec:	0040      	lsls	r0, r0, #1
  __HAL_SPI_DISABLE(hspi);
 80034ee:	680b      	ldr	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80034f0:	023f      	lsls	r7, r7, #8
  __HAL_SPI_DISABLE(hspi);
 80034f2:	4393      	bics	r3, r2
 80034f4:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80034f6:	6863      	ldr	r3, [r4, #4]
 80034f8:	69a2      	ldr	r2, [r4, #24]
 80034fa:	4003      	ands	r3, r0
 80034fc:	68a0      	ldr	r0, [r4, #8]
 80034fe:	4038      	ands	r0, r7
 8003500:	2780      	movs	r7, #128	; 0x80
 8003502:	4303      	orrs	r3, r0
 8003504:	68e0      	ldr	r0, [r4, #12]
 8003506:	013f      	lsls	r7, r7, #4
 8003508:	4038      	ands	r0, r7
 800350a:	4303      	orrs	r3, r0
 800350c:	6920      	ldr	r0, [r4, #16]
 800350e:	2738      	movs	r7, #56	; 0x38
 8003510:	4030      	ands	r0, r6
 8003512:	4303      	orrs	r3, r0
 8003514:	6960      	ldr	r0, [r4, #20]
 8003516:	3e01      	subs	r6, #1
 8003518:	4030      	ands	r0, r6
 800351a:	4303      	orrs	r3, r0
 800351c:	2080      	movs	r0, #128	; 0x80
 800351e:	0080      	lsls	r0, r0, #2
 8003520:	4010      	ands	r0, r2
 8003522:	4303      	orrs	r3, r0
 8003524:	69e0      	ldr	r0, [r4, #28]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8003526:	0c12      	lsrs	r2, r2, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8003528:	4038      	ands	r0, r7
 800352a:	4303      	orrs	r3, r0
 800352c:	6a20      	ldr	r0, [r4, #32]
 800352e:	3748      	adds	r7, #72	; 0x48
 8003530:	4038      	ands	r0, r7
 8003532:	2780      	movs	r7, #128	; 0x80
 8003534:	4303      	orrs	r3, r0
 8003536:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8003538:	01bf      	lsls	r7, r7, #6
 800353a:	4038      	ands	r0, r7
 800353c:	4303      	orrs	r3, r0
 800353e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8003540:	2304      	movs	r3, #4
 8003542:	2010      	movs	r0, #16
 8003544:	401a      	ands	r2, r3
 8003546:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003548:	4003      	ands	r3, r0
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800354a:	2000      	movs	r0, #0
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800354c:	431a      	orrs	r2, r3
 800354e:	604a      	str	r2, [r1, #4]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8003550:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8003552:	702e      	strb	r6, [r5, #0]
}
 8003554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8003556:	2300      	movs	r3, #0
 8003558:	6123      	str	r3, [r4, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800355a:	6163      	str	r3, [r4, #20]
 800355c:	e7b2      	b.n	80034c4 <HAL_SPI_Init+0x1c>

0800355e <HAL_SPI_TransmitReceive>:
{
 800355e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003560:	001e      	movs	r6, r3
  __HAL_LOCK(hspi);
 8003562:	0003      	movs	r3, r0
 8003564:	3350      	adds	r3, #80	; 0x50
{
 8003566:	0017      	movs	r7, r2
  __HAL_LOCK(hspi);
 8003568:	781a      	ldrb	r2, [r3, #0]
{
 800356a:	0004      	movs	r4, r0
 800356c:	000d      	movs	r5, r1
  __HAL_LOCK(hspi);
 800356e:	2002      	movs	r0, #2
{
 8003570:	b085      	sub	sp, #20
  __HAL_LOCK(hspi);
 8003572:	2a01      	cmp	r2, #1
 8003574:	d100      	bne.n	8003578 <HAL_SPI_TransmitReceive+0x1a>
 8003576:	e094      	b.n	80036a2 <HAL_SPI_TransmitReceive+0x144>
 8003578:	2201      	movs	r2, #1
 800357a:	701a      	strb	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800357c:	f7ff fa7a 	bl	8002a74 <HAL_GetTick>
  tmp_state           = hspi->State;
 8003580:	0023      	movs	r3, r4
  tickstart = HAL_GetTick();
 8003582:	9001      	str	r0, [sp, #4]
  tmp_state           = hspi->State;
 8003584:	3351      	adds	r3, #81	; 0x51
 8003586:	781b      	ldrb	r3, [r3, #0]
  tmp_mode            = hspi->Init.Mode;
 8003588:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 800358a:	b2da      	uxtb	r2, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800358c:	2b01      	cmp	r3, #1
 800358e:	d00c      	beq.n	80035aa <HAL_SPI_TransmitReceive+0x4c>
 8003590:	2382      	movs	r3, #130	; 0x82
    errorcode = HAL_BUSY;
 8003592:	2002      	movs	r0, #2
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8003594:	005b      	lsls	r3, r3, #1
 8003596:	4299      	cmp	r1, r3
 8003598:	d000      	beq.n	800359c <HAL_SPI_TransmitReceive+0x3e>
 800359a:	e07f      	b.n	800369c <HAL_SPI_TransmitReceive+0x13e>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800359c:	68a3      	ldr	r3, [r4, #8]
 800359e:	2b00      	cmp	r3, #0
 80035a0:	d000      	beq.n	80035a4 <HAL_SPI_TransmitReceive+0x46>
 80035a2:	e07b      	b.n	800369c <HAL_SPI_TransmitReceive+0x13e>
 80035a4:	2a04      	cmp	r2, #4
 80035a6:	d000      	beq.n	80035aa <HAL_SPI_TransmitReceive+0x4c>
 80035a8:	e078      	b.n	800369c <HAL_SPI_TransmitReceive+0x13e>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80035aa:	2d00      	cmp	r5, #0
 80035ac:	d101      	bne.n	80035b2 <HAL_SPI_TransmitReceive+0x54>
    errorcode = HAL_ERROR;
 80035ae:	2001      	movs	r0, #1
    goto error;
 80035b0:	e074      	b.n	800369c <HAL_SPI_TransmitReceive+0x13e>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80035b2:	2f00      	cmp	r7, #0
 80035b4:	d0fb      	beq.n	80035ae <HAL_SPI_TransmitReceive+0x50>
 80035b6:	2e00      	cmp	r6, #0
 80035b8:	d0f9      	beq.n	80035ae <HAL_SPI_TransmitReceive+0x50>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80035ba:	0023      	movs	r3, r4
 80035bc:	3351      	adds	r3, #81	; 0x51
 80035be:	781a      	ldrb	r2, [r3, #0]
 80035c0:	2a04      	cmp	r2, #4
 80035c2:	d001      	beq.n	80035c8 <HAL_SPI_TransmitReceive+0x6a>
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80035c4:	2205      	movs	r2, #5
 80035c6:	701a      	strb	r2, [r3, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80035c8:	2300      	movs	r3, #0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80035ca:	2240      	movs	r2, #64	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80035cc:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 80035ce:	6423      	str	r3, [r4, #64]	; 0x40
  hspi->TxISR       = NULL;
 80035d0:	6463      	str	r3, [r4, #68]	; 0x44
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80035d2:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80035d4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80035d6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80035d8:	6818      	ldr	r0, [r3, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80035da:	63a7      	str	r7, [r4, #56]	; 0x38
  hspi->RxXferSize  = Size;
 80035dc:	87a6      	strh	r6, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80035de:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80035e0:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80035e2:	4210      	tst	r0, r2
 80035e4:	d102      	bne.n	80035ec <HAL_SPI_TransmitReceive+0x8e>
    __HAL_SPI_ENABLE(hspi);
 80035e6:	6818      	ldr	r0, [r3, #0]
 80035e8:	4302      	orrs	r2, r0
 80035ea:	601a      	str	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80035ec:	2280      	movs	r2, #128	; 0x80
 80035ee:	68e0      	ldr	r0, [r4, #12]
 80035f0:	0112      	lsls	r2, r2, #4
 80035f2:	4290      	cmp	r0, r2
 80035f4:	d157      	bne.n	80036a6 <HAL_SPI_TransmitReceive+0x148>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80035f6:	2900      	cmp	r1, #0
 80035f8:	d001      	beq.n	80035fe <HAL_SPI_TransmitReceive+0xa0>
 80035fa:	2e01      	cmp	r6, #1
 80035fc:	d107      	bne.n	800360e <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80035fe:	882a      	ldrh	r2, [r5, #0]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8003600:	3502      	adds	r5, #2
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8003602:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8003604:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8003606:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8003608:	3b01      	subs	r3, #1
 800360a:	b29b      	uxth	r3, r3
 800360c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800360e:	2501      	movs	r5, #1
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8003610:	2702      	movs	r7, #2
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8003612:	002e      	movs	r6, r5
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8003614:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8003616:	2b00      	cmp	r3, #0
 8003618:	d10d      	bne.n	8003636 <HAL_SPI_TransmitReceive+0xd8>
 800361a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800361c:	2b00      	cmp	r3, #0
 800361e:	d10a      	bne.n	8003636 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8003620:	0020      	movs	r0, r4
 8003622:	9a01      	ldr	r2, [sp, #4]
 8003624:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003626:	f7ff ff0d 	bl	8003444 <SPI_EndRxTxTransaction>
 800362a:	2800      	cmp	r0, #0
 800362c:	d100      	bne.n	8003630 <HAL_SPI_TransmitReceive+0xd2>
 800362e:	e082      	b.n	8003736 <HAL_SPI_TransmitReceive+0x1d8>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8003630:	2320      	movs	r3, #32
 8003632:	6563      	str	r3, [r4, #84]	; 0x54
 8003634:	e7bb      	b.n	80035ae <HAL_SPI_TransmitReceive+0x50>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8003636:	6821      	ldr	r1, [r4, #0]
 8003638:	688b      	ldr	r3, [r1, #8]
 800363a:	423b      	tst	r3, r7
 800363c:	d00e      	beq.n	800365c <HAL_SPI_TransmitReceive+0xfe>
 800363e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8003640:	2b00      	cmp	r3, #0
 8003642:	d00b      	beq.n	800365c <HAL_SPI_TransmitReceive+0xfe>
 8003644:	2d01      	cmp	r5, #1
 8003646:	d109      	bne.n	800365c <HAL_SPI_TransmitReceive+0xfe>
        txallowed = 0U;
 8003648:	2500      	movs	r5, #0
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800364a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800364c:	881a      	ldrh	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800364e:	3302      	adds	r3, #2
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8003650:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8003652:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8003654:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8003656:	3b01      	subs	r3, #1
 8003658:	b29b      	uxth	r3, r3
 800365a:	86e3      	strh	r3, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800365c:	688b      	ldr	r3, [r1, #8]
 800365e:	001a      	movs	r2, r3
 8003660:	4032      	ands	r2, r6
 8003662:	4233      	tst	r3, r6
 8003664:	d00c      	beq.n	8003680 <HAL_SPI_TransmitReceive+0x122>
 8003666:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8003668:	2b00      	cmp	r3, #0
 800366a:	d009      	beq.n	8003680 <HAL_SPI_TransmitReceive+0x122>
        txallowed = 1U;
 800366c:	0015      	movs	r5, r2
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800366e:	68c9      	ldr	r1, [r1, #12]
 8003670:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003672:	8019      	strh	r1, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8003674:	3302      	adds	r3, #2
 8003676:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8003678:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800367a:	3b01      	subs	r3, #1
 800367c:	b29b      	uxth	r3, r3
 800367e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8003680:	f7ff f9f8 	bl	8002a74 <HAL_GetTick>
 8003684:	9b01      	ldr	r3, [sp, #4]
 8003686:	1ac0      	subs	r0, r0, r3
 8003688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800368a:	4298      	cmp	r0, r3
 800368c:	d3c2      	bcc.n	8003614 <HAL_SPI_TransmitReceive+0xb6>
 800368e:	3301      	adds	r3, #1
 8003690:	d0c0      	beq.n	8003614 <HAL_SPI_TransmitReceive+0xb6>
        hspi->State = HAL_SPI_STATE_READY;
 8003692:	0023      	movs	r3, r4
 8003694:	2201      	movs	r2, #1
        errorcode = HAL_TIMEOUT;
 8003696:	2003      	movs	r0, #3
        hspi->State = HAL_SPI_STATE_READY;
 8003698:	3351      	adds	r3, #81	; 0x51
 800369a:	701a      	strb	r2, [r3, #0]
  __HAL_UNLOCK(hspi);
 800369c:	2300      	movs	r3, #0
 800369e:	3450      	adds	r4, #80	; 0x50
 80036a0:	7023      	strb	r3, [r4, #0]
}
 80036a2:	b005      	add	sp, #20
 80036a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80036a6:	2900      	cmp	r1, #0
 80036a8:	d001      	beq.n	80036ae <HAL_SPI_TransmitReceive+0x150>
 80036aa:	2e01      	cmp	r6, #1
 80036ac:	d108      	bne.n	80036c0 <HAL_SPI_TransmitReceive+0x162>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80036ae:	782a      	ldrb	r2, [r5, #0]
 80036b0:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80036b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80036b4:	3301      	adds	r3, #1
 80036b6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80036b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80036ba:	3b01      	subs	r3, #1
 80036bc:	b29b      	uxth	r3, r3
 80036be:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80036c0:	2501      	movs	r5, #1
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80036c2:	2702      	movs	r7, #2
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80036c4:	002e      	movs	r6, r5
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80036c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80036c8:	2b00      	cmp	r3, #0
 80036ca:	d102      	bne.n	80036d2 <HAL_SPI_TransmitReceive+0x174>
 80036cc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80036ce:	2b00      	cmp	r3, #0
 80036d0:	d0a6      	beq.n	8003620 <HAL_SPI_TransmitReceive+0xc2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80036d2:	6823      	ldr	r3, [r4, #0]
 80036d4:	689a      	ldr	r2, [r3, #8]
 80036d6:	423a      	tst	r2, r7
 80036d8:	d00f      	beq.n	80036fa <HAL_SPI_TransmitReceive+0x19c>
 80036da:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80036dc:	2a00      	cmp	r2, #0
 80036de:	d00c      	beq.n	80036fa <HAL_SPI_TransmitReceive+0x19c>
 80036e0:	2d01      	cmp	r5, #1
 80036e2:	d10a      	bne.n	80036fa <HAL_SPI_TransmitReceive+0x19c>
        txallowed = 0U;
 80036e4:	2500      	movs	r5, #0
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80036e6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80036e8:	7812      	ldrb	r2, [r2, #0]
 80036ea:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr++;
 80036ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80036ee:	3301      	adds	r3, #1
 80036f0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80036f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80036f4:	3b01      	subs	r3, #1
 80036f6:	b29b      	uxth	r3, r3
 80036f8:	86e3      	strh	r3, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80036fa:	6823      	ldr	r3, [r4, #0]
 80036fc:	6899      	ldr	r1, [r3, #8]
 80036fe:	000a      	movs	r2, r1
 8003700:	4032      	ands	r2, r6
 8003702:	4231      	tst	r1, r6
 8003704:	d00d      	beq.n	8003722 <HAL_SPI_TransmitReceive+0x1c4>
 8003706:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8003708:	2900      	cmp	r1, #0
 800370a:	d00a      	beq.n	8003722 <HAL_SPI_TransmitReceive+0x1c4>
        txallowed = 1U;
 800370c:	0015      	movs	r5, r2
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800370e:	68d9      	ldr	r1, [r3, #12]
 8003710:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003712:	7019      	strb	r1, [r3, #0]
        hspi->pRxBuffPtr++;
 8003714:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003716:	3301      	adds	r3, #1
 8003718:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800371a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800371c:	3b01      	subs	r3, #1
 800371e:	b29b      	uxth	r3, r3
 8003720:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8003722:	f7ff f9a7 	bl	8002a74 <HAL_GetTick>
 8003726:	9b01      	ldr	r3, [sp, #4]
 8003728:	1ac0      	subs	r0, r0, r3
 800372a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800372c:	4298      	cmp	r0, r3
 800372e:	d3ca      	bcc.n	80036c6 <HAL_SPI_TransmitReceive+0x168>
 8003730:	3301      	adds	r3, #1
 8003732:	d0c8      	beq.n	80036c6 <HAL_SPI_TransmitReceive+0x168>
 8003734:	e7ad      	b.n	8003692 <HAL_SPI_TransmitReceive+0x134>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8003736:	68a3      	ldr	r3, [r4, #8]
 8003738:	2b00      	cmp	r3, #0
 800373a:	d106      	bne.n	800374a <HAL_SPI_TransmitReceive+0x1ec>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800373c:	6823      	ldr	r3, [r4, #0]
 800373e:	9003      	str	r0, [sp, #12]
 8003740:	68da      	ldr	r2, [r3, #12]
 8003742:	9203      	str	r2, [sp, #12]
 8003744:	689b      	ldr	r3, [r3, #8]
 8003746:	9303      	str	r3, [sp, #12]
 8003748:	9b03      	ldr	r3, [sp, #12]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800374a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800374c:	2b00      	cmp	r3, #0
 800374e:	d000      	beq.n	8003752 <HAL_SPI_TransmitReceive+0x1f4>
 8003750:	e72d      	b.n	80035ae <HAL_SPI_TransmitReceive+0x50>
    hspi->State = HAL_SPI_STATE_READY;
 8003752:	0023      	movs	r3, r4
 8003754:	2201      	movs	r2, #1
 8003756:	3351      	adds	r3, #81	; 0x51
 8003758:	701a      	strb	r2, [r3, #0]
 800375a:	e79f      	b.n	800369c <HAL_SPI_TransmitReceive+0x13e>

0800375c <HAL_SPI_Receive>:
{
 800375c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hspi->State != HAL_SPI_STATE_READY)
 800375e:	0007      	movs	r7, r0
{
 8003760:	b087      	sub	sp, #28
 8003762:	9103      	str	r1, [sp, #12]
 8003764:	9204      	str	r2, [sp, #16]
  if (hspi->State != HAL_SPI_STATE_READY)
 8003766:	3751      	adds	r7, #81	; 0x51
{
 8003768:	001e      	movs	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800376a:	783b      	ldrb	r3, [r7, #0]
{
 800376c:	0004      	movs	r4, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800376e:	b2dd      	uxtb	r5, r3
 8003770:	2b01      	cmp	r3, #1
 8003772:	d000      	beq.n	8003776 <HAL_SPI_Receive+0x1a>
 8003774:	e096      	b.n	80038a4 <HAL_SPI_Receive+0x148>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8003776:	3304      	adds	r3, #4
 8003778:	6842      	ldr	r2, [r0, #4]
 800377a:	33ff      	adds	r3, #255	; 0xff
 800377c:	429a      	cmp	r2, r3
 800377e:	d10d      	bne.n	800379c <HAL_SPI_Receive+0x40>
 8003780:	6883      	ldr	r3, [r0, #8]
 8003782:	2b00      	cmp	r3, #0
 8003784:	d10a      	bne.n	800379c <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8003786:	3304      	adds	r3, #4
 8003788:	703b      	strb	r3, [r7, #0]
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800378a:	000a      	movs	r2, r1
 800378c:	9b04      	ldr	r3, [sp, #16]
 800378e:	9600      	str	r6, [sp, #0]
 8003790:	f7ff fee5 	bl	800355e <HAL_SPI_TransmitReceive>
 8003794:	0005      	movs	r5, r0
}
 8003796:	0028      	movs	r0, r5
 8003798:	b007      	add	sp, #28
 800379a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  __HAL_LOCK(hspi);
 800379c:	0023      	movs	r3, r4
 800379e:	3350      	adds	r3, #80	; 0x50
 80037a0:	781a      	ldrb	r2, [r3, #0]
 80037a2:	2a01      	cmp	r2, #1
 80037a4:	d100      	bne.n	80037a8 <HAL_SPI_Receive+0x4c>
 80037a6:	e07f      	b.n	80038a8 <HAL_SPI_Receive+0x14c>
 80037a8:	2201      	movs	r2, #1
 80037aa:	701a      	strb	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80037ac:	f7ff f962 	bl	8002a74 <HAL_GetTick>
  if ((pData == NULL) || (Size == 0U))
 80037b0:	9b03      	ldr	r3, [sp, #12]
  tickstart = HAL_GetTick();
 80037b2:	9005      	str	r0, [sp, #20]
  if ((pData == NULL) || (Size == 0U))
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	d065      	beq.n	8003884 <HAL_SPI_Receive+0x128>
 80037b8:	9b04      	ldr	r3, [sp, #16]
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d062      	beq.n	8003884 <HAL_SPI_Receive+0x128>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80037be:	2304      	movs	r3, #4
 80037c0:	703b      	strb	r3, [r7, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80037c2:	2300      	movs	r3, #0
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80037c4:	9a03      	ldr	r2, [sp, #12]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80037c6:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80037c8:	63a2      	str	r2, [r4, #56]	; 0x38
  hspi->RxXferSize  = Size;
 80037ca:	9a04      	ldr	r2, [sp, #16]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80037cc:	68a1      	ldr	r1, [r4, #8]
  hspi->RxXferCount = Size;
 80037ce:	87e2      	strh	r2, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 80037d0:	87a2      	strh	r2, [r4, #60]	; 0x3c
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80037d2:	2280      	movs	r2, #128	; 0x80
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80037d4:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 80037d6:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 80037d8:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->RxISR       = NULL;
 80037da:	6423      	str	r3, [r4, #64]	; 0x40
  hspi->TxISR       = NULL;
 80037dc:	6463      	str	r3, [r4, #68]	; 0x44
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80037de:	0212      	lsls	r2, r2, #8
    __HAL_SPI_DISABLE(hspi);
 80037e0:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80037e2:	4291      	cmp	r1, r2
 80037e4:	d107      	bne.n	80037f6 <HAL_SPI_Receive+0x9a>
    __HAL_SPI_DISABLE(hspi);
 80037e6:	2140      	movs	r1, #64	; 0x40
 80037e8:	681a      	ldr	r2, [r3, #0]
 80037ea:	438a      	bics	r2, r1
 80037ec:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 80037ee:	681a      	ldr	r2, [r3, #0]
 80037f0:	492e      	ldr	r1, [pc, #184]	; (80038ac <HAL_SPI_Receive+0x150>)
 80037f2:	400a      	ands	r2, r1
 80037f4:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80037f6:	2240      	movs	r2, #64	; 0x40
 80037f8:	6819      	ldr	r1, [r3, #0]
 80037fa:	4211      	tst	r1, r2
 80037fc:	d102      	bne.n	8003804 <HAL_SPI_Receive+0xa8>
    __HAL_SPI_ENABLE(hspi);
 80037fe:	6819      	ldr	r1, [r3, #0]
 8003800:	430a      	orrs	r2, r1
 8003802:	601a      	str	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8003804:	68e3      	ldr	r3, [r4, #12]
 8003806:	2b00      	cmp	r3, #0
 8003808:	d020      	beq.n	800384c <HAL_SPI_Receive+0xf0>
    while (hspi->RxXferCount > 0U)
 800380a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800380c:	2b00      	cmp	r3, #0
 800380e:	d020      	beq.n	8003852 <HAL_SPI_Receive+0xf6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8003810:	2101      	movs	r1, #1
 8003812:	6823      	ldr	r3, [r4, #0]
 8003814:	689a      	ldr	r2, [r3, #8]
 8003816:	420a      	tst	r2, r1
 8003818:	d038      	beq.n	800388c <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800381a:	68da      	ldr	r2, [r3, #12]
 800381c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800381e:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8003820:	3302      	adds	r3, #2
 8003822:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8003824:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8003826:	3b01      	subs	r3, #1
 8003828:	b29b      	uxth	r3, r3
 800382a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800382c:	e7ed      	b.n	800380a <HAL_SPI_Receive+0xae>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800382e:	2101      	movs	r1, #1
 8003830:	6823      	ldr	r3, [r4, #0]
 8003832:	689a      	ldr	r2, [r3, #8]
 8003834:	420a      	tst	r2, r1
 8003836:	d01a      	beq.n	800386e <HAL_SPI_Receive+0x112>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8003838:	7b1b      	ldrb	r3, [r3, #12]
 800383a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800383c:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800383e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003840:	185b      	adds	r3, r3, r1
 8003842:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8003844:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8003846:	3b01      	subs	r3, #1
 8003848:	b29b      	uxth	r3, r3
 800384a:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800384c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800384e:	2b00      	cmp	r3, #0
 8003850:	d1ed      	bne.n	800382e <HAL_SPI_Receive+0xd2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8003852:	0031      	movs	r1, r6
 8003854:	0020      	movs	r0, r4
 8003856:	9a05      	ldr	r2, [sp, #20]
 8003858:	f7ff fdca 	bl	80033f0 <SPI_EndRxTransaction>
 800385c:	2800      	cmp	r0, #0
 800385e:	d11e      	bne.n	800389e <HAL_SPI_Receive+0x142>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8003860:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8003862:	2b00      	cmp	r3, #0
 8003864:	d10e      	bne.n	8003884 <HAL_SPI_Receive+0x128>
    hspi->State = HAL_SPI_STATE_READY;
 8003866:	2201      	movs	r2, #1
  HAL_StatusTypeDef errorcode = HAL_OK;
 8003868:	001d      	movs	r5, r3
    hspi->State = HAL_SPI_STATE_READY;
 800386a:	703a      	strb	r2, [r7, #0]
 800386c:	e00a      	b.n	8003884 <HAL_SPI_Receive+0x128>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800386e:	f7ff f901 	bl	8002a74 <HAL_GetTick>
 8003872:	9b05      	ldr	r3, [sp, #20]
 8003874:	1ac0      	subs	r0, r0, r3
 8003876:	42b0      	cmp	r0, r6
 8003878:	d3e8      	bcc.n	800384c <HAL_SPI_Receive+0xf0>
 800387a:	1c73      	adds	r3, r6, #1
 800387c:	d0e6      	beq.n	800384c <HAL_SPI_Receive+0xf0>
          hspi->State = HAL_SPI_STATE_READY;
 800387e:	2301      	movs	r3, #1
          errorcode = HAL_TIMEOUT;
 8003880:	2503      	movs	r5, #3
          hspi->State = HAL_SPI_STATE_READY;
 8003882:	703b      	strb	r3, [r7, #0]
  __HAL_UNLOCK(hspi);
 8003884:	2300      	movs	r3, #0
 8003886:	3450      	adds	r4, #80	; 0x50
 8003888:	7023      	strb	r3, [r4, #0]
  return errorcode;
 800388a:	e784      	b.n	8003796 <HAL_SPI_Receive+0x3a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800388c:	f7ff f8f2 	bl	8002a74 <HAL_GetTick>
 8003890:	9b05      	ldr	r3, [sp, #20]
 8003892:	1ac0      	subs	r0, r0, r3
 8003894:	42b0      	cmp	r0, r6
 8003896:	d3b8      	bcc.n	800380a <HAL_SPI_Receive+0xae>
 8003898:	1c73      	adds	r3, r6, #1
 800389a:	d0b6      	beq.n	800380a <HAL_SPI_Receive+0xae>
 800389c:	e7ef      	b.n	800387e <HAL_SPI_Receive+0x122>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800389e:	2320      	movs	r3, #32
 80038a0:	6563      	str	r3, [r4, #84]	; 0x54
 80038a2:	e7dd      	b.n	8003860 <HAL_SPI_Receive+0x104>
    errorcode = HAL_BUSY;
 80038a4:	2502      	movs	r5, #2
 80038a6:	e7ed      	b.n	8003884 <HAL_SPI_Receive+0x128>
  __HAL_LOCK(hspi);
 80038a8:	2502      	movs	r5, #2
 80038aa:	e774      	b.n	8003796 <HAL_SPI_Receive+0x3a>
 80038ac:	ffffbfff 	.word	0xffffbfff

080038b0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80038b0:	2280      	movs	r2, #128	; 0x80
{
 80038b2:	b510      	push	{r4, lr}
  tmpcr1 = TIMx->CR1;
 80038b4:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80038b6:	05d2      	lsls	r2, r2, #23
 80038b8:	4290      	cmp	r0, r2
 80038ba:	d002      	beq.n	80038c2 <TIM_Base_SetConfig+0x12>
 80038bc:	4c0d      	ldr	r4, [pc, #52]	; (80038f4 <TIM_Base_SetConfig+0x44>)
 80038be:	42a0      	cmp	r0, r4
 80038c0:	d10c      	bne.n	80038dc <TIM_Base_SetConfig+0x2c>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80038c2:	2470      	movs	r4, #112	; 0x70
 80038c4:	43a3      	bics	r3, r4
    tmpcr1 |= Structure->CounterMode;
 80038c6:	684c      	ldr	r4, [r1, #4]
 80038c8:	4323      	orrs	r3, r4
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80038ca:	4290      	cmp	r0, r2
 80038cc:	d002      	beq.n	80038d4 <TIM_Base_SetConfig+0x24>
 80038ce:	4a09      	ldr	r2, [pc, #36]	; (80038f4 <TIM_Base_SetConfig+0x44>)
 80038d0:	4290      	cmp	r0, r2
 80038d2:	d103      	bne.n	80038dc <TIM_Base_SetConfig+0x2c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80038d4:	4a08      	ldr	r2, [pc, #32]	; (80038f8 <TIM_Base_SetConfig+0x48>)
 80038d6:	4013      	ands	r3, r2
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80038d8:	68ca      	ldr	r2, [r1, #12]
 80038da:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80038dc:	2280      	movs	r2, #128	; 0x80
 80038de:	4393      	bics	r3, r2
 80038e0:	690a      	ldr	r2, [r1, #16]
 80038e2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80038e4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80038e6:	688b      	ldr	r3, [r1, #8]
 80038e8:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80038ea:	680b      	ldr	r3, [r1, #0]
 80038ec:	6283      	str	r3, [r0, #40]	; 0x28

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80038ee:	2301      	movs	r3, #1
 80038f0:	6143      	str	r3, [r0, #20]
}
 80038f2:	bd10      	pop	{r4, pc}
 80038f4:	40010800 	.word	0x40010800
 80038f8:	fffffcff 	.word	0xfffffcff

080038fc <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80038fc:	2201      	movs	r2, #1
{
 80038fe:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8003900:	2573      	movs	r5, #115	; 0x73
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003902:	6a03      	ldr	r3, [r0, #32]
 8003904:	4393      	bics	r3, r2
 8003906:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8003908:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 800390a:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800390c:	6982      	ldr	r2, [r0, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800390e:	43aa      	bics	r2, r5
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8003910:	680d      	ldr	r5, [r1, #0]
 8003912:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8003914:	2502      	movs	r5, #2
 8003916:	43ab      	bics	r3, r5
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8003918:	688d      	ldr	r5, [r1, #8]

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800391a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800391c:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800391e:	684a      	ldr	r2, [r1, #4]
  tmpccer |= OC_Config->OCPolarity;
 8003920:	432b      	orrs	r3, r5
  TIMx->CCR1 = OC_Config->Pulse;
 8003922:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8003924:	6203      	str	r3, [r0, #32]
}
 8003926:	bd30      	pop	{r4, r5, pc}

08003928 <TIM_OC2_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003928:	2210      	movs	r2, #16
 800392a:	6a03      	ldr	r3, [r0, #32]
{
 800392c:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800392e:	4393      	bics	r3, r2
 8003930:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8003932:	6a04      	ldr	r4, [r0, #32]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8003934:	4a08      	ldr	r2, [pc, #32]	; (8003958 <TIM_OC2_SetConfig+0x30>)
  tmpcr2 =  TIMx->CR2;
 8003936:	6845      	ldr	r5, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8003938:	6983      	ldr	r3, [r0, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800393a:	4013      	ands	r3, r2

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800393c:	680a      	ldr	r2, [r1, #0]
 800393e:	0212      	lsls	r2, r2, #8
 8003940:	431a      	orrs	r2, r3

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8003942:	2320      	movs	r3, #32
 8003944:	439c      	bics	r4, r3
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8003946:	688b      	ldr	r3, [r1, #8]

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8003948:	6045      	str	r5, [r0, #4]
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800394a:	011b      	lsls	r3, r3, #4

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800394c:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800394e:	684a      	ldr	r2, [r1, #4]
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8003950:	4323      	orrs	r3, r4
  TIMx->CCR2 = OC_Config->Pulse;
 8003952:	6382      	str	r2, [r0, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8003954:	6203      	str	r3, [r0, #32]
}
 8003956:	bd30      	pop	{r4, r5, pc}
 8003958:	ffff8cff 	.word	0xffff8cff

0800395c <TIM_CCxChannelCmd>:

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800395c:	231f      	movs	r3, #31
{
 800395e:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8003960:	2401      	movs	r4, #1
 8003962:	4019      	ands	r1, r3
 8003964:	408c      	lsls	r4, r1

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8003966:	408a      	lsls	r2, r1
  TIMx->CCER &= ~tmp;
 8003968:	6a03      	ldr	r3, [r0, #32]
 800396a:	43a3      	bics	r3, r4
 800396c:	6203      	str	r3, [r0, #32]
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800396e:	6a03      	ldr	r3, [r0, #32]
 8003970:	431a      	orrs	r2, r3
 8003972:	6202      	str	r2, [r0, #32]
}
 8003974:	bd10      	pop	{r4, pc}

08003976 <HAL_TIM_Base_Init>:
{
 8003976:	b570      	push	{r4, r5, r6, lr}
 8003978:	0004      	movs	r4, r0
    return HAL_ERROR;
 800397a:	2001      	movs	r0, #1
  if (htim == NULL)
 800397c:	2c00      	cmp	r4, #0
 800397e:	d01d      	beq.n	80039bc <HAL_TIM_Base_Init+0x46>
  if (htim->State == HAL_TIM_STATE_RESET)
 8003980:	0025      	movs	r5, r4
 8003982:	3539      	adds	r5, #57	; 0x39
 8003984:	782b      	ldrb	r3, [r5, #0]
 8003986:	b2da      	uxtb	r2, r3
 8003988:	2b00      	cmp	r3, #0
 800398a:	d105      	bne.n	8003998 <HAL_TIM_Base_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 800398c:	0023      	movs	r3, r4
 800398e:	3338      	adds	r3, #56	; 0x38
    HAL_TIM_Base_MspInit(htim);
 8003990:	0020      	movs	r0, r4
    htim->Lock = HAL_UNLOCKED;
 8003992:	701a      	strb	r2, [r3, #0]
    HAL_TIM_Base_MspInit(htim);
 8003994:	f7fe ffac 	bl	80028f0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8003998:	2302      	movs	r3, #2
 800399a:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800399c:	6820      	ldr	r0, [r4, #0]
 800399e:	1d21      	adds	r1, r4, #4
 80039a0:	f7ff ff86 	bl	80038b0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80039a4:	0022      	movs	r2, r4
 80039a6:	2301      	movs	r3, #1
  return HAL_OK;
 80039a8:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80039aa:	323e      	adds	r2, #62	; 0x3e
 80039ac:	7013      	strb	r3, [r2, #0]
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80039ae:	343d      	adds	r4, #61	; 0x3d
 80039b0:	3a04      	subs	r2, #4
 80039b2:	7013      	strb	r3, [r2, #0]
 80039b4:	7053      	strb	r3, [r2, #1]
 80039b6:	7093      	strb	r3, [r2, #2]
 80039b8:	7023      	strb	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_READY;
 80039ba:	702b      	strb	r3, [r5, #0]
}
 80039bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080039c0 <HAL_TIM_OC_Start>:
{
 80039c0:	0003      	movs	r3, r0
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80039c2:	0002      	movs	r2, r0
{
 80039c4:	b510      	push	{r4, lr}
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80039c6:	2900      	cmp	r1, #0
 80039c8:	d105      	bne.n	80039d6 <HAL_TIM_OC_Start+0x16>
 80039ca:	323a      	adds	r2, #58	; 0x3a
    return HAL_ERROR;
 80039cc:	2001      	movs	r0, #1
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80039ce:	7814      	ldrb	r4, [r2, #0]
 80039d0:	4284      	cmp	r4, r0
 80039d2:	d00a      	beq.n	80039ea <HAL_TIM_OC_Start+0x2a>
}
 80039d4:	bd10      	pop	{r4, pc}
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80039d6:	2904      	cmp	r1, #4
 80039d8:	d101      	bne.n	80039de <HAL_TIM_OC_Start+0x1e>
 80039da:	323b      	adds	r2, #59	; 0x3b
 80039dc:	e7f6      	b.n	80039cc <HAL_TIM_OC_Start+0xc>
 80039de:	2908      	cmp	r1, #8
 80039e0:	d101      	bne.n	80039e6 <HAL_TIM_OC_Start+0x26>
 80039e2:	323c      	adds	r2, #60	; 0x3c
 80039e4:	e7f2      	b.n	80039cc <HAL_TIM_OC_Start+0xc>
 80039e6:	323d      	adds	r2, #61	; 0x3d
 80039e8:	e7f0      	b.n	80039cc <HAL_TIM_OC_Start+0xc>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80039ea:	2002      	movs	r0, #2
 80039ec:	7010      	strb	r0, [r2, #0]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80039ee:	681c      	ldr	r4, [r3, #0]
 80039f0:	2201      	movs	r2, #1
 80039f2:	0020      	movs	r0, r4
 80039f4:	f7ff ffb2 	bl	800395c <TIM_CCxChannelCmd>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039f8:	2380      	movs	r3, #128	; 0x80
 80039fa:	05db      	lsls	r3, r3, #23
 80039fc:	429c      	cmp	r4, r3
 80039fe:	d002      	beq.n	8003a06 <HAL_TIM_OC_Start+0x46>
 8003a00:	4b09      	ldr	r3, [pc, #36]	; (8003a28 <HAL_TIM_OC_Start+0x68>)
 8003a02:	429c      	cmp	r4, r3
 8003a04:	d10a      	bne.n	8003a1c <HAL_TIM_OC_Start+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8003a06:	2207      	movs	r2, #7
 8003a08:	68a3      	ldr	r3, [r4, #8]
  return HAL_OK;
 8003a0a:	2000      	movs	r0, #0
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8003a0c:	4013      	ands	r3, r2
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8003a0e:	2b06      	cmp	r3, #6
 8003a10:	d0e0      	beq.n	80039d4 <HAL_TIM_OC_Start+0x14>
      __HAL_TIM_ENABLE(htim);
 8003a12:	2301      	movs	r3, #1
 8003a14:	6822      	ldr	r2, [r4, #0]
 8003a16:	4313      	orrs	r3, r2
 8003a18:	6023      	str	r3, [r4, #0]
 8003a1a:	e7db      	b.n	80039d4 <HAL_TIM_OC_Start+0x14>
    __HAL_TIM_ENABLE(htim);
 8003a1c:	2301      	movs	r3, #1
 8003a1e:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
 8003a20:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 8003a22:	4313      	orrs	r3, r2
 8003a24:	6023      	str	r3, [r4, #0]
 8003a26:	e7d5      	b.n	80039d4 <HAL_TIM_OC_Start+0x14>
 8003a28:	40010800 	.word	0x40010800

08003a2c <HAL_TIM_PWM_MspInit>:
 8003a2c:	4770      	bx	lr

08003a2e <HAL_TIM_PWM_Init>:
{
 8003a2e:	b570      	push	{r4, r5, r6, lr}
 8003a30:	0004      	movs	r4, r0
    return HAL_ERROR;
 8003a32:	2001      	movs	r0, #1
  if (htim == NULL)
 8003a34:	2c00      	cmp	r4, #0
 8003a36:	d01d      	beq.n	8003a74 <HAL_TIM_PWM_Init+0x46>
  if (htim->State == HAL_TIM_STATE_RESET)
 8003a38:	0025      	movs	r5, r4
 8003a3a:	3539      	adds	r5, #57	; 0x39
 8003a3c:	782b      	ldrb	r3, [r5, #0]
 8003a3e:	b2da      	uxtb	r2, r3
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d105      	bne.n	8003a50 <HAL_TIM_PWM_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 8003a44:	0023      	movs	r3, r4
 8003a46:	3338      	adds	r3, #56	; 0x38
    HAL_TIM_PWM_MspInit(htim);
 8003a48:	0020      	movs	r0, r4
    htim->Lock = HAL_UNLOCKED;
 8003a4a:	701a      	strb	r2, [r3, #0]
    HAL_TIM_PWM_MspInit(htim);
 8003a4c:	f7ff ffee 	bl	8003a2c <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8003a50:	2302      	movs	r3, #2
 8003a52:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8003a54:	6820      	ldr	r0, [r4, #0]
 8003a56:	1d21      	adds	r1, r4, #4
 8003a58:	f7ff ff2a 	bl	80038b0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8003a5c:	0022      	movs	r2, r4
 8003a5e:	2301      	movs	r3, #1
  return HAL_OK;
 8003a60:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8003a62:	323e      	adds	r2, #62	; 0x3e
 8003a64:	7013      	strb	r3, [r2, #0]
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003a66:	343d      	adds	r4, #61	; 0x3d
 8003a68:	3a04      	subs	r2, #4
 8003a6a:	7013      	strb	r3, [r2, #0]
 8003a6c:	7053      	strb	r3, [r2, #1]
 8003a6e:	7093      	strb	r3, [r2, #2]
 8003a70:	7023      	strb	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_READY;
 8003a72:	702b      	strb	r3, [r5, #0]
}
 8003a74:	bd70      	pop	{r4, r5, r6, pc}

08003a76 <HAL_TIM_PWM_Start>:
 8003a76:	b510      	push	{r4, lr}
 8003a78:	f7ff ffa2 	bl	80039c0 <HAL_TIM_OC_Start>
 8003a7c:	bd10      	pop	{r4, pc}
	...

08003a80 <HAL_TIM_PWM_ConfigChannel>:
{
 8003a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
 8003a82:	0005      	movs	r5, r0
 8003a84:	3538      	adds	r5, #56	; 0x38
{
 8003a86:	0016      	movs	r6, r2
  __HAL_LOCK(htim);
 8003a88:	782a      	ldrb	r2, [r5, #0]
{
 8003a8a:	0003      	movs	r3, r0
 8003a8c:	000c      	movs	r4, r1
  __HAL_LOCK(htim);
 8003a8e:	2002      	movs	r0, #2
 8003a90:	2a01      	cmp	r2, #1
 8003a92:	d00a      	beq.n	8003aaa <HAL_TIM_PWM_ConfigChannel+0x2a>
 8003a94:	3801      	subs	r0, #1
 8003a96:	7028      	strb	r0, [r5, #0]
  switch (Channel)
 8003a98:	2e08      	cmp	r6, #8
 8003a9a:	d052      	beq.n	8003b42 <HAL_TIM_PWM_ConfigChannel+0xc2>
 8003a9c:	d806      	bhi.n	8003aac <HAL_TIM_PWM_ConfigChannel+0x2c>
 8003a9e:	2e00      	cmp	r6, #0
 8003aa0:	d02a      	beq.n	8003af8 <HAL_TIM_PWM_ConfigChannel+0x78>
 8003aa2:	2e04      	cmp	r6, #4
 8003aa4:	d03a      	beq.n	8003b1c <HAL_TIM_PWM_ConfigChannel+0x9c>
  __HAL_UNLOCK(htim);
 8003aa6:	2300      	movs	r3, #0
 8003aa8:	702b      	strb	r3, [r5, #0]
}
 8003aaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  switch (Channel)
 8003aac:	2e0c      	cmp	r6, #12
 8003aae:	d1fa      	bne.n	8003aa6 <HAL_TIM_PWM_ConfigChannel+0x26>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8003ab0:	681b      	ldr	r3, [r3, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8003ab2:	4935      	ldr	r1, [pc, #212]	; (8003b88 <HAL_TIM_PWM_ConfigChannel+0x108>)
 8003ab4:	6a1a      	ldr	r2, [r3, #32]
 8003ab6:	400a      	ands	r2, r1
 8003ab8:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 8003aba:	6a18      	ldr	r0, [r3, #32]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8003abc:	4933      	ldr	r1, [pc, #204]	; (8003b8c <HAL_TIM_PWM_ConfigChannel+0x10c>)
  tmpcr2 =  TIMx->CR2;
 8003abe:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 8003ac0:	69da      	ldr	r2, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8003ac2:	400a      	ands	r2, r1
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8003ac4:	6821      	ldr	r1, [r4, #0]
 8003ac6:	0209      	lsls	r1, r1, #8
 8003ac8:	4311      	orrs	r1, r2
  tmpccer &= ~TIM_CCER_CC4P;
 8003aca:	4a31      	ldr	r2, [pc, #196]	; (8003b90 <HAL_TIM_PWM_ConfigChannel+0x110>)
 8003acc:	4010      	ands	r0, r2
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8003ace:	68a2      	ldr	r2, [r4, #8]
  TIMx->CR2 = tmpcr2;
 8003ad0:	605e      	str	r6, [r3, #4]
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8003ad2:	0312      	lsls	r2, r2, #12
  TIMx->CCMR2 = tmpccmrx;
 8003ad4:	61d9      	str	r1, [r3, #28]
  TIMx->CCR4 = OC_Config->Pulse;
 8003ad6:	6861      	ldr	r1, [r4, #4]
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8003ad8:	4302      	orrs	r2, r0
  TIMx->CCR4 = OC_Config->Pulse;
 8003ada:	6419      	str	r1, [r3, #64]	; 0x40
  TIMx->CCER = tmpccer;
 8003adc:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8003ade:	2280      	movs	r2, #128	; 0x80
 8003ae0:	69d9      	ldr	r1, [r3, #28]
 8003ae2:	0112      	lsls	r2, r2, #4
 8003ae4:	430a      	orrs	r2, r1
 8003ae6:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8003ae8:	69da      	ldr	r2, [r3, #28]
 8003aea:	492a      	ldr	r1, [pc, #168]	; (8003b94 <HAL_TIM_PWM_ConfigChannel+0x114>)
 8003aec:	400a      	ands	r2, r1
 8003aee:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8003af0:	68e2      	ldr	r2, [r4, #12]
 8003af2:	69d9      	ldr	r1, [r3, #28]
 8003af4:	0212      	lsls	r2, r2, #8
 8003af6:	e043      	b.n	8003b80 <HAL_TIM_PWM_ConfigChannel+0x100>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8003af8:	681f      	ldr	r7, [r3, #0]
 8003afa:	0038      	movs	r0, r7
 8003afc:	f7ff fefe 	bl	80038fc <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8003b00:	2308      	movs	r3, #8
 8003b02:	69ba      	ldr	r2, [r7, #24]
 8003b04:	4313      	orrs	r3, r2
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8003b06:	2204      	movs	r2, #4
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8003b08:	61bb      	str	r3, [r7, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8003b0a:	69bb      	ldr	r3, [r7, #24]
 8003b0c:	4393      	bics	r3, r2
 8003b0e:	61bb      	str	r3, [r7, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8003b10:	69bb      	ldr	r3, [r7, #24]
 8003b12:	68e2      	ldr	r2, [r4, #12]
 8003b14:	4313      	orrs	r3, r2
 8003b16:	61bb      	str	r3, [r7, #24]
  HAL_StatusTypeDef status = HAL_OK;
 8003b18:	2000      	movs	r0, #0
      break;
 8003b1a:	e7c4      	b.n	8003aa6 <HAL_TIM_PWM_ConfigChannel+0x26>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8003b1c:	681e      	ldr	r6, [r3, #0]
 8003b1e:	0030      	movs	r0, r6
 8003b20:	f7ff ff02 	bl	8003928 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8003b24:	2380      	movs	r3, #128	; 0x80
 8003b26:	69b2      	ldr	r2, [r6, #24]
 8003b28:	011b      	lsls	r3, r3, #4
 8003b2a:	4313      	orrs	r3, r2
 8003b2c:	61b3      	str	r3, [r6, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8003b2e:	69b3      	ldr	r3, [r6, #24]
 8003b30:	4a18      	ldr	r2, [pc, #96]	; (8003b94 <HAL_TIM_PWM_ConfigChannel+0x114>)
 8003b32:	4013      	ands	r3, r2
 8003b34:	61b3      	str	r3, [r6, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8003b36:	68e3      	ldr	r3, [r4, #12]
 8003b38:	69b2      	ldr	r2, [r6, #24]
 8003b3a:	021b      	lsls	r3, r3, #8
 8003b3c:	4313      	orrs	r3, r2
 8003b3e:	61b3      	str	r3, [r6, #24]
      break;
 8003b40:	e7ea      	b.n	8003b18 <HAL_TIM_PWM_ConfigChannel+0x98>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8003b42:	681b      	ldr	r3, [r3, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8003b44:	4914      	ldr	r1, [pc, #80]	; (8003b98 <HAL_TIM_PWM_ConfigChannel+0x118>)
 8003b46:	6a1a      	ldr	r2, [r3, #32]
 8003b48:	400a      	ands	r2, r1
 8003b4a:	621a      	str	r2, [r3, #32]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8003b4c:	2273      	movs	r2, #115	; 0x73
  tmpccer = TIMx->CCER;
 8003b4e:	6a1f      	ldr	r7, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 8003b50:	6858      	ldr	r0, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 8003b52:	69d9      	ldr	r1, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8003b54:	4391      	bics	r1, r2
  tmpccmrx |= OC_Config->OCMode;
 8003b56:	6822      	ldr	r2, [r4, #0]
 8003b58:	4311      	orrs	r1, r2
  tmpccer &= ~TIM_CCER_CC3P;
 8003b5a:	4a10      	ldr	r2, [pc, #64]	; (8003b9c <HAL_TIM_PWM_ConfigChannel+0x11c>)
 8003b5c:	4017      	ands	r7, r2
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8003b5e:	68a2      	ldr	r2, [r4, #8]
  TIMx->CR2 = tmpcr2;
 8003b60:	6058      	str	r0, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 8003b62:	61d9      	str	r1, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 8003b64:	6861      	ldr	r1, [r4, #4]
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8003b66:	0212      	lsls	r2, r2, #8
  TIMx->CCR3 = OC_Config->Pulse;
 8003b68:	63d9      	str	r1, [r3, #60]	; 0x3c
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8003b6a:	2104      	movs	r1, #4
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8003b6c:	433a      	orrs	r2, r7
  TIMx->CCER = tmpccer;
 8003b6e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8003b70:	69da      	ldr	r2, [r3, #28]
 8003b72:	4316      	orrs	r6, r2
 8003b74:	61de      	str	r6, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8003b76:	69da      	ldr	r2, [r3, #28]
 8003b78:	438a      	bics	r2, r1
 8003b7a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8003b7c:	69da      	ldr	r2, [r3, #28]
 8003b7e:	68e1      	ldr	r1, [r4, #12]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8003b80:	430a      	orrs	r2, r1
 8003b82:	61da      	str	r2, [r3, #28]
 8003b84:	e7c8      	b.n	8003b18 <HAL_TIM_PWM_ConfigChannel+0x98>
 8003b86:	46c0      	nop			; (mov r8, r8)
 8003b88:	ffffefff 	.word	0xffffefff
 8003b8c:	ffff8cff 	.word	0xffff8cff
 8003b90:	ffffdfff 	.word	0xffffdfff
 8003b94:	fffffbff 	.word	0xfffffbff
 8003b98:	fffffeff 	.word	0xfffffeff
 8003b9c:	fffffdff 	.word	0xfffffdff

08003ba0 <HAL_TIM_ConfigClockSource>:
{
 8003ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
 8003ba2:	0005      	movs	r5, r0
 8003ba4:	2202      	movs	r2, #2
 8003ba6:	3538      	adds	r5, #56	; 0x38
 8003ba8:	782c      	ldrb	r4, [r5, #0]
{
 8003baa:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 8003bac:	0010      	movs	r0, r2
 8003bae:	2c01      	cmp	r4, #1
 8003bb0:	d01d      	beq.n	8003bee <HAL_TIM_ConfigClockSource+0x4e>
  htim->State = HAL_TIM_STATE_BUSY;
 8003bb2:	001e      	movs	r6, r3
  __HAL_LOCK(htim);
 8003bb4:	2401      	movs	r4, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8003bb6:	3639      	adds	r6, #57	; 0x39
  __HAL_LOCK(htim);
 8003bb8:	702c      	strb	r4, [r5, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8003bba:	7032      	strb	r2, [r6, #0]
  tmpsmcr = htim->Instance->SMCR;
 8003bbc:	681b      	ldr	r3, [r3, #0]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003bbe:	4848      	ldr	r0, [pc, #288]	; (8003ce0 <HAL_TIM_ConfigClockSource+0x140>)
  tmpsmcr = htim->Instance->SMCR;
 8003bc0:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003bc2:	4002      	ands	r2, r0
  htim->Instance->SMCR = tmpsmcr;
 8003bc4:	609a      	str	r2, [r3, #8]
  switch (sClockSourceConfig->ClockSource)
 8003bc6:	680a      	ldr	r2, [r1, #0]
 8003bc8:	2a60      	cmp	r2, #96	; 0x60
 8003bca:	d05c      	beq.n	8003c86 <HAL_TIM_ConfigClockSource+0xe6>
 8003bcc:	d82f      	bhi.n	8003c2e <HAL_TIM_ConfigClockSource+0x8e>
 8003bce:	2a40      	cmp	r2, #64	; 0x40
 8003bd0:	d100      	bne.n	8003bd4 <HAL_TIM_ConfigClockSource+0x34>
 8003bd2:	e06f      	b.n	8003cb4 <HAL_TIM_ConfigClockSource+0x114>
 8003bd4:	d814      	bhi.n	8003c00 <HAL_TIM_ConfigClockSource+0x60>
 8003bd6:	2a20      	cmp	r2, #32
 8003bd8:	d00c      	beq.n	8003bf4 <HAL_TIM_ConfigClockSource+0x54>
 8003bda:	d809      	bhi.n	8003bf0 <HAL_TIM_ConfigClockSource+0x50>
 8003bdc:	2110      	movs	r1, #16
 8003bde:	0010      	movs	r0, r2
 8003be0:	4388      	bics	r0, r1
 8003be2:	d007      	beq.n	8003bf4 <HAL_TIM_ConfigClockSource+0x54>
 8003be4:	0020      	movs	r0, r4
  htim->State = HAL_TIM_STATE_READY;
 8003be6:	2301      	movs	r3, #1
 8003be8:	7033      	strb	r3, [r6, #0]
  __HAL_UNLOCK(htim);
 8003bea:	2300      	movs	r3, #0
 8003bec:	702b      	strb	r3, [r5, #0]
}
 8003bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
  switch (sClockSourceConfig->ClockSource)
 8003bf0:	2a30      	cmp	r2, #48	; 0x30
 8003bf2:	d1f7      	bne.n	8003be4 <HAL_TIM_ConfigClockSource+0x44>
  tmpsmcr &= ~TIM_SMCR_TS;
 8003bf4:	2070      	movs	r0, #112	; 0x70
  tmpsmcr = TIMx->SMCR;
 8003bf6:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003bf8:	4381      	bics	r1, r0
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003bfa:	430a      	orrs	r2, r1
 8003bfc:	2107      	movs	r1, #7
 8003bfe:	e02f      	b.n	8003c60 <HAL_TIM_ConfigClockSource+0xc0>
  switch (sClockSourceConfig->ClockSource)
 8003c00:	2a50      	cmp	r2, #80	; 0x50
 8003c02:	d1ef      	bne.n	8003be4 <HAL_TIM_ConfigClockSource+0x44>
                               sClockSourceConfig->ClockPolarity,
 8003c04:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 8003c06:	68ca      	ldr	r2, [r1, #12]
  tmpccer = TIMx->CCER;
 8003c08:	6a19      	ldr	r1, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003c0a:	6a1f      	ldr	r7, [r3, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003c0c:	0112      	lsls	r2, r2, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003c0e:	43a7      	bics	r7, r4
 8003c10:	621f      	str	r7, [r3, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003c12:	27f0      	movs	r7, #240	; 0xf0
  tmpccmr1 = TIMx->CCMR1;
 8003c14:	699c      	ldr	r4, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003c16:	43bc      	bics	r4, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003c18:	4322      	orrs	r2, r4
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003c1a:	240a      	movs	r4, #10
  TIMx->CCMR1 = tmpccmr1;
 8003c1c:	619a      	str	r2, [r3, #24]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003c1e:	2270      	movs	r2, #112	; 0x70
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003c20:	43a1      	bics	r1, r4
  tmpccer |= TIM_ICPolarity;
 8003c22:	4301      	orrs	r1, r0
  TIMx->CCER = tmpccer;
 8003c24:	6219      	str	r1, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 8003c26:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003c28:	4391      	bics	r1, r2
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003c2a:	3a19      	subs	r2, #25
 8003c2c:	e018      	b.n	8003c60 <HAL_TIM_ConfigClockSource+0xc0>
  switch (sClockSourceConfig->ClockSource)
 8003c2e:	2780      	movs	r7, #128	; 0x80
  HAL_StatusTypeDef status = HAL_OK;
 8003c30:	2000      	movs	r0, #0
  switch (sClockSourceConfig->ClockSource)
 8003c32:	017f      	lsls	r7, r7, #5
 8003c34:	42ba      	cmp	r2, r7
 8003c36:	d0d6      	beq.n	8003be6 <HAL_TIM_ConfigClockSource+0x46>
 8003c38:	2080      	movs	r0, #128	; 0x80
 8003c3a:	0180      	lsls	r0, r0, #6
 8003c3c:	4282      	cmp	r2, r0
 8003c3e:	d013      	beq.n	8003c68 <HAL_TIM_ConfigClockSource+0xc8>
 8003c40:	0020      	movs	r0, r4
 8003c42:	2a70      	cmp	r2, #112	; 0x70
 8003c44:	d1cf      	bne.n	8003be6 <HAL_TIM_ConfigClockSource+0x46>
  tmpsmcr = TIMx->SMCR;
 8003c46:	6898      	ldr	r0, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003c48:	4a26      	ldr	r2, [pc, #152]	; (8003ce4 <HAL_TIM_ConfigClockSource+0x144>)
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003c4a:	684c      	ldr	r4, [r1, #4]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003c4c:	4010      	ands	r0, r2
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003c4e:	688a      	ldr	r2, [r1, #8]
 8003c50:	68c9      	ldr	r1, [r1, #12]
 8003c52:	4322      	orrs	r2, r4
 8003c54:	0209      	lsls	r1, r1, #8
 8003c56:	430a      	orrs	r2, r1
 8003c58:	4302      	orrs	r2, r0
  TIMx->SMCR = tmpsmcr;
 8003c5a:	609a      	str	r2, [r3, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8003c5c:	2277      	movs	r2, #119	; 0x77
      tmpsmcr = htim->Instance->SMCR;
 8003c5e:	6899      	ldr	r1, [r3, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003c60:	430a      	orrs	r2, r1
  HAL_StatusTypeDef status = HAL_OK;
 8003c62:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 8003c64:	609a      	str	r2, [r3, #8]
}
 8003c66:	e7be      	b.n	8003be6 <HAL_TIM_ConfigClockSource+0x46>
  tmpsmcr = TIMx->SMCR;
 8003c68:	6898      	ldr	r0, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003c6a:	4a1e      	ldr	r2, [pc, #120]	; (8003ce4 <HAL_TIM_ConfigClockSource+0x144>)
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003c6c:	684c      	ldr	r4, [r1, #4]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003c6e:	4010      	ands	r0, r2
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003c70:	688a      	ldr	r2, [r1, #8]
 8003c72:	68c9      	ldr	r1, [r1, #12]
 8003c74:	4322      	orrs	r2, r4
 8003c76:	0209      	lsls	r1, r1, #8
 8003c78:	430a      	orrs	r2, r1
 8003c7a:	4302      	orrs	r2, r0
  TIMx->SMCR = tmpsmcr;
 8003c7c:	609a      	str	r2, [r3, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8003c7e:	2280      	movs	r2, #128	; 0x80
 8003c80:	6899      	ldr	r1, [r3, #8]
 8003c82:	01d2      	lsls	r2, r2, #7
 8003c84:	e7ec      	b.n	8003c60 <HAL_TIM_ConfigClockSource+0xc0>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003c86:	2410      	movs	r4, #16
 8003c88:	6a18      	ldr	r0, [r3, #32]
                               sClockSourceConfig->ClockPolarity,
 8003c8a:	684a      	ldr	r2, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003c8c:	43a0      	bics	r0, r4
                               sClockSourceConfig->ClockFilter);
 8003c8e:	68c9      	ldr	r1, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003c90:	6218      	str	r0, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8003c92:	699c      	ldr	r4, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8003c94:	4f14      	ldr	r7, [pc, #80]	; (8003ce8 <HAL_TIM_ConfigClockSource+0x148>)
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8003c96:	0309      	lsls	r1, r1, #12
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8003c98:	403c      	ands	r4, r7
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8003c9a:	4321      	orrs	r1, r4
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8003c9c:	24a0      	movs	r4, #160	; 0xa0
  tmpccer = TIMx->CCER;
 8003c9e:	6a18      	ldr	r0, [r3, #32]
  tmpccer |= (TIM_ICPolarity << 4U);
 8003ca0:	0112      	lsls	r2, r2, #4
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8003ca2:	43a0      	bics	r0, r4
  tmpccer |= (TIM_ICPolarity << 4U);
 8003ca4:	4302      	orrs	r2, r0
  TIMx->CCMR1 = tmpccmr1 ;
 8003ca6:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 8003ca8:	621a      	str	r2, [r3, #32]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003caa:	2270      	movs	r2, #112	; 0x70
  tmpsmcr = TIMx->SMCR;
 8003cac:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003cae:	4391      	bics	r1, r2
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003cb0:	3a09      	subs	r2, #9
 8003cb2:	e7d5      	b.n	8003c60 <HAL_TIM_ConfigClockSource+0xc0>
                               sClockSourceConfig->ClockPolarity,
 8003cb4:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 8003cb6:	68ca      	ldr	r2, [r1, #12]
  tmpccer = TIMx->CCER;
 8003cb8:	6a19      	ldr	r1, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003cba:	6a1f      	ldr	r7, [r3, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003cbc:	0112      	lsls	r2, r2, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003cbe:	43a7      	bics	r7, r4
 8003cc0:	621f      	str	r7, [r3, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003cc2:	27f0      	movs	r7, #240	; 0xf0
  tmpccmr1 = TIMx->CCMR1;
 8003cc4:	699c      	ldr	r4, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003cc6:	43bc      	bics	r4, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003cc8:	4322      	orrs	r2, r4
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003cca:	240a      	movs	r4, #10
  TIMx->CCMR1 = tmpccmr1;
 8003ccc:	619a      	str	r2, [r3, #24]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003cce:	2270      	movs	r2, #112	; 0x70
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003cd0:	43a1      	bics	r1, r4
  tmpccer |= TIM_ICPolarity;
 8003cd2:	4301      	orrs	r1, r0
  TIMx->CCER = tmpccer;
 8003cd4:	6219      	str	r1, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 8003cd6:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003cd8:	4391      	bics	r1, r2
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003cda:	3a29      	subs	r2, #41	; 0x29
 8003cdc:	e7c0      	b.n	8003c60 <HAL_TIM_ConfigClockSource+0xc0>
 8003cde:	46c0      	nop			; (mov r8, r8)
 8003ce0:	ffff0088 	.word	0xffff0088
 8003ce4:	ffff00ff 	.word	0xffff00ff
 8003ce8:	ffff0fff 	.word	0xffff0fff

08003cec <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8003cec:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8003cee:	0004      	movs	r4, r0
 8003cf0:	2202      	movs	r2, #2
 8003cf2:	3438      	adds	r4, #56	; 0x38
 8003cf4:	7825      	ldrb	r5, [r4, #0]
{
 8003cf6:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 8003cf8:	0010      	movs	r0, r2
 8003cfa:	2d01      	cmp	r5, #1
 8003cfc:	d01a      	beq.n	8003d34 <HAL_TIMEx_MasterConfigSynchronization+0x48>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8003cfe:	001d      	movs	r5, r3

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8003d00:	2670      	movs	r6, #112	; 0x70
  htim->State = HAL_TIM_STATE_BUSY;
 8003d02:	3539      	adds	r5, #57	; 0x39
 8003d04:	702a      	strb	r2, [r5, #0]
  tmpcr2 = htim->Instance->CR2;
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	6858      	ldr	r0, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8003d0a:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8003d0c:	43b0      	bics	r0, r6
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8003d0e:	680e      	ldr	r6, [r1, #0]
 8003d10:	4330      	orrs	r0, r6

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8003d12:	6058      	str	r0, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8003d14:	2080      	movs	r0, #128	; 0x80
 8003d16:	05c0      	lsls	r0, r0, #23
 8003d18:	4283      	cmp	r3, r0
 8003d1a:	d002      	beq.n	8003d22 <HAL_TIMEx_MasterConfigSynchronization+0x36>
 8003d1c:	4806      	ldr	r0, [pc, #24]	; (8003d38 <HAL_TIMEx_MasterConfigSynchronization+0x4c>)
 8003d1e:	4283      	cmp	r3, r0
 8003d20:	d104      	bne.n	8003d2c <HAL_TIMEx_MasterConfigSynchronization+0x40>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8003d22:	2080      	movs	r0, #128	; 0x80
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8003d24:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8003d26:	4382      	bics	r2, r0
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8003d28:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8003d2a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8003d2c:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 8003d2e:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8003d30:	702b      	strb	r3, [r5, #0]
  __HAL_UNLOCK(htim);
 8003d32:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 8003d34:	bd70      	pop	{r4, r5, r6, pc}
 8003d36:	46c0      	nop			; (mov r8, r8)
 8003d38:	40010800 	.word	0x40010800

08003d3c <memset>:
 8003d3c:	0003      	movs	r3, r0
 8003d3e:	1882      	adds	r2, r0, r2
 8003d40:	4293      	cmp	r3, r2
 8003d42:	d100      	bne.n	8003d46 <memset+0xa>
 8003d44:	4770      	bx	lr
 8003d46:	7019      	strb	r1, [r3, #0]
 8003d48:	3301      	adds	r3, #1
 8003d4a:	e7f9      	b.n	8003d40 <memset+0x4>

08003d4c <__libc_init_array>:
 8003d4c:	b570      	push	{r4, r5, r6, lr}
 8003d4e:	2600      	movs	r6, #0
 8003d50:	4c0c      	ldr	r4, [pc, #48]	; (8003d84 <__libc_init_array+0x38>)
 8003d52:	4d0d      	ldr	r5, [pc, #52]	; (8003d88 <__libc_init_array+0x3c>)
 8003d54:	1b64      	subs	r4, r4, r5
 8003d56:	10a4      	asrs	r4, r4, #2
 8003d58:	42a6      	cmp	r6, r4
 8003d5a:	d109      	bne.n	8003d70 <__libc_init_array+0x24>
 8003d5c:	2600      	movs	r6, #0
 8003d5e:	f000 f819 	bl	8003d94 <_init>
 8003d62:	4c0a      	ldr	r4, [pc, #40]	; (8003d8c <__libc_init_array+0x40>)
 8003d64:	4d0a      	ldr	r5, [pc, #40]	; (8003d90 <__libc_init_array+0x44>)
 8003d66:	1b64      	subs	r4, r4, r5
 8003d68:	10a4      	asrs	r4, r4, #2
 8003d6a:	42a6      	cmp	r6, r4
 8003d6c:	d105      	bne.n	8003d7a <__libc_init_array+0x2e>
 8003d6e:	bd70      	pop	{r4, r5, r6, pc}
 8003d70:	00b3      	lsls	r3, r6, #2
 8003d72:	58eb      	ldr	r3, [r5, r3]
 8003d74:	4798      	blx	r3
 8003d76:	3601      	adds	r6, #1
 8003d78:	e7ee      	b.n	8003d58 <__libc_init_array+0xc>
 8003d7a:	00b3      	lsls	r3, r6, #2
 8003d7c:	58eb      	ldr	r3, [r5, r3]
 8003d7e:	4798      	blx	r3
 8003d80:	3601      	adds	r6, #1
 8003d82:	e7f2      	b.n	8003d6a <__libc_init_array+0x1e>
 8003d84:	08003e10 	.word	0x08003e10
 8003d88:	08003e10 	.word	0x08003e10
 8003d8c:	08003e14 	.word	0x08003e14
 8003d90:	08003e10 	.word	0x08003e10

08003d94 <_init>:
 8003d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d96:	46c0      	nop			; (mov r8, r8)
 8003d98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d9a:	bc08      	pop	{r3}
 8003d9c:	469e      	mov	lr, r3
 8003d9e:	4770      	bx	lr

08003da0 <_fini>:
 8003da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003da2:	46c0      	nop			; (mov r8, r8)
 8003da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003da6:	bc08      	pop	{r3}
 8003da8:	469e      	mov	lr, r3
 8003daa:	4770      	bx	lr
